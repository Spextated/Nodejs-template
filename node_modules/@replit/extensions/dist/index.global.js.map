{"version":3,"sources":["../../../node_modules/.pnpm/@root+encoding@1.0.1/node_modules/@root/encoding/browser/bytes.js","../../../node_modules/.pnpm/@root+encoding@1.0.1/node_modules/@root/encoding/browser/hex.js","../../../node_modules/.pnpm/@root+asn1@1.0.0/node_modules/@root/asn1/packer.js","../../../node_modules/.pnpm/@root+asn1@1.0.0/node_modules/@root/asn1/parser.js","../../../node_modules/.pnpm/@root+asn1@1.0.0/node_modules/@root/asn1/index.js","../src/index.ts","../src/types/fs.ts","../src/types/themes.ts","../src/types/data.ts","../src/types/index.ts","../../../node_modules/.pnpm/comlink@4.4.1/node_modules/comlink/src/comlink.ts","../src/util/comlink.ts","../src/util/handshake.ts","../src/api/fs/index.ts","../../../node_modules/.pnpm/@codemirror+state@6.2.0/node_modules/@codemirror/state/dist/index.js","../src/api/fs/watching.ts","../src/api/replDb.ts","../src/api/me.ts","../src/api/theme.ts","../src/api/messages.ts","../src/api/data.ts","../src/api/session.ts","../src/api/experimental/index.ts","../src/api/experimental/auth.ts","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/runtime/webcrypto.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/lib/buffer_utils.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/runtime/base64url.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/util/errors.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/runtime/random.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/lib/crypto_key.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/lib/invalid_key_input.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/runtime/is_key_like.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/lib/is_disjoint.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/lib/is_object.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/runtime/check_key_length.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/runtime/asn1.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/key/import.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/lib/check_key_type.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/lib/validate_crit.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/lib/validate_algorithms.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/jwe/flattened/encrypt.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/runtime/subtle_dsa.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/runtime/get_sign_verify_key.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/runtime/verify.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/jws/flattened/verify.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/jws/compact/verify.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/lib/epoch.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/lib/secs.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/lib/jwt_claims_set.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/jwt/verify.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/util/base64url.js","../../../node_modules/.pnpm/jose@4.14.4_huvwuedo4gdsbrz3c6b3a2uxty/node_modules/jose/dist/browser/util/decode_protected_header.js","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/src/_assert.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/src/crypto.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/src/utils.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/src/_sha2.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/src/_u64.ts","../../../node_modules/.pnpm/@noble+hashes@1.3.0/node_modules/@noble/hashes/src/sha512.ts","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/src/abstract/utils.ts","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/src/abstract/modular.ts","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/src/abstract/curve.ts","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/src/abstract/edwards.ts","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/src/abstract/montgomery.ts","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/src/abstract/hash-to-curve.ts","../../../node_modules/.pnpm/@noble+curves@1.0.0/node_modules/@noble/curves/src/ed25519.ts","../src/polyfills/ed25519.ts","../../../node_modules/.pnpm/b64-lite@1.4.0/node_modules/b64-lite/browser.js","../../../node_modules/.pnpm/b64u-lite@1.1.0/node_modules/b64u-lite/index.mjs","../src/api/experimental/editor.ts","../src/api/internal/index.ts","../src/api/exec.ts","../src/api/debug.ts","../package.json"],"sourcesContent":["'use strict';\n\nvar Enc = module.exports;\n\n// to Binary String\n\nEnc.bufToBin = function(buf) {\n\tvar bin = '';\n\t// cannot use .map() because Uint8Array would return only 0s\n\tbuf.forEach(function(ch) {\n\t\tbin += String.fromCharCode(ch);\n\t});\n\treturn bin;\n};\n\nEnc.strToBin = function(str) {\n\t// Note: TextEncoder might be faster (or it might be slower, I don't know),\n\t// but it doesn't solve the double-utf8 problem and MS Edge still has users without it\n\tvar escstr = encodeURIComponent(str);\n\t// replaces any uri escape sequence, such as %0A,\n\t// with binary escape, such as 0x0A\n\tvar binstr = escstr.replace(/%([0-9A-F]{2})/g, function(_, p1) {\n\t\treturn String.fromCharCode('0x' + p1);\n\t});\n\treturn binstr;\n};\n\n// to Buffer\n\nEnc.binToBuf = function(bin) {\n\tvar arr = bin.split('').map(function(ch) {\n\t\treturn ch.charCodeAt(0);\n\t});\n\treturn 'undefined' !== typeof Uint8Array ? new Uint8Array(arr) : arr;\n};\n\nEnc.strToBuf = function(str) {\n\treturn Enc.binToBuf(Enc.strToBin(str));\n};\n\n// to Unicode String\n\nEnc.binToStr = function(binstr) {\n\tvar escstr = binstr.replace(/(.)/g, function(m, p) {\n\t\tvar code = p\n\t\t\t.charCodeAt(0)\n\t\t\t.toString(16)\n\t\t\t.toUpperCase();\n\t\tif (code.length < 2) {\n\t\t\tcode = '0' + code;\n\t\t}\n\t\treturn '%' + code;\n\t});\n\n\treturn decodeURIComponent(escstr);\n};\n\nEnc.bufToStr = function(buf) {\n\treturn Enc.binToStr(Enc.bufToBin(buf));\n};\n\n// Base64 + Hex\n\nEnc.base64ToHex = function(b64) {\n\treturn Enc.bufToHex(Enc.base64ToBuf(b64));\n};\n\nEnc.hexToBase64 = function(hex) {\n\treturn btoa(Enc._hexToBin(hex));\n};\n","'use strict';\n\nvar Enc = require('./bytes.js');\n\n// To Hex\n\nEnc.bufToHex = function(u8) {\n\tvar hex = [];\n\tvar i, h;\n\tvar len = u8.byteLength || u8.length;\n\n\tfor (i = 0; i < len; i += 1) {\n\t\th = u8[i].toString(16);\n\t\tif (2 !== h.length) {\n\t\t\th = '0' + h;\n\t\t}\n\t\thex.push(h);\n\t}\n\n\treturn hex.join('').toLowerCase();\n};\n\nEnc.numToHex = function(d) {\n\td = d.toString(16); // .padStart(2, '0');\n\tif (d.length % 2) {\n\t\treturn '0' + d;\n\t}\n\treturn d;\n};\n\nEnc.strToHex = function(str) {\n\treturn Enc._binToHex(Enc.strToBin(str));\n};\n\nEnc._binToHex = function(bin) {\n\treturn bin\n\t\t.split('')\n\t\t.map(function(ch) {\n\t\t\tvar h = ch.charCodeAt(0).toString(16);\n\t\t\tif (2 !== h.length) {\n\t\t\t\th = '0' + h;\n\t\t\t}\n\t\t\treturn h;\n\t\t})\n\t\t.join('');\n};\n\n// From Hex\n\nEnc.hexToBuf = function(hex) {\n\tvar arr = [];\n\thex.match(/.{2}/g).forEach(function(h) {\n\t\tarr.push(parseInt(h, 16));\n\t});\n\treturn 'undefined' !== typeof Uint8Array ? new Uint8Array(arr) : arr;\n};\n\nEnc.hexToStr = function(hex) {\n\treturn Enc.binToStr(_hexToBin(hex));\n};\n\nfunction _hexToBin(hex) {\n\treturn hex.replace(/([0-9A-F]{2})/gi, function(_, p1) {\n\t\treturn String.fromCharCode('0x' + p1);\n\t});\n}\n\nEnc._hexToBin = _hexToBin;\n\nmodule.exports = Enc;\n","'use strict';\n\nvar ASN1 = module.exports;\nvar Enc = require('@root/encoding/hex');\n\n//\n// Packer\n//\n\n// Almost every ASN.1 type that's important for CSR\n// can be represented generically with only a few rules.\nfunction Any(/*type, hexstrings...*/) {\n\tvar args = Array.prototype.slice.call(arguments);\n\tvar typ = args.shift();\n\tvar str = args\n\t\t.join('')\n\t\t.replace(/\\s+/g, '')\n\t\t.toLowerCase();\n\tvar len = str.length / 2;\n\tvar lenlen = 0;\n\tvar hex = typ;\n\tif ('number' === typeof hex) {\n\t\thex = Enc.numToHex(hex);\n\t}\n\n\t// We can't have an odd number of hex chars\n\tif (len !== Math.round(len)) {\n\t\tthrow new Error('invalid hex');\n\t}\n\n\t// The first byte of any ASN.1 sequence is the type (Sequence, Integer, etc)\n\t// The second byte is either the size of the value, or the size of its size\n\n\t// 1. If the second byte is < 0x80 (128) it is considered the size\n\t// 2. If it is > 0x80 then it describes the number of bytes of the size\n\t//    ex: 0x82 means the next 2 bytes describe the size of the value\n\t// 3. The special case of exactly 0x80 is \"indefinite\" length (to end-of-file)\n\n\tif (len > 127) {\n\t\tlenlen += 1;\n\t\twhile (len > 255) {\n\t\t\tlenlen += 1;\n\t\t\tlen = len >> 8;\n\t\t}\n\t}\n\n\tif (lenlen) {\n\t\thex += Enc.numToHex(0x80 + lenlen);\n\t}\n\treturn hex + Enc.numToHex(str.length / 2) + str;\n}\nASN1.Any = Any;\n\n// The Integer type has some special rules\nASN1.UInt = function UINT() {\n\tvar str = Array.prototype.slice.call(arguments).join('');\n\tvar first = parseInt(str.slice(0, 2), 16);\n\n\t// If the first byte is 0x80 or greater, the number is considered negative\n\t// Therefore we add a '00' prefix if the 0x80 bit is set\n\tif (0x80 & first) {\n\t\tstr = '00' + str;\n\t}\n\n\treturn Any('02', str);\n};\n\n// The Bit String type also has a special rule\nASN1.BitStr = function BITSTR() {\n\tvar str = Array.prototype.slice.call(arguments).join('');\n\t// '00' is a mask of how many bits of the next byte to ignore\n\treturn Any('03', '00' + str);\n};\n\nASN1._toArray = function toArray(next, opts) {\n\tvar typ = opts.json ? Enc.numToHex(next.type) : next.type;\n\tvar val = next.value;\n\tif (val) {\n\t\tif ('string' !== typeof val && opts.json) {\n\t\t\tval = Enc.bufToHex(val);\n\t\t}\n\t\treturn [typ, val];\n\t}\n\treturn [\n\t\ttyp,\n\t\tnext.children.map(function(child) {\n\t\t\treturn toArray(child, opts);\n\t\t})\n\t];\n};\n\nASN1._pack = function(arr) {\n\tvar typ = arr[0];\n\tif ('number' === typeof arr[0]) {\n\t\ttyp = Enc.numToHex(arr[0]);\n\t}\n\tvar str = '';\n\tif (Array.isArray(arr[1])) {\n\t\tarr[1].forEach(function(a) {\n\t\t\tstr += ASN1._pack(a);\n\t\t});\n\t} else if ('string' === typeof arr[1]) {\n\t\tstr = arr[1];\n\t} else if (arr[1].byteLength) {\n\t\tstr = Enc.bufToHex(arr[1]);\n\t} else {\n\t\tthrow new Error('unexpected array');\n\t}\n\tif ('03' === typ) {\n\t\treturn ASN1.BitStr(str);\n\t} else if ('02' === typ) {\n\t\treturn ASN1.UInt(str);\n\t} else {\n\t\treturn Any(typ, str);\n\t}\n};\n\n// TODO should this return a buffer?\nASN1.pack = function(asn1, opts) {\n\tif (!opts) {\n\t\topts = {};\n\t}\n\tif (!Array.isArray(asn1)) {\n\t\tasn1 = ASN1._toArray(asn1, { json: true });\n\t}\n\tvar result = ASN1._pack(asn1);\n\tif (opts.json) {\n\t\treturn result;\n\t}\n\treturn Enc.hexToBuf(result);\n};\n","// Copyright 2018 AJ ONeal. All rights reserved\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n'use strict';\n\nvar ASN1 = module.exports;\nvar Enc = require('@root/encoding/hex');\n\n//\n// Parser\n//\n\n// Although I've only seen 9 max in https certificates themselves,\n// but each domain list could have up to 100\nASN1.ELOOPN = 102;\nASN1.ELOOP =\n\t'uASN1.js Error: iterated over ' +\n\tASN1.ELOOPN +\n\t'+ elements (probably a malformed file)';\n// I've seen https certificates go 29 deep\nASN1.EDEEPN = 60;\nASN1.EDEEP =\n\t'uASN1.js Error: element nested ' +\n\tASN1.EDEEPN +\n\t'+ layers deep (probably a malformed file)';\n// Container Types are Sequence 0x30, Container Array? (0xA0, 0xA1)\n// Value Types are Boolean 0x01, Integer 0x02, Null 0x05, Object ID 0x06, String 0x0C, 0x16, 0x13, 0x1e Value Array? (0x82)\n// Bit String (0x03) and Octet String (0x04) may be values or containers\n// Sometimes Bit String is used as a container (RSA Pub Spki)\nASN1.CTYPES = [0x30, 0x31, 0xa0, 0xa1];\nASN1.VTYPES = [0x01, 0x02, 0x05, 0x06, 0x0c, 0x82];\nASN1.parseVerbose = function parseAsn1Helper(buf, opts) {\n\tif (!opts) {\n\t\topts = {};\n\t}\n\t//var ws = '  ';\n\tfunction parseAsn1(buf, depth, eager) {\n\t\tif (depth.length >= ASN1.EDEEPN) {\n\t\t\tthrow new Error(ASN1.EDEEP);\n\t\t}\n\n\t\tvar index = 2; // we know, at minimum, data starts after type (0) and lengthSize (1)\n\t\tvar asn1 = { type: buf[0], lengthSize: 0, length: buf[1] };\n\t\tvar child;\n\t\tvar iters = 0;\n\t\tvar adjust = 0;\n\t\tvar adjustedLen;\n\n\t\t// Determine how many bytes the length uses, and what it is\n\t\tif (0x80 & asn1.length) {\n\t\t\tasn1.lengthSize = 0x7f & asn1.length;\n\t\t\t// I think that buf->hex->int solves the problem of Endianness... not sure\n\t\t\tasn1.length = parseInt(\n\t\t\t\tEnc.bufToHex(buf.slice(index, index + asn1.lengthSize)),\n\t\t\t\t16\n\t\t\t);\n\t\t\tindex += asn1.lengthSize;\n\t\t}\n\n\t\t// High-order bit Integers have a leading 0x00 to signify that they are positive.\n\t\t// Bit Streams use the first byte to signify padding, which x.509 doesn't use.\n\t\tif (0x00 === buf[index] && (0x02 === asn1.type || 0x03 === asn1.type)) {\n\t\t\t// However, 0x00 on its own is a valid number\n\t\t\tif (asn1.length > 1) {\n\t\t\t\tindex += 1;\n\t\t\t\tadjust = -1;\n\t\t\t}\n\t\t}\n\t\tadjustedLen = asn1.length + adjust;\n\n\t\t//console.warn(depth.join(ws) + '0x' + Enc.numToHex(asn1.type), index, 'len:', asn1.length, asn1);\n\n\t\tfunction parseChildren(eager) {\n\t\t\tasn1.children = [];\n\t\t\t//console.warn('1 len:', (2 + asn1.lengthSize + asn1.length), 'idx:', index, 'clen:', 0);\n\t\t\twhile (\n\t\t\t\titers < ASN1.ELOOPN &&\n\t\t\t\tindex < 2 + asn1.length + asn1.lengthSize\n\t\t\t) {\n\t\t\t\titers += 1;\n\t\t\t\tdepth.length += 1;\n\t\t\t\tchild = parseAsn1(\n\t\t\t\t\tbuf.slice(index, index + adjustedLen),\n\t\t\t\t\tdepth,\n\t\t\t\t\teager\n\t\t\t\t);\n\t\t\t\tdepth.length -= 1;\n\t\t\t\t// The numbers don't match up exactly and I don't remember why...\n\t\t\t\t// probably something with adjustedLen or some such, but the tests pass\n\t\t\t\tindex += 2 + child.lengthSize + child.length;\n\t\t\t\t//console.warn('2 len:', (2 + asn1.lengthSize + asn1.length), 'idx:', index, 'clen:', (2 + child.lengthSize + child.length));\n\t\t\t\tif (index > 2 + asn1.lengthSize + asn1.length) {\n\t\t\t\t\tif (!eager) {\n\t\t\t\t\t\tconsole.error(JSON.stringify(asn1, ASN1._replacer, 2));\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Parse error: child value length (' +\n\t\t\t\t\t\t\tchild.length +\n\t\t\t\t\t\t\t') is greater than remaining parent length (' +\n\t\t\t\t\t\t\t(asn1.length - index) +\n\t\t\t\t\t\t\t' = ' +\n\t\t\t\t\t\t\tasn1.length +\n\t\t\t\t\t\t\t' - ' +\n\t\t\t\t\t\t\tindex +\n\t\t\t\t\t\t\t')'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tasn1.children.push(child);\n\t\t\t\t//console.warn(depth.join(ws) + '0x' + Enc.numToHex(asn1.type), index, 'len:', asn1.length, asn1);\n\t\t\t}\n\t\t\tif (index !== 2 + asn1.lengthSize + asn1.length) {\n\t\t\t\t//console.warn('index:', index, 'length:', (2 + asn1.lengthSize + asn1.length));\n\t\t\t\tthrow new Error('premature end-of-file');\n\t\t\t}\n\t\t\tif (iters >= ASN1.ELOOPN) {\n\t\t\t\tthrow new Error(ASN1.ELOOP);\n\t\t\t}\n\n\t\t\tdelete asn1.value;\n\t\t\treturn asn1;\n\t\t}\n\n\t\t// Recurse into types that are _always_ containers\n\t\tif (-1 !== ASN1.CTYPES.indexOf(asn1.type)) {\n\t\t\treturn parseChildren(eager);\n\t\t}\n\n\t\t// Return types that are _always_ values\n\t\tasn1.value = buf.slice(index, index + adjustedLen);\n\t\tif (opts.json) {\n\t\t\tasn1.value = Enc.bufToHex(asn1.value);\n\t\t}\n\t\tif (-1 !== ASN1.VTYPES.indexOf(asn1.type)) {\n\t\t\treturn asn1;\n\t\t}\n\n\t\t// For ambigious / unknown types, recurse and return on failure\n\t\t// (and return child array size to zero)\n\t\ttry {\n\t\t\treturn parseChildren(true);\n\t\t} catch (e) {\n\t\t\tasn1.children.length = 0;\n\t\t\treturn asn1;\n\t\t}\n\t}\n\n\tvar asn1 = parseAsn1(buf, []);\n\tvar len = buf.byteLength || buf.length;\n\tif (len !== 2 + asn1.lengthSize + asn1.length) {\n\t\tthrow new Error(\n\t\t\t'Length of buffer does not match length of ASN.1 sequence.'\n\t\t);\n\t}\n\treturn asn1;\n};\nASN1._toArray = function toArray(next, opts) {\n\tvar typ = opts.json ? Enc.numToHex(next.type) : next.type;\n\tvar val = next.value;\n\tif (val) {\n\t\tif ('string' !== typeof val && opts.json) {\n\t\t\tval = Enc.bufToHex(val);\n\t\t}\n\t\treturn [typ, val];\n\t}\n\treturn [\n\t\ttyp,\n\t\tnext.children.map(function(child) {\n\t\t\treturn toArray(child, opts);\n\t\t})\n\t];\n};\nASN1.parse = function(opts) {\n\tvar opts2 = { json: false !== opts.json };\n\tvar verbose = ASN1.parseVerbose(opts.der, opts2);\n\tif (opts.verbose) {\n\t\treturn verbose;\n\t}\n\treturn ASN1._toArray(verbose, opts2);\n};\nASN1._replacer = function(k, v) {\n\tif ('type' === k) {\n\t\treturn '0x' + Enc.numToHex(v);\n\t}\n\tif (v && 'value' === k) {\n\t\treturn '0x' + Enc.bufToHex(v.data || v);\n\t}\n\treturn v;\n};\n","'use strict';\n\nvar ASN1 = module.exports;\nvar packer = require('./packer.js');\nvar parser = require('./parser.js');\nObject.keys(parser).forEach(function(key) {\n\tASN1[key] = parser[key];\n});\nObject.keys(packer).forEach(function(key) {\n\tASN1[key] = packer[key];\n});\n","import { HandshakeStatus, ReplitInitArgs, ReplitInitOutput } from \"./types\";\nimport { extensionPort, proxy } from \"./util/comlink\";\nimport { getHandshakeStatus, setHandshakeStatus } from \"./util/handshake\";\nexport * from \"./api\";\nimport * as debug from \"./api/debug\";\nexport { extensionPort, proxy };\nexport * from \"./types\";\nimport * as replit from \".\";\n\nimport { version } from \"../package.json\";\n\nexport { version };\n\nfunction promiseWithTimeout<T>(promise: Promise<T>, timeout: number) {\n  return Promise.race([\n    promise,\n    new Promise((_resolve, reject) =>\n      setTimeout(() => reject(new Error(\"timeout\")), timeout)\n    ),\n  ]);\n}\n\nasync function windowIsReady() {\n  return new Promise<void>((resolve) => {\n    if (document.readyState === \"complete\") {\n      resolve();\n      return;\n    }\n\n    const loadHandler = () => {\n      resolve();\n      window.removeEventListener(\"load\", loadHandler);\n    };\n\n    window.addEventListener(\"load\", loadHandler);\n  });\n}\n\nfunction patchConsole() {\n  const originalLog = console.log;\n  const originalWarn = console.warn;\n  const originalError = console.error;\n  const originalInfo = console.info;\n\n  console.log = (...args: any[]) => {\n    originalLog(...args);\n    debug.log(args[0], { args: args.slice(1) });\n  };\n\n  console.warn = (...args: any[]) => {\n    originalWarn(...args);\n    debug.warn(args[0], { args: args.slice(1) });\n  };\n\n  console.error = (...args: any[]) => {\n    originalError(...args);\n    debug.error(args[0], { args: args.slice(1) });\n  };\n\n  console.info = (...args: any[]) => {\n    originalInfo(...args);\n    debug.info(args[0], { args: args.slice(1) });\n  };\n}\n\nexport async function init(args?: ReplitInitArgs): Promise<ReplitInitOutput> {\n  if (extensionPort === null) {\n    throw new Error(\"Extension must be initialized in a browser context\");\n  }\n\n  const onExtensionClick = () => {\n    extensionPort.activatePane();\n  };\n\n  const windDown = () => {\n    window.document.removeEventListener(\"click\", onExtensionClick);\n  };\n\n  try {\n    if (window) {\n      await windowIsReady();\n    }\n\n    await promiseWithTimeout(\n      extensionPort.handshake({\n        clientName: \"@replit/extensions\",\n        clientVersion: version,\n      }),\n      args?.timeout || 2000\n    );\n\n    patchConsole();\n\n    setHandshakeStatus(HandshakeStatus.Ready);\n\n    if (window) {\n      window.document.addEventListener(\"click\", onExtensionClick);\n    }\n  } catch (e) {\n    setHandshakeStatus(HandshakeStatus.Error);\n    console.error(e);\n    windDown();\n    throw e;\n  }\n\n  return {\n    dispose: windDown,\n    status: getHandshakeStatus(),\n  };\n}\n","/**\n * A Filesystem node type\n */\nexport enum FsNodeType {\n  File = \"FILE\",\n  Directory = \"DIRECTORY\",\n}\n\n/**\n * A base interface for nodes, just includes\n * the type of the node and the path, This interface\n * does not expose the node's content/children\n */\nexport interface FsNode {\n  path: string;\n  type: FsNodeType;\n}\n\n/**\n * An array of Filesystem Nodes\n */\nexport type FsNodeArray = Array<FsNode>;\n\n/**\n * A directory child node - a file or a folder.\n */\nexport interface DirectoryChildNode {\n  filename: string;\n  type: FsNodeType;\n}\n\n/**\n * A file change event type\n */\nexport enum ChangeEventType {\n  Create = \"CREATE\",\n  Move = \"MOVE\",\n  Delete = \"DELETE\",\n  Modify = \"MODIFY\",\n}\n\n/**\n * Fired when a file is moved\n */\nexport interface MoveEvent {\n  eventType: ChangeEventType.Move;\n  node: FsNode;\n  to: string;\n}\n\n/**\n * Fired when a file is deleted\n */\nexport interface DeleteEvent {\n  eventType: ChangeEventType.Delete;\n  node: FsNode;\n}\n\n/**\n * Fires when a non-text file is changed\n */\nexport type WatchFileOnChangeListener<T extends string | Blob = string> = (\n  newContent: T\n) => void;\n\n/**\n * Fires when watching a non-text file fails\n */\nexport type WatchFileOnErrorListener = (error: string) => void;\n\n/**\n * Fires when a non-text file is moved or deleted\n */\nexport type WatchFileOnMoveOrDeleteListener = (\n  moveOrDeleteEvent: MoveEvent | DeleteEvent\n) => void;\n\n/**\n * A set of listeners for watching a non-text file\n */\nexport interface WatchFileListeners<T extends string | Blob = string> {\n  onChange: WatchFileOnChangeListener<T>;\n  onError?: WatchFileOnErrorListener;\n  onMoveOrDelete?: WatchFileOnMoveOrDeleteListener;\n}\n\n/**\n * A written text change for the WriteChange function exposed by WatchTextFileListeners.onReady\n */\nexport interface TextChange {\n  from: number;\n  to?: number;\n  insert?: string;\n}\n\n/**\n * Writes a change to a watched file using the TextChange interface\n */\nexport type WriteChange = (changes: TextChange | Array<TextChange>) => void;\n\n/**\n * Returns the latest content of a watched file as a string\n */\nexport type GetLatestContent = () => string;\n\n/**\n * A set of listeners and values exposed by WatchTextFileListeners.onReady\n */\nexport interface TextFileReadyEvent {\n  writeChange: WriteChange;\n  getLatestContent: GetLatestContent;\n  initialContent: string;\n}\n\n/**\n * Signifies a change when a text file's text content is updated\n */\nexport interface TextFileOnChangeEvent {\n  changes: Array<TextChange>;\n  latestContent: string;\n}\n\n/**\n * Fires when a text file watcher is ready\n */\nexport type WatchTextFileOnReadyListener = (\n  readyEvent: TextFileReadyEvent\n) => void;\n\n/**\n * Fires when a watched text file's text content is updated\n */\nexport type WatchTextFileOnChangeListener = (\n  changeEvent: TextFileOnChangeEvent\n) => void;\n\n/**\n * Fires when watching a text file fails\n */\nexport type WatchTextFileOnErrorListener = (error: string) => void;\n\n/**\n * Fires when a watched text file is moved or deleted\n */\nexport type WatchTextFileOnMoveOrDeleteListener = (\n  moveOrDeleteEvent: MoveEvent | DeleteEvent\n) => void;\n\n/**\n * A set of listeners for watching a text file\n */\nexport interface WatchTextFileListeners {\n  onReady: WatchTextFileOnReadyListener;\n  onChange?: WatchTextFileOnChangeListener;\n  onError?: WatchTextFileOnErrorListener;\n  onMoveOrDelete?: WatchTextFileOnMoveOrDeleteListener;\n}\n\n/**\n * Fires when watching a directory fails\n */\nexport type WatchDirOnErrorListener = (\n  err: Error,\n  extraInfo?: Record<string, any>\n) => void;\n\n/**\n * Fires when a directory's child nodes change\n */\nexport type WatchDirOnChangeListener = (children: FsNodeArray) => void;\n\n/**\n * Fires when a watched directory is moved or deleted\n */\nexport type WatchDirOnMoveOrDeleteListener = (\n  event: DeleteEvent | MoveEvent\n) => void;\n\n/**\n * A set of listeners for watching a directory\n */\nexport interface WatchDirListeners {\n  onChange: WatchDirOnChangeListener;\n  onMoveOrDelete?: WatchDirOnMoveOrDeleteListener;\n  onError: WatchDirOnErrorListener;\n}\n","import { User } from \"./data\";\n\n/**\n * Alias for strings\n */\nexport type CssColor = string;\n\n/**\n * Global theme values interface\n */\nexport interface ThemeValuesGlobal {\n  __typename?: string;\n  backgroundRoot: CssColor;\n  backgroundDefault: CssColor;\n  backgroundHigher: CssColor;\n  backgroundHighest: CssColor;\n  backgroundOverlay: CssColor;\n  foregroundDefault: CssColor;\n  foregroundDimmer: CssColor;\n  foregroundDimmest: CssColor;\n  outlineDimmest: CssColor;\n  outlineDimmer: CssColor;\n  outlineDefault: CssColor;\n  outlineStronger: CssColor;\n  outlineStrongest: CssColor;\n  accentPrimaryDimmest: CssColor;\n  accentPrimaryDimmer: CssColor;\n  accentPrimaryDefault: CssColor;\n  accentPrimaryStronger: CssColor;\n  accentPrimaryStrongest: CssColor;\n  accentPositiveDimmest: CssColor;\n  accentPositiveDimmer: CssColor;\n  accentPositiveDefault: CssColor;\n  accentPositiveStronger: CssColor;\n  accentPositiveStrongest: CssColor;\n  accentNegativeDimmest: CssColor;\n  accentNegativeDimmer: CssColor;\n  accentNegativeDefault: CssColor;\n  accentNegativeStronger: CssColor;\n  accentNegativeStrongest: CssColor;\n  redDimmest: CssColor;\n  redDimmer: CssColor;\n  redDefault: CssColor;\n  redStronger: CssColor;\n  redStrongest: CssColor;\n  orangeDimmest: CssColor;\n  orangeDimmer: CssColor;\n  orangeDefault: CssColor;\n  orangeStronger: CssColor;\n  orangeStrongest: CssColor;\n  yellowDimmest: CssColor;\n  yellowDimmer: CssColor;\n  yellowDefault: CssColor;\n  yellowStronger: CssColor;\n  yellowStrongest: CssColor;\n  limeDimmest: CssColor;\n  limeDimmer: CssColor;\n  limeDefault: CssColor;\n  limeStronger: CssColor;\n  limeStrongest: CssColor;\n  greenDimmest: CssColor;\n  greenDimmer: CssColor;\n  greenDefault: CssColor;\n  greenStronger: CssColor;\n  greenStrongest: CssColor;\n  tealDimmest: CssColor;\n  tealDimmer: CssColor;\n  tealDefault: CssColor;\n  tealStronger: CssColor;\n  tealStrongest: CssColor;\n  blueDimmest: CssColor;\n  blueDimmer: CssColor;\n  blueDefault: CssColor;\n  blueStronger: CssColor;\n  blueStrongest: CssColor;\n  blurpleDimmest: CssColor;\n  blurpleDimmer: CssColor;\n  blurpleDefault: CssColor;\n  blurpleStronger: CssColor;\n  blurpleStrongest: CssColor;\n  purpleDimmest: CssColor;\n  purpleDimmer: CssColor;\n  purpleDefault: CssColor;\n  purpleStronger: CssColor;\n  purpleStrongest: CssColor;\n  magentaDimmest: CssColor;\n  magentaDimmer: CssColor;\n  magentaDefault: CssColor;\n  magentaStronger: CssColor;\n  magentaStrongest: CssColor;\n  pinkDimmest: CssColor;\n  pinkDimmer: CssColor;\n  pinkDefault: CssColor;\n  pinkStronger: CssColor;\n  pinkStrongest: CssColor;\n  greyDimmest: CssColor;\n  greyDimmer: CssColor;\n  greyDefault: CssColor;\n  greyStronger: CssColor;\n  greyStrongest: CssColor;\n  brownDimmest: CssColor;\n  brownDimmer: CssColor;\n  brownDefault: CssColor;\n  brownStronger: CssColor;\n  brownStrongest: CssColor;\n  black: CssColor;\n  white: CssColor;\n}\n\n/**\n * Enumerated Color Scheme\n */\nexport enum ColorScheme {\n  Light = \"light\",\n  Dark = \"dark\",\n}\n\n/**\n * Custom Theme GraphQL type\n */\nexport interface CustomTheme {\n  author: User;\n  colorScheme: ColorScheme;\n  hasUnpublishedChanges: boolean;\n  id: number;\n  isCurrentUserThemeAuthor: boolean;\n  isInstalledByCurrentUser: boolean;\n  latestThemeVersion: ThemeVersion;\n  numInstalls?: number;\n  slug?: string;\n  status?: \"public\" | \"private\";\n  title?: string;\n}\n\n/**\n * Theme Syntax Highlighting Tag\n */\nexport interface ThemeSyntaxHighlightingTag {\n  __typename: string;\n  name: string;\n  modifiers: null | Array<string>;\n}\n\n/**\n * Theme Syntax Highlighting Modifier\n */\nexport interface ThemeSyntaxHighlightingModifier {\n  textDecoration?: string;\n  fontSize?: string;\n  fontWeight?: string;\n  fontStyle?: string;\n  color?: string;\n}\n\n/**\n * Theme Editor Syntax Highlighting\n */\nexport interface ThemeEditorSyntaxHighlighting {\n  __typename: string;\n  tags: Array<ThemeSyntaxHighlightingTag>;\n  values: ThemeSyntaxHighlightingModifier;\n}\n\n/**\n * Editor Theme Values, an array of ThemeEditorSyntaxHighlighting\n */\nexport interface ThemeValuesEditor {\n  editor: Array<ThemeEditorSyntaxHighlighting>;\n}\n\n/**\n * Both global and editor theme values\n */\nexport interface ThemeValues {\n  __typename?: string;\n  editor: ThemeValuesEditor;\n  global: ThemeValuesGlobal;\n}\n\n/**\n * Theme Version GraphQL type\n */\nexport interface ThemeVersion {\n  __typename?: string;\n  id: number;\n  hue: number;\n  lightness: number;\n  saturation: number;\n  timeUpdated?: string;\n  description?: string;\n  customTheme?: CustomTheme;\n  values?: ThemeValues;\n}\n\n/**\n * Fires with the new theme values when the current theme changes\n */\nexport type OnThemeChangeValuesListener = (values: ThemeValuesGlobal) => void;\n\n/**\n * Fires with the new theme data when the current theme changes\n */\nexport type OnThemeChangeListener = (theme: ThemeVersion) => void;\n","/**\n * A Replit user\n */\nexport interface User {\n  id: number;\n  username: string;\n  image: string;\n  bio?: string;\n\n  // SocialUserData fragment\n  url?: string;\n  socials?: Array<UserSocial>;\n  firstName?: string;\n  lastName?: string;\n  displayName?: string;\n  fullName?: string;\n  followCount?: number;\n  followerCount?: number;\n\n  // PlanUserData fragment\n  isUserHacker?: boolean;\n  isUserPro?: boolean;\n\n  // RolesUserData fragment\n  roles?: Array<UserRole>;\n}\n\n/**\n * Extended values for the current user\n */\nexport interface CurrentUser extends User {}\n\n/**\n * A user social media link\n */\nexport interface UserSocial {\n  id: number;\n  url: string;\n  type: UserSocialType;\n}\n\n/**\n * An enumerated type of social media links\n */\nexport enum UserSocialType {\n  twitter = \"twitter\",\n  github = \"github\",\n  linkedin = \"linkedin\",\n  website = \"website\",\n  youtube = \"youtube\",\n  twitch = \"twitch\",\n  facebook = \"facebook\",\n  discord = \"discord\",\n}\n\n/**\n * A user role\n */\nexport interface UserRole {\n  id: number;\n  name: string;\n  key: string;\n  tagline: string;\n}\n\n/**\n * A Repl\n */\nexport interface Repl {\n  id: string;\n  url: string;\n  title: string;\n  description: string;\n  timeCreated: string;\n  slug: string;\n  isPrivate: boolean;\n\n  // SocialReplData fragment\n  likeCount?: number;\n  publicForkCount?: number;\n  runCount?: number;\n  commentCount?: number;\n  tags?: Array<Tag>;\n  iconUrl?: string;\n  imageUrl?: string;\n\n  // CommentsReplData fragment\n  comments?: ReplCommentConnection;\n\n  // OwnerData fragment\n  owner?: ReplOwner;\n\n  // MultiplayersData fragment\n  multiplayers?: Array<User>;\n}\n\n/**\n * A Repl Owner, can be either a User or a Team\n */\nexport interface ReplOwner {\n  id: number;\n  username: string;\n  image: string;\n  __typename: string;\n  description?: string;\n}\n\n/**\n * A Repl tag\n */\nexport interface Tag {\n  id: string;\n  isOfficial: boolean;\n}\n\n/**\n * A Repl Comment\n */\nexport interface ReplComment {\n  id: number;\n  body: string;\n  user: User;\n}\n\n/**\n * An array of ReplComments as items\n */\nexport interface ReplCommentConnection {\n  items: Array<ReplComment>;\n}\n\n/**\n * Editor Preferences\n */\nexport interface EditorPreferences {\n  __typename: string;\n  fontSize: number;\n  indentIsSpaces: boolean;\n  indentSize: number;\n  keyboardHandler: string;\n  wrapping: boolean;\n  codeIntelligence: boolean;\n  codeSuggestion: boolean;\n  multiselectModifierKey: string;\n  minimapDisplay: string;\n}\n\n/**\n * Options for user queries\n */\nexport interface UserDataInclusion {\n  includeSocialData?: boolean;\n  includeRoles?: boolean;\n  includePlan?: boolean;\n}\n\n/**\n * Options for the currentUser query\n */\nexport interface CurrentUserDataInclusion {\n  includeSocialData?: boolean;\n  includeRoles?: boolean;\n  includePlan?: boolean;\n}\n\n/**\n * Options for repl queries\n */\nexport interface ReplDataInclusion {\n  includeSocialData?: boolean;\n  includeComments?: boolean;\n  includeOwner?: boolean;\n  includeMultiplayers?: boolean;\n}\n\n/**\n * A graphql response\n */\nexport type GraphResponse<T> = Promise<T | never>;\n\n/**\n * A graphql response for the repl query\n */\nexport type ReplQueryOutput = GraphResponse<{ repl: Repl }>;\n\n/**\n * A graphql response for the userByUsername query\n */\nexport type UserByUsernameQueryOutput = GraphResponse<{ userByUsername: User }>;\n\n/**\n * A graphql response for the user query\n */\nexport type UserQueryOutput = GraphResponse<{ user: User }>;\n\n/**\n * A graphql response for the currentUser query\n */\nexport type CurrentUserQueryOutput = GraphResponse<{ user: CurrentUser }>;\n","import {\n  DirectoryChildNode,\n  WatchFileListeners,\n  WatchTextFileListeners,\n  WatchDirListeners,\n} from \"./fs\";\nimport {\n  UserDataInclusion,\n  UserQueryOutput,\n  UserByUsernameQueryOutput,\n  ReplDataInclusion,\n  ReplQueryOutput,\n  CurrentUserQueryOutput,\n  CurrentUserDataInclusion,\n  EditorPreferences,\n} from \"./data\";\nimport {\n  ThemeValuesGlobal,\n  ThemeVersion,\n  OnThemeChangeValuesListener,\n  OnThemeChangeListener,\n} from \"./themes\";\nimport { OnActiveFileChangeListener } from \"./session\";\nimport Comlink from \"comlink\";\nimport { Data } from \"../api/debug\";\n\nexport * from \"./fs\";\nexport * from \"./themes\";\nexport * from \"./data\";\nexport * from \"./session\";\nexport * from \"./exec\";\nexport * from \"./auth\";\n\n/**\n * An enumerated set of values for the Handshake between the workspace and an extension\n */\nexport enum HandshakeStatus {\n  Ready = \"ready\",\n  Error = \"error\",\n  Loading = \"loading\",\n}\n\n/**\n * The Replit init() function arguments\n */\nexport interface ReplitInitArgs {\n  timeout?: number;\n}\n\n/**\n * The output of the Replit init() function\n */\nexport interface ReplitInitOutput {\n  dispose: () => void;\n  status: HandshakeStatus;\n}\n\n/**\n * A cleanup/disposer function (void)\n */\nexport type DisposerFunction = () => void;\n\n/**\n * The Extension Port\n */\nexport type ExtensionPortAPI = {\n  handshake: (handshakeArgs: { clientName: string; clientVersion: string }) => {\n    success: true;\n  };\n\n  // fs Module\n  readFile: (\n    path: string,\n    encoding: \"utf8\" | \"binary\" | null\n  ) => Promise<\n    | { content: string }\n    | {\n        error: string;\n      }\n  >;\n  writeFile: (\n    path: string,\n    content: string | Blob\n  ) => Promise<\n    | { success: boolean }\n    | {\n        error: string;\n      }\n  >;\n  readDir: (path: string) => Promise<{\n    children: Array<DirectoryChildNode>;\n    error: string;\n  }>;\n  createDir: (path: string) => Promise<{\n    success: boolean;\n    error: string | null;\n  }>;\n  deleteFile: (path: string) => Promise<\n    | {}\n    | {\n        error: string;\n      }\n  >;\n  deleteDir: (path: string) => Promise<\n    | {}\n    | {\n        error: string;\n      }\n  >;\n  move: (\n    path: string,\n    to: string\n  ) => Promise<{\n    success: boolean;\n    error: string | null;\n  }>;\n  copyFile: (\n    path: string,\n    to: string\n  ) => Promise<{\n    success: boolean;\n    error: string | null;\n  }>;\n  watchFile: (\n    path: string,\n    watcher: WatchFileListeners,\n    encoding: \"utf8\" | \"binary\" | null\n  ) => DisposerFunction;\n  watchTextFile: (path: string, watcher: WatchTextFileListeners) => () => void;\n  watchDir: (path: string, watcher: WatchDirListeners) => DisposerFunction;\n\n  // replDb Module\n  setReplDbValue: (key: string, value: string) => Promise<void>;\n  getReplDbValue: (key: string) =>\n    | {\n        error: string | null;\n      }\n    | string;\n  listReplDbKeys: (prefix: string) => Promise<\n    | { keys: string[] }\n    | {\n        error: string;\n      }\n  >;\n  deleteReplDbKey: (key: string) => Promise<void>;\n\n  activatePane: () => Promise<void>;\n\n  // theme\n  getCurrentThemeValues: () => Promise<ThemeValuesGlobal>;\n  onThemeChangeValues: (\n    callback: OnThemeChangeValuesListener\n  ) => Promise<DisposerFunction>;\n  getCurrentTheme: () => Promise<ThemeVersion>;\n  onThemeChange: (callback: OnThemeChangeListener) => Promise<DisposerFunction>;\n\n  filePath: string;\n\n  // messages Module\n  showConfirm: (text: string, length?: number) => string;\n  showError: (text: string, length?: number) => string;\n  showNotice: (text: string, length?: number) => string;\n  showWarning: (text: string, length?: number) => string;\n  hideMessage: (id: string) => void;\n  hideAllMessages: () => void;\n\n  // data Module\n  currentUser: (args: CurrentUserDataInclusion) => CurrentUserQueryOutput;\n  userById: (args: { id: number } & UserDataInclusion) => UserQueryOutput;\n  userByUsername: (\n    args: { username: string } & UserDataInclusion\n  ) => UserByUsernameQueryOutput;\n  currentRepl: (args: ReplDataInclusion) => ReplQueryOutput;\n  replById: (args: { id: string } & ReplDataInclusion) => ReplQueryOutput;\n  replByUrl: (args: { url: string } & ReplDataInclusion) => ReplQueryOutput;\n\n  // session Module\n  watchActiveFile: (callback: OnActiveFileChangeListener) => DisposerFunction;\n  getActiveFile: () => Promise<string | null>;\n\n  experimental: ExperimentalAPI;\n  internal: InternalAPI;\n  debug: DebugAPI;\n\n  exec: (args: {\n    splitStderr?: boolean;\n    args: Array<string>;\n    env?: {\n      [key: string]: string;\n    };\n    onOutput: (output: string) => void;\n    onStdErr: (stderr: string) => void;\n    onError: (error: string) => void;\n  }) => Promise<{\n    dispose: () => void;\n    promise: Promise<{\n      exitCode: number;\n      error: string | null;\n    }>;\n  }>;\n};\n\nexport type ExperimentalAPI = {\n  editor: {\n    getPreferences: () => Promise<EditorPreferences>;\n  };\n\n  auth: {\n    getAuthToken: () => Promise<string>;\n  };\n};\n\nexport type DebugAPI = {\n  info: (message: string, data?: Data) => Promise<void>;\n  warn: (message: string, data?: Data) => Promise<void>;\n  error: (message: string, data?: Data) => Promise<void>;\n};\n\nexport type InternalAPI = {};\n\nexport type Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n\nexport type RemoteProperty<T> = T extends Function | Comlink.ProxyMarked\n  ? Comlink.Remote<T>\n  : T extends object\n  ? T\n  : Promisify<T>; //  We don't want to promisify objects, but we do want to promisify all other primitives\n\nexport type RemoteObject<T> = {\n  [P in keyof T]: RemoteProperty<T[P]>;\n};\n\nexport type ExtensionPort = RemoteObject<ExtensionPortAPI>;\n",null,"import * as Comlink from \"comlink\";\nimport { ExtensionPort } from \"../types\";\n\nexport const extensionPort = (() =>\n  typeof window !== \"undefined\"\n    ? (Comlink.wrap(\n        Comlink.windowEndpoint(self.parent, self, \"*\")\n      ) as any as ExtensionPort)\n    : null)() as ExtensionPort;\n\nexport const proxy = Comlink.proxy;\nexport const releaseProxy = Comlink.releaseProxy;\n","import { HandshakeStatus } from \"../types\";\n\nlet handshakeStatus: HandshakeStatus = HandshakeStatus.Loading;\n\nexport const setHandshakeStatus = (status: HandshakeStatus) => {\n  handshakeStatus = status;\n};\n\nexport const getHandshakeStatus = () => handshakeStatus;\n","import { extensionPort, proxy } from \"../..//util/comlink\";\nimport {\n  WatchDirListeners,\n  WatchFileListeners,\n  WatchTextFileListeners,\n} from \"../../types\";\nimport { fileWatcherManager } from \"./watching\";\n\n/**\n * Reads the file specified at `path` and returns an object containing the contents, or an object containing an error if there was one. Required [permissions](/extensions/api/manifest#scopetype): `read`.\n */\nexport async function readFile(\n  path: string,\n  encoding: \"utf8\" | \"binary\" | null = \"utf8\"\n) {\n  return extensionPort.readFile(path, encoding);\n}\n\n/**\n * Writes the file specified at `path` with the contents `content`. Required [permissions](/extensions/api/manifest#scopetype): `read`, `write-exec`.\n */\nexport async function writeFile(path: string, content: string | Blob) {\n  return extensionPort.writeFile(path, content);\n}\n\n/**\n * Reads the directory specified at `path` and returns an object containing the contents, or an object containing an error if there was one. Required [permissions](/extensions/api/manifest#scopetype): `read`.\n */\nexport async function readDir(path: string) {\n  return extensionPort.readDir(path);\n}\n\n/**\n * Creates a directory at the specified path. Required [permissions](/extensions/api/manifest#scopetype): `read`, `write-exec`.\n */\nexport async function createDir(path: string) {\n  return extensionPort.createDir(path);\n}\n\n/**\n * Deletes the file at the specified path. Required [permissions](/extensions/api/manifest#scopetype): `read`, `write-exec`.\n */\nexport async function deleteFile(path: string) {\n  return extensionPort.deleteFile(path);\n}\n\n/**\n * Deletes the directory at the specified path. Required [permissions](/extensions/api/manifest#scopetype): `read`, `write-exec`.\n */\nexport async function deleteDir(path: string) {\n  return extensionPort.deleteDir(path);\n}\n\n/**\n * Moves the file or directory at `from` to `to`. Required [permissions](/extensions/api/manifest#scopetype): `read`, `write-exec`.\n */\nexport async function move(path: string, to: string) {\n  return extensionPort.move(path, to);\n}\n\n/**\n * Copies the file at `from` to `to`. Required [permissions](/extensions/api/manifest#scopetype): `read`, `write-exec`.\n */\nexport async function copyFile(path: string, to: string) {\n  return extensionPort.copyFile(path, to);\n}\n\n/**\n * Watches the file at `path` for changes with the provided `listeners`. Returns a dispose method which cleans up the listeners. Required [permissions](/extensions/api/manifest#scopetype): `read`.\n */\nexport async function watchFile(\n  path: string,\n  listeners: WatchFileListeners,\n  encoding: \"utf8\" | \"binary\" = \"binary\"\n) {\n  // Note: comlink does not let us test for functions being present, so we provide default functions for all callbacks in case the user does not pass those, to keep the API flexible\n  return extensionPort.watchFile(\n    path,\n    proxy({\n      onMoveOrDelete: () => {},\n      onError: () => {},\n      ...listeners,\n    }),\n    encoding\n  );\n}\n\n/**\n * Watches file events (move, create, delete) in the specified directory at the given `path`. Returns a dispose method which cleans up the listeners. Required [permissions](/extensions/api/manifest#scopetype): `read`.\n */\nexport async function watchDir(path: string, listeners: WatchDirListeners) {\n  return extensionPort.watchDir(\n    path,\n    proxy({\n      onMoveOrDelete: () => {},\n      ...listeners,\n    })\n  );\n}\n\n/**\n * Watches a text file at `path` for changes with the provided `listeners`. Returns a dispose method which cleans up the listeners.\n *\n * Use this for watching text files, and receive changes as versioned operational transform (OT) operations annotated with their source.\n *\n * Required [permissions](/extensions/api/manifest#scopetype): `read`.\n */\nexport function watchTextFile(path: string, listeners: WatchTextFileListeners) {\n  return fileWatcherManager.watch(path, listeners);\n}\n","/**\nThe data structure for documents. @nonabstract\n*/\nclass Text {\n    /**\n    @internal\n    */\n    constructor() { }\n    /**\n    Get the line description around the given position.\n    */\n    lineAt(pos) {\n        if (pos < 0 || pos > this.length)\n            throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);\n        return this.lineInner(pos, false, 1, 0);\n    }\n    /**\n    Get the description for the given (1-based) line number.\n    */\n    line(n) {\n        if (n < 1 || n > this.lines)\n            throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);\n        return this.lineInner(n, true, 1, 0);\n    }\n    /**\n    Replace a range of the text with the given content.\n    */\n    replace(from, to, text) {\n        let parts = [];\n        this.decompose(0, from, parts, 2 /* Open.To */);\n        if (text.length)\n            text.decompose(0, text.length, parts, 1 /* Open.From */ | 2 /* Open.To */);\n        this.decompose(to, this.length, parts, 1 /* Open.From */);\n        return TextNode.from(parts, this.length - (to - from) + text.length);\n    }\n    /**\n    Append another document to this one.\n    */\n    append(other) {\n        return this.replace(this.length, this.length, other);\n    }\n    /**\n    Retrieve the text between the given points.\n    */\n    slice(from, to = this.length) {\n        let parts = [];\n        this.decompose(from, to, parts, 0);\n        return TextNode.from(parts, to - from);\n    }\n    /**\n    Test whether this text is equal to another instance.\n    */\n    eq(other) {\n        if (other == this)\n            return true;\n        if (other.length != this.length || other.lines != this.lines)\n            return false;\n        let start = this.scanIdentical(other, 1), end = this.length - this.scanIdentical(other, -1);\n        let a = new RawTextCursor(this), b = new RawTextCursor(other);\n        for (let skip = start, pos = start;;) {\n            a.next(skip);\n            b.next(skip);\n            skip = 0;\n            if (a.lineBreak != b.lineBreak || a.done != b.done || a.value != b.value)\n                return false;\n            pos += a.value.length;\n            if (a.done || pos >= end)\n                return true;\n        }\n    }\n    /**\n    Iterate over the text. When `dir` is `-1`, iteration happens\n    from end to start. This will return lines and the breaks between\n    them as separate strings.\n    */\n    iter(dir = 1) { return new RawTextCursor(this, dir); }\n    /**\n    Iterate over a range of the text. When `from` > `to`, the\n    iterator will run in reverse.\n    */\n    iterRange(from, to = this.length) { return new PartialTextCursor(this, from, to); }\n    /**\n    Return a cursor that iterates over the given range of lines,\n    _without_ returning the line breaks between, and yielding empty\n    strings for empty lines.\n    \n    When `from` and `to` are given, they should be 1-based line numbers.\n    */\n    iterLines(from, to) {\n        let inner;\n        if (from == null) {\n            inner = this.iter();\n        }\n        else {\n            if (to == null)\n                to = this.lines + 1;\n            let start = this.line(from).from;\n            inner = this.iterRange(start, Math.max(start, to == this.lines + 1 ? this.length : to <= 1 ? 0 : this.line(to - 1).to));\n        }\n        return new LineCursor(inner);\n    }\n    /**\n    @internal\n    */\n    toString() { return this.sliceString(0); }\n    /**\n    Convert the document to an array of lines (which can be\n    deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).\n    */\n    toJSON() {\n        let lines = [];\n        this.flatten(lines);\n        return lines;\n    }\n    /**\n    Create a `Text` instance for the given array of lines.\n    */\n    static of(text) {\n        if (text.length == 0)\n            throw new RangeError(\"A document must have at least one line\");\n        if (text.length == 1 && !text[0])\n            return Text.empty;\n        return text.length <= 32 /* Tree.Branch */ ? new TextLeaf(text) : TextNode.from(TextLeaf.split(text, []));\n    }\n}\n// Leaves store an array of line strings. There are always line breaks\n// between these strings. Leaves are limited in size and have to be\n// contained in TextNode instances for bigger documents.\nclass TextLeaf extends Text {\n    constructor(text, length = textLength(text)) {\n        super();\n        this.text = text;\n        this.length = length;\n    }\n    get lines() { return this.text.length; }\n    get children() { return null; }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let string = this.text[i], end = offset + string.length;\n            if ((isLine ? line : end) >= target)\n                return new Line(offset, end, line, string);\n            offset = end + 1;\n            line++;\n        }\n    }\n    decompose(from, to, target, open) {\n        let text = from <= 0 && to >= this.length ? this\n            : new TextLeaf(sliceText(this.text, from, to), Math.min(to, this.length) - Math.max(0, from));\n        if (open & 1 /* Open.From */) {\n            let prev = target.pop();\n            let joined = appendText(text.text, prev.text.slice(), 0, text.length);\n            if (joined.length <= 32 /* Tree.Branch */) {\n                target.push(new TextLeaf(joined, prev.length + text.length));\n            }\n            else {\n                let mid = joined.length >> 1;\n                target.push(new TextLeaf(joined.slice(0, mid)), new TextLeaf(joined.slice(mid)));\n            }\n        }\n        else {\n            target.push(text);\n        }\n    }\n    replace(from, to, text) {\n        if (!(text instanceof TextLeaf))\n            return super.replace(from, to, text);\n        let lines = appendText(this.text, appendText(text.text, sliceText(this.text, 0, from)), to);\n        let newLen = this.length + text.length - (to - from);\n        if (lines.length <= 32 /* Tree.Branch */)\n            return new TextLeaf(lines, newLen);\n        return TextNode.from(TextLeaf.split(lines, []), newLen);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let pos = 0, i = 0; pos <= to && i < this.text.length; i++) {\n            let line = this.text[i], end = pos + line.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += line.slice(Math.max(0, from - pos), to - pos);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let line of this.text)\n            target.push(line);\n    }\n    scanIdentical() { return 0; }\n    static split(text, target) {\n        let part = [], len = -1;\n        for (let line of text) {\n            part.push(line);\n            len += line.length + 1;\n            if (part.length == 32 /* Tree.Branch */) {\n                target.push(new TextLeaf(part, len));\n                part = [];\n                len = -1;\n            }\n        }\n        if (len > -1)\n            target.push(new TextLeaf(part, len));\n        return target;\n    }\n}\n// Nodes provide the tree structure of the `Text` type. They store a\n// number of other nodes or leaves, taking care to balance themselves\n// on changes. There are implied line breaks _between_ the children of\n// a node (but not before the first or after the last child).\nclass TextNode extends Text {\n    constructor(children, length) {\n        super();\n        this.children = children;\n        this.length = length;\n        this.lines = 0;\n        for (let child of children)\n            this.lines += child.lines;\n    }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1;\n            if ((isLine ? endLine : end) >= target)\n                return child.lineInner(target, isLine, line, offset);\n            offset = end + 1;\n            line = endLine + 1;\n        }\n    }\n    decompose(from, to, target, open) {\n        for (let i = 0, pos = 0; pos <= to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from <= end && to >= pos) {\n                let childOpen = open & ((pos <= from ? 1 /* Open.From */ : 0) | (end >= to ? 2 /* Open.To */ : 0));\n                if (pos >= from && end <= to && !childOpen)\n                    target.push(child);\n                else\n                    child.decompose(from - pos, to - pos, target, childOpen);\n            }\n            pos = end + 1;\n        }\n    }\n    replace(from, to, text) {\n        if (text.lines < this.lines)\n            for (let i = 0, pos = 0; i < this.children.length; i++) {\n                let child = this.children[i], end = pos + child.length;\n                // Fast path: if the change only affects one child and the\n                // child's size remains in the acceptable range, only update\n                // that child\n                if (from >= pos && to <= end) {\n                    let updated = child.replace(from - pos, to - pos, text);\n                    let totalLines = this.lines - child.lines + updated.lines;\n                    if (updated.lines < (totalLines >> (5 /* Tree.BranchShift */ - 1)) &&\n                        updated.lines > (totalLines >> (5 /* Tree.BranchShift */ + 1))) {\n                        let copy = this.children.slice();\n                        copy[i] = updated;\n                        return new TextNode(copy, this.length - (to - from) + text.length);\n                    }\n                    return super.replace(pos, end, updated);\n                }\n                pos = end + 1;\n            }\n        return super.replace(from, to, text);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let i = 0, pos = 0; i < this.children.length && pos <= to; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += child.sliceString(from - pos, to - pos, lineSep);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let child of this.children)\n            child.flatten(target);\n    }\n    scanIdentical(other, dir) {\n        if (!(other instanceof TextNode))\n            return 0;\n        let length = 0;\n        let [iA, iB, eA, eB] = dir > 0 ? [0, 0, this.children.length, other.children.length]\n            : [this.children.length - 1, other.children.length - 1, -1, -1];\n        for (;; iA += dir, iB += dir) {\n            if (iA == eA || iB == eB)\n                return length;\n            let chA = this.children[iA], chB = other.children[iB];\n            if (chA != chB)\n                return length + chA.scanIdentical(chB, dir);\n            length += chA.length + 1;\n        }\n    }\n    static from(children, length = children.reduce((l, ch) => l + ch.length + 1, -1)) {\n        let lines = 0;\n        for (let ch of children)\n            lines += ch.lines;\n        if (lines < 32 /* Tree.Branch */) {\n            let flat = [];\n            for (let ch of children)\n                ch.flatten(flat);\n            return new TextLeaf(flat, length);\n        }\n        let chunk = Math.max(32 /* Tree.Branch */, lines >> 5 /* Tree.BranchShift */), maxChunk = chunk << 1, minChunk = chunk >> 1;\n        let chunked = [], currentLines = 0, currentLen = -1, currentChunk = [];\n        function add(child) {\n            let last;\n            if (child.lines > maxChunk && child instanceof TextNode) {\n                for (let node of child.children)\n                    add(node);\n            }\n            else if (child.lines > minChunk && (currentLines > minChunk || !currentLines)) {\n                flush();\n                chunked.push(child);\n            }\n            else if (child instanceof TextLeaf && currentLines &&\n                (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                child.lines + last.lines <= 32 /* Tree.Branch */) {\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk[currentChunk.length - 1] = new TextLeaf(last.text.concat(child.text), last.length + 1 + child.length);\n            }\n            else {\n                if (currentLines + child.lines > chunk)\n                    flush();\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk.push(child);\n            }\n        }\n        function flush() {\n            if (currentLines == 0)\n                return;\n            chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLen));\n            currentLen = -1;\n            currentLines = currentChunk.length = 0;\n        }\n        for (let child of children)\n            add(child);\n        flush();\n        return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length);\n    }\n}\nText.empty = /*@__PURE__*/new TextLeaf([\"\"], 0);\nfunction textLength(text) {\n    let length = -1;\n    for (let line of text)\n        length += line.length + 1;\n    return length;\n}\nfunction appendText(text, target, from = 0, to = 1e9) {\n    for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n        let line = text[i], end = pos + line.length;\n        if (end >= from) {\n            if (end > to)\n                line = line.slice(0, to - pos);\n            if (pos < from)\n                line = line.slice(from - pos);\n            if (first) {\n                target[target.length - 1] += line;\n                first = false;\n            }\n            else\n                target.push(line);\n        }\n        pos = end + 1;\n    }\n    return target;\n}\nfunction sliceText(text, from, to) {\n    return appendText(text, [\"\"], from, to);\n}\nclass RawTextCursor {\n    constructor(text, dir = 1) {\n        this.dir = dir;\n        this.done = false;\n        this.lineBreak = false;\n        this.value = \"\";\n        this.nodes = [text];\n        this.offsets = [dir > 0 ? 1 : (text instanceof TextLeaf ? text.text.length : text.children.length) << 1];\n    }\n    nextInner(skip, dir) {\n        this.done = this.lineBreak = false;\n        for (;;) {\n            let last = this.nodes.length - 1;\n            let top = this.nodes[last], offsetValue = this.offsets[last], offset = offsetValue >> 1;\n            let size = top instanceof TextLeaf ? top.text.length : top.children.length;\n            if (offset == (dir > 0 ? size : 0)) {\n                if (last == 0) {\n                    this.done = true;\n                    this.value = \"\";\n                    return this;\n                }\n                if (dir > 0)\n                    this.offsets[last - 1]++;\n                this.nodes.pop();\n                this.offsets.pop();\n            }\n            else if ((offsetValue & 1) == (dir > 0 ? 0 : 1)) {\n                this.offsets[last] += dir;\n                if (skip == 0) {\n                    this.lineBreak = true;\n                    this.value = \"\\n\";\n                    return this;\n                }\n                skip--;\n            }\n            else if (top instanceof TextLeaf) {\n                // Move to the next string\n                let next = top.text[offset + (dir < 0 ? -1 : 0)];\n                this.offsets[last] += dir;\n                if (next.length > Math.max(0, skip)) {\n                    this.value = skip == 0 ? next : dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip);\n                    return this;\n                }\n                skip -= next.length;\n            }\n            else {\n                let next = top.children[offset + (dir < 0 ? -1 : 0)];\n                if (skip > next.length) {\n                    skip -= next.length;\n                    this.offsets[last] += dir;\n                }\n                else {\n                    if (dir < 0)\n                        this.offsets[last]--;\n                    this.nodes.push(next);\n                    this.offsets.push(dir > 0 ? 1 : (next instanceof TextLeaf ? next.text.length : next.children.length) << 1);\n                }\n            }\n        }\n    }\n    next(skip = 0) {\n        if (skip < 0) {\n            this.nextInner(-skip, (-this.dir));\n            skip = this.value.length;\n        }\n        return this.nextInner(skip, this.dir);\n    }\n}\nclass PartialTextCursor {\n    constructor(text, start, end) {\n        this.value = \"\";\n        this.done = false;\n        this.cursor = new RawTextCursor(text, start > end ? -1 : 1);\n        this.pos = start > end ? text.length : 0;\n        this.from = Math.min(start, end);\n        this.to = Math.max(start, end);\n    }\n    nextInner(skip, dir) {\n        if (dir < 0 ? this.pos <= this.from : this.pos >= this.to) {\n            this.value = \"\";\n            this.done = true;\n            return this;\n        }\n        skip += Math.max(0, dir < 0 ? this.pos - this.to : this.from - this.pos);\n        let limit = dir < 0 ? this.pos - this.from : this.to - this.pos;\n        if (skip > limit)\n            skip = limit;\n        limit -= skip;\n        let { value } = this.cursor.next(skip);\n        this.pos += (value.length + skip) * dir;\n        this.value = value.length <= limit ? value : dir < 0 ? value.slice(value.length - limit) : value.slice(0, limit);\n        this.done = !this.value;\n        return this;\n    }\n    next(skip = 0) {\n        if (skip < 0)\n            skip = Math.max(skip, this.from - this.pos);\n        else if (skip > 0)\n            skip = Math.min(skip, this.to - this.pos);\n        return this.nextInner(skip, this.cursor.dir);\n    }\n    get lineBreak() { return this.cursor.lineBreak && this.value != \"\"; }\n}\nclass LineCursor {\n    constructor(inner) {\n        this.inner = inner;\n        this.afterBreak = true;\n        this.value = \"\";\n        this.done = false;\n    }\n    next(skip = 0) {\n        let { done, lineBreak, value } = this.inner.next(skip);\n        if (done) {\n            this.done = true;\n            this.value = \"\";\n        }\n        else if (lineBreak) {\n            if (this.afterBreak) {\n                this.value = \"\";\n            }\n            else {\n                this.afterBreak = true;\n                this.next();\n            }\n        }\n        else {\n            this.value = value;\n            this.afterBreak = false;\n        }\n        return this;\n    }\n    get lineBreak() { return false; }\n}\nif (typeof Symbol != \"undefined\") {\n    Text.prototype[Symbol.iterator] = function () { return this.iter(); };\n    RawTextCursor.prototype[Symbol.iterator] = PartialTextCursor.prototype[Symbol.iterator] =\n        LineCursor.prototype[Symbol.iterator] = function () { return this; };\n}\n/**\nThis type describes a line in the document. It is created\non-demand when lines are [queried](https://codemirror.net/6/docs/ref/#state.Text.lineAt).\n*/\nclass Line {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position of the start of the line.\n    */\n    from, \n    /**\n    The position at the end of the line (_before_ the line break,\n    or at the end of document for the last line).\n    */\n    to, \n    /**\n    This line's line number (1-based).\n    */\n    number, \n    /**\n    The line's content.\n    */\n    text) {\n        this.from = from;\n        this.to = to;\n        this.number = number;\n        this.text = text;\n    }\n    /**\n    The length of the line (not including any line break after it).\n    */\n    get length() { return this.to - this.from; }\n}\n\n// Compressed representation of the Grapheme_Cluster_Break=Extend\n// information from\n// http://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.\n// Each pair of elements represents a range, as an offet from the\n// previous range and a length. Numbers are in base-36, with the empty\n// string being a shorthand for 1.\nlet extend = /*@__PURE__*/\"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o\".split(\",\").map(s => s ? parseInt(s, 36) : 1);\n// Convert offsets into absolute values\nfor (let i = 1; i < extend.length; i++)\n    extend[i] += extend[i - 1];\nfunction isExtendingChar(code) {\n    for (let i = 1; i < extend.length; i += 2)\n        if (extend[i] > code)\n            return extend[i - 1] <= code;\n    return false;\n}\nfunction isRegionalIndicator(code) {\n    return code >= 0x1F1E6 && code <= 0x1F1FF;\n}\nconst ZWJ = 0x200d;\n/**\nReturns a next grapheme cluster break _after_ (not equal to)\n`pos`, if `forward` is true, or before otherwise. Returns `pos`\nitself if no further cluster break is available in the string.\nMoves across surrogate pairs, extending characters (when\n`includeExtending` is true), characters joined with zero-width\njoiners, and flag emoji.\n*/\nfunction findClusterBreak(str, pos, forward = true, includeExtending = true) {\n    return (forward ? nextClusterBreak : prevClusterBreak)(str, pos, includeExtending);\n}\nfunction nextClusterBreak(str, pos, includeExtending) {\n    if (pos == str.length)\n        return pos;\n    // If pos is in the middle of a surrogate pair, move to its start\n    if (pos && surrogateLow(str.charCodeAt(pos)) && surrogateHigh(str.charCodeAt(pos - 1)))\n        pos--;\n    let prev = codePointAt(str, pos);\n    pos += codePointSize(prev);\n    while (pos < str.length) {\n        let next = codePointAt(str, pos);\n        if (prev == ZWJ || next == ZWJ || includeExtending && isExtendingChar(next)) {\n            pos += codePointSize(next);\n            prev = next;\n        }\n        else if (isRegionalIndicator(next)) {\n            let countBefore = 0, i = pos - 2;\n            while (i >= 0 && isRegionalIndicator(codePointAt(str, i))) {\n                countBefore++;\n                i -= 2;\n            }\n            if (countBefore % 2 == 0)\n                break;\n            else\n                pos += 2;\n        }\n        else {\n            break;\n        }\n    }\n    return pos;\n}\nfunction prevClusterBreak(str, pos, includeExtending) {\n    while (pos > 0) {\n        let found = nextClusterBreak(str, pos - 2, includeExtending);\n        if (found < pos)\n            return found;\n        pos--;\n    }\n    return 0;\n}\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000; }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00; }\n/**\nFind the code point at the given position in a string (like the\n[`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)\nstring method).\n*/\nfunction codePointAt(str, pos) {\n    let code0 = str.charCodeAt(pos);\n    if (!surrogateHigh(code0) || pos + 1 == str.length)\n        return code0;\n    let code1 = str.charCodeAt(pos + 1);\n    if (!surrogateLow(code1))\n        return code0;\n    return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000;\n}\n/**\nGiven a Unicode codepoint, return the JavaScript string that\nrespresents it (like\n[`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)).\n*/\nfunction fromCodePoint(code) {\n    if (code <= 0xffff)\n        return String.fromCharCode(code);\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xd800, (code & 1023) + 0xdc00);\n}\n/**\nThe amount of positions a character takes up a JavaScript string.\n*/\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2; }\n\nconst DefaultSplit = /\\r\\n?|\\n/;\n/**\nDistinguishes different ways in which positions can be mapped.\n*/\nvar MapMode = /*@__PURE__*/(function (MapMode) {\n    /**\n    Map a position to a valid new position, even when its context\n    was deleted.\n    */\n    MapMode[MapMode[\"Simple\"] = 0] = \"Simple\";\n    /**\n    Return null if deletion happens across the position.\n    */\n    MapMode[MapMode[\"TrackDel\"] = 1] = \"TrackDel\";\n    /**\n    Return null if the character _before_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackBefore\"] = 2] = \"TrackBefore\";\n    /**\n    Return null if the character _after_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackAfter\"] = 3] = \"TrackAfter\";\nreturn MapMode})(MapMode || (MapMode = {}));\n/**\nA change description is a variant of [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet)\nthat doesn't store the inserted text. As such, it can't be\napplied, but is cheaper to store and manipulate.\n*/\nclass ChangeDesc {\n    // Sections are encoded as pairs of integers. The first is the\n    // length in the current document, and the second is -1 for\n    // unaffected sections, and the length of the replacement content\n    // otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n    // 0), and a replacement two positive numbers.\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    sections) {\n        this.sections = sections;\n    }\n    /**\n    The length of the document before the change.\n    */\n    get length() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2)\n            result += this.sections[i];\n        return result;\n    }\n    /**\n    The length of the document after the change.\n    */\n    get newLength() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let ins = this.sections[i + 1];\n            result += ins < 0 ? this.sections[i] : ins;\n        }\n        return result;\n    }\n    /**\n    False when there are actual changes in this set.\n    */\n    get empty() { return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0; }\n    /**\n    Iterate over the unchanged parts left by these changes. `posA`\n    provides the position of the range in the old document, `posB`\n    the new position in the changed document.\n    */\n    iterGaps(f) {\n        for (let i = 0, posA = 0, posB = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0) {\n                f(posA, posB, len);\n                posB += len;\n            }\n            else {\n                posB += ins;\n            }\n            posA += len;\n        }\n    }\n    /**\n    Iterate over the ranges changed by these changes. (See\n    [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a\n    variant that also provides you with the inserted text.)\n    `fromA`/`toA` provides the extent of the change in the starting\n    document, `fromB`/`toB` the extent of the replacement in the\n    changed document.\n    \n    When `individual` is true, adjacent changes (which are kept\n    separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are\n    reported separately.\n    */\n    iterChangedRanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a description of the inverted form of these changes.\n    */\n    get invertedDesc() {\n        let sections = [];\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0)\n                sections.push(len, ins);\n            else\n                sections.push(ins, len);\n        }\n        return new ChangeDesc(sections);\n    }\n    /**\n    Compute the combined effect of applying another set of changes\n    after this one. The length of the document after this set should\n    match the length before `other`.\n    */\n    composeDesc(other) { return this.empty ? other : other.empty ? this : composeSets(this, other); }\n    /**\n    Map this description, which should start with the same document\n    as `other`, over another set of changes, so that it can be\n    applied after it. When `before` is true, map as if the changes\n    in `other` happened before the ones in `this`.\n    */\n    mapDesc(other, before = false) { return other.empty ? this : mapSet(this, other, before); }\n    mapPos(pos, assoc = -1, mode = MapMode.Simple) {\n        let posA = 0, posB = 0;\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++], endA = posA + len;\n            if (ins < 0) {\n                if (endA > pos)\n                    return posB + (pos - posA);\n                posB += len;\n            }\n            else {\n                if (mode != MapMode.Simple && endA >= pos &&\n                    (mode == MapMode.TrackDel && posA < pos && endA > pos ||\n                        mode == MapMode.TrackBefore && posA < pos ||\n                        mode == MapMode.TrackAfter && endA > pos))\n                    return null;\n                if (endA > pos || endA == pos && assoc < 0 && !len)\n                    return pos == posA || assoc < 0 ? posB : posB + ins;\n                posB += ins;\n            }\n            posA = endA;\n        }\n        if (pos > posA)\n            throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);\n        return posB;\n    }\n    /**\n    Check whether these changes touch a given range. When one of the\n    changes entirely covers the range, the string `\"cover\"` is\n    returned.\n    */\n    touchesRange(from, to = from) {\n        for (let i = 0, pos = 0; i < this.sections.length && pos <= to;) {\n            let len = this.sections[i++], ins = this.sections[i++], end = pos + len;\n            if (ins >= 0 && pos <= to && end >= from)\n                return pos < from && end > to ? \"cover\" : true;\n            pos = end;\n        }\n        return false;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let result = \"\";\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            result += (result ? \" \" : \"\") + len + (ins >= 0 ? \":\" + ins : \"\");\n        }\n        return result;\n    }\n    /**\n    Serialize this change desc to a JSON-representable value.\n    */\n    toJSON() { return this.sections; }\n    /**\n    Create a change desc from its JSON representation (as produced\n    by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json) || json.length % 2 || json.some(a => typeof a != \"number\"))\n            throw new RangeError(\"Invalid JSON representation of ChangeDesc\");\n        return new ChangeDesc(json);\n    }\n    /**\n    @internal\n    */\n    static create(sections) { return new ChangeDesc(sections); }\n}\n/**\nA change set represents a group of modifications to a document. It\nstores the document length, and can only be applied to documents\nwith exactly that length.\n*/\nclass ChangeSet extends ChangeDesc {\n    constructor(sections, \n    /**\n    @internal\n    */\n    inserted) {\n        super(sections);\n        this.inserted = inserted;\n    }\n    /**\n    Apply the changes to a document, returning the modified\n    document.\n    */\n    apply(doc) {\n        if (this.length != doc.length)\n            throw new RangeError(\"Applying change set to a document with the wrong length\");\n        iterChanges(this, (fromA, toA, fromB, _toB, text) => doc = doc.replace(fromB, fromB + (toA - fromA), text), false);\n        return doc;\n    }\n    mapDesc(other, before = false) { return mapSet(this, other, before, true); }\n    /**\n    Given the document as it existed _before_ the changes, return a\n    change set that represents the inverse of this set, which could\n    be used to go from the document created by the changes back to\n    the document as it existed before the changes.\n    */\n    invert(doc) {\n        let sections = this.sections.slice(), inserted = [];\n        for (let i = 0, pos = 0; i < sections.length; i += 2) {\n            let len = sections[i], ins = sections[i + 1];\n            if (ins >= 0) {\n                sections[i] = ins;\n                sections[i + 1] = len;\n                let index = i >> 1;\n                while (inserted.length < index)\n                    inserted.push(Text.empty);\n                inserted.push(len ? doc.slice(pos, pos + len) : Text.empty);\n            }\n            pos += len;\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    Combine two subsequent change sets into a single set. `other`\n    must start in the document produced by `this`. If `this` goes\n    `docA` → `docB` and `other` represents `docB` → `docC`, the\n    returned value will represent the change `docA` → `docC`.\n    */\n    compose(other) { return this.empty ? other : other.empty ? this : composeSets(this, other, true); }\n    /**\n    Given another change set starting in the same document, maps this\n    change set over the other, producing a new change set that can be\n    applied to the document produced by applying `other`. When\n    `before` is `true`, order changes as if `this` comes before\n    `other`, otherwise (the default) treat `other` as coming first.\n    \n    Given two changes `A` and `B`, `A.compose(B.map(A))` and\n    `B.compose(A.map(B, true))` will produce the same document. This\n    provides a basic form of [operational\n    transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n    and can be used for collaborative editing.\n    */\n    map(other, before = false) { return other.empty ? this : mapSet(this, other, before, true); }\n    /**\n    Iterate over the changed ranges in the document, calling `f` for\n    each, with the range in the original document (`fromA`-`toA`)\n    and the range that replaces it in the new document\n    (`fromB`-`toB`).\n    \n    When `individual` is true, adjacent changes are reported\n    separately.\n    */\n    iterChanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change\n    set.\n    */\n    get desc() { return ChangeDesc.create(this.sections); }\n    /**\n    @internal\n    */\n    filter(ranges) {\n        let resultSections = [], resultInserted = [], filteredSections = [];\n        let iter = new SectionIter(this);\n        done: for (let i = 0, pos = 0;;) {\n            let next = i == ranges.length ? 1e9 : ranges[i++];\n            while (pos < next || pos == next && iter.len == 0) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, next - pos);\n                addSection(filteredSections, len, -1);\n                let ins = iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0;\n                addSection(resultSections, len, ins);\n                if (ins > 0)\n                    addInsert(resultInserted, resultSections, iter.text);\n                iter.forward(len);\n                pos += len;\n            }\n            let end = ranges[i++];\n            while (pos < end) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, end - pos);\n                addSection(resultSections, len, -1);\n                addSection(filteredSections, len, iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0);\n                iter.forward(len);\n                pos += len;\n            }\n        }\n        return { changes: new ChangeSet(resultSections, resultInserted),\n            filtered: ChangeDesc.create(filteredSections) };\n    }\n    /**\n    Serialize this change set to a JSON-representable value.\n    */\n    toJSON() {\n        let parts = [];\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let len = this.sections[i], ins = this.sections[i + 1];\n            if (ins < 0)\n                parts.push(len);\n            else if (ins == 0)\n                parts.push([len]);\n            else\n                parts.push([len].concat(this.inserted[i >> 1].toJSON()));\n        }\n        return parts;\n    }\n    /**\n    Create a change set for the given changes, for a document of the\n    given length, using `lineSep` as line separator.\n    */\n    static of(changes, length, lineSep) {\n        let sections = [], inserted = [], pos = 0;\n        let total = null;\n        function flush(force = false) {\n            if (!force && !sections.length)\n                return;\n            if (pos < length)\n                addSection(sections, length - pos, -1);\n            let set = new ChangeSet(sections, inserted);\n            total = total ? total.compose(set.map(total)) : set;\n            sections = [];\n            inserted = [];\n            pos = 0;\n        }\n        function process(spec) {\n            if (Array.isArray(spec)) {\n                for (let sub of spec)\n                    process(sub);\n            }\n            else if (spec instanceof ChangeSet) {\n                if (spec.length != length)\n                    throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);\n                flush();\n                total = total ? total.compose(spec.map(total)) : spec;\n            }\n            else {\n                let { from, to = from, insert } = spec;\n                if (from > to || from < 0 || to > length)\n                    throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);\n                let insText = !insert ? Text.empty : typeof insert == \"string\" ? Text.of(insert.split(lineSep || DefaultSplit)) : insert;\n                let insLen = insText.length;\n                if (from == to && insLen == 0)\n                    return;\n                if (from < pos)\n                    flush();\n                if (from > pos)\n                    addSection(sections, from - pos, -1);\n                addSection(sections, to - from, insLen);\n                addInsert(inserted, sections, insText);\n                pos = to;\n            }\n        }\n        process(changes);\n        flush(!total);\n        return total;\n    }\n    /**\n    Create an empty changeset of the given length.\n    */\n    static empty(length) {\n        return new ChangeSet(length ? [length, -1] : [], []);\n    }\n    /**\n    Create a changeset from its JSON representation (as produced by\n    [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json))\n            throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n        let sections = [], inserted = [];\n        for (let i = 0; i < json.length; i++) {\n            let part = json[i];\n            if (typeof part == \"number\") {\n                sections.push(part, -1);\n            }\n            else if (!Array.isArray(part) || typeof part[0] != \"number\" || part.some((e, i) => i && typeof e != \"string\")) {\n                throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n            }\n            else if (part.length == 1) {\n                sections.push(part[0], 0);\n            }\n            else {\n                while (inserted.length < i)\n                    inserted.push(Text.empty);\n                inserted[i] = Text.of(part.slice(1));\n                sections.push(part[0], inserted[i].length);\n            }\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    @internal\n    */\n    static createSet(sections, inserted) {\n        return new ChangeSet(sections, inserted);\n    }\n}\nfunction addSection(sections, len, ins, forceJoin = false) {\n    if (len == 0 && ins <= 0)\n        return;\n    let last = sections.length - 2;\n    if (last >= 0 && ins <= 0 && ins == sections[last + 1])\n        sections[last] += len;\n    else if (len == 0 && sections[last] == 0)\n        sections[last + 1] += ins;\n    else if (forceJoin) {\n        sections[last] += len;\n        sections[last + 1] += ins;\n    }\n    else\n        sections.push(len, ins);\n}\nfunction addInsert(values, sections, value) {\n    if (value.length == 0)\n        return;\n    let index = (sections.length - 2) >> 1;\n    if (index < values.length) {\n        values[values.length - 1] = values[values.length - 1].append(value);\n    }\n    else {\n        while (values.length < index)\n            values.push(Text.empty);\n        values.push(value);\n    }\n}\nfunction iterChanges(desc, f, individual) {\n    let inserted = desc.inserted;\n    for (let posA = 0, posB = 0, i = 0; i < desc.sections.length;) {\n        let len = desc.sections[i++], ins = desc.sections[i++];\n        if (ins < 0) {\n            posA += len;\n            posB += len;\n        }\n        else {\n            let endA = posA, endB = posB, text = Text.empty;\n            for (;;) {\n                endA += len;\n                endB += ins;\n                if (ins && inserted)\n                    text = text.append(inserted[(i - 2) >> 1]);\n                if (individual || i == desc.sections.length || desc.sections[i + 1] < 0)\n                    break;\n                len = desc.sections[i++];\n                ins = desc.sections[i++];\n            }\n            f(posA, endA, posB, endB, text);\n            posA = endA;\n            posB = endB;\n        }\n    }\n}\nfunction mapSet(setA, setB, before, mkSet = false) {\n    // Produce a copy of setA that applies to the document after setB\n    // has been applied (assuming both start at the same document).\n    let sections = [], insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    // Iterate over both sets in parallel. inserted tracks, for changes\n    // in A that have to be processed piece-by-piece, whether their\n    // content has been inserted already, and refers to the section\n    // index.\n    for (let inserted = -1;;) {\n        if (a.ins == -1 && b.ins == -1) {\n            // Move across ranges skipped by both sets.\n            let len = Math.min(a.len, b.len);\n            addSection(sections, len, -1);\n            a.forward(len);\n            b.forward(len);\n        }\n        else if (b.ins >= 0 && (a.ins < 0 || inserted == a.i || a.off == 0 && (b.len < a.len || b.len == a.len && !before))) {\n            // If there's a change in B that comes before the next change in\n            // A (ordered by start pos, then len, then before flag), skip\n            // that (and process any changes in A it covers).\n            let len = b.len;\n            addSection(sections, b.ins, -1);\n            while (len) {\n                let piece = Math.min(a.len, len);\n                if (a.ins >= 0 && inserted < a.i && a.len <= piece) {\n                    addSection(sections, 0, a.ins);\n                    if (insert)\n                        addInsert(insert, sections, a.text);\n                    inserted = a.i;\n                }\n                a.forward(piece);\n                len -= piece;\n            }\n            b.next();\n        }\n        else if (a.ins >= 0) {\n            // Process the part of a change in A up to the start of the next\n            // non-deletion change in B (if overlapping).\n            let len = 0, left = a.len;\n            while (left) {\n                if (b.ins == -1) {\n                    let piece = Math.min(left, b.len);\n                    len += piece;\n                    left -= piece;\n                    b.forward(piece);\n                }\n                else if (b.ins == 0 && b.len < left) {\n                    left -= b.len;\n                    b.next();\n                }\n                else {\n                    break;\n                }\n            }\n            addSection(sections, len, inserted < a.i ? a.ins : 0);\n            if (insert && inserted < a.i)\n                addInsert(insert, sections, a.text);\n            inserted = a.i;\n            a.forward(a.len - left);\n        }\n        else if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n    }\n}\nfunction composeSets(setA, setB, mkSet = false) {\n    let sections = [];\n    let insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let open = false;;) {\n        if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else if (a.ins == 0) { // Deletion in A\n            addSection(sections, a.len, 0, open);\n            a.next();\n        }\n        else if (b.len == 0 && !b.done) { // Insertion in B\n            addSection(sections, 0, b.ins, open);\n            if (insert)\n                addInsert(insert, sections, b.text);\n            b.next();\n        }\n        else if (a.done || b.done) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else {\n            let len = Math.min(a.len2, b.len), sectionLen = sections.length;\n            if (a.ins == -1) {\n                let insB = b.ins == -1 ? -1 : b.off ? 0 : b.ins;\n                addSection(sections, len, insB, open);\n                if (insert && insB)\n                    addInsert(insert, sections, b.text);\n            }\n            else if (b.ins == -1) {\n                addSection(sections, a.off ? 0 : a.len, len, open);\n                if (insert)\n                    addInsert(insert, sections, a.textBit(len));\n            }\n            else {\n                addSection(sections, a.off ? 0 : a.len, b.off ? 0 : b.ins, open);\n                if (insert && !b.off)\n                    addInsert(insert, sections, b.text);\n            }\n            open = (a.ins > len || b.ins >= 0 && b.len > len) && (open || sections.length > sectionLen);\n            a.forward2(len);\n            b.forward(len);\n        }\n    }\n}\nclass SectionIter {\n    constructor(set) {\n        this.set = set;\n        this.i = 0;\n        this.next();\n    }\n    next() {\n        let { sections } = this.set;\n        if (this.i < sections.length) {\n            this.len = sections[this.i++];\n            this.ins = sections[this.i++];\n        }\n        else {\n            this.len = 0;\n            this.ins = -2;\n        }\n        this.off = 0;\n    }\n    get done() { return this.ins == -2; }\n    get len2() { return this.ins < 0 ? this.len : this.ins; }\n    get text() {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length ? Text.empty : inserted[index];\n    }\n    textBit(len) {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length && !len ? Text.empty\n            : inserted[index].slice(this.off, len == null ? undefined : this.off + len);\n    }\n    forward(len) {\n        if (len == this.len)\n            this.next();\n        else {\n            this.len -= len;\n            this.off += len;\n        }\n    }\n    forward2(len) {\n        if (this.ins == -1)\n            this.forward(len);\n        else if (len == this.ins)\n            this.next();\n        else {\n            this.ins -= len;\n            this.off += len;\n        }\n    }\n}\n\n/**\nA single selection range. When\n[`allowMultipleSelections`](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\nis enabled, a [selection](https://codemirror.net/6/docs/ref/#state.EditorSelection) may hold\nmultiple ranges. By default, selections hold exactly one range.\n*/\nclass SelectionRange {\n    constructor(\n    /**\n    The lower boundary of the range.\n    */\n    from, \n    /**\n    The upper boundary of the range.\n    */\n    to, flags) {\n        this.from = from;\n        this.to = to;\n        this.flags = flags;\n    }\n    /**\n    The anchor of the range—the side that doesn't move when you\n    extend it.\n    */\n    get anchor() { return this.flags & 16 /* RangeFlag.Inverted */ ? this.to : this.from; }\n    /**\n    The head of the range, which is moved when the range is\n    [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).\n    */\n    get head() { return this.flags & 16 /* RangeFlag.Inverted */ ? this.from : this.to; }\n    /**\n    True when `anchor` and `head` are at the same position.\n    */\n    get empty() { return this.from == this.to; }\n    /**\n    If this is a cursor that is explicitly associated with the\n    character on one of its sides, this returns the side. -1 means\n    the character before its position, 1 the character after, and 0\n    means no association.\n    */\n    get assoc() { return this.flags & 4 /* RangeFlag.AssocBefore */ ? -1 : this.flags & 8 /* RangeFlag.AssocAfter */ ? 1 : 0; }\n    /**\n    The bidirectional text level associated with this cursor, if\n    any.\n    */\n    get bidiLevel() {\n        let level = this.flags & 3 /* RangeFlag.BidiLevelMask */;\n        return level == 3 ? null : level;\n    }\n    /**\n    The goal column (stored vertical offset) associated with a\n    cursor. This is used to preserve the vertical position when\n    [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across\n    lines of different length.\n    */\n    get goalColumn() {\n        let value = this.flags >> 5 /* RangeFlag.GoalColumnOffset */;\n        return value == 33554431 /* RangeFlag.NoGoalColumn */ ? undefined : value;\n    }\n    /**\n    Map this range through a change, producing a valid range in the\n    updated document.\n    */\n    map(change, assoc = -1) {\n        let from, to;\n        if (this.empty) {\n            from = to = change.mapPos(this.from, assoc);\n        }\n        else {\n            from = change.mapPos(this.from, 1);\n            to = change.mapPos(this.to, -1);\n        }\n        return from == this.from && to == this.to ? this : new SelectionRange(from, to, this.flags);\n    }\n    /**\n    Extend this range to cover at least `from` to `to`.\n    */\n    extend(from, to = from) {\n        if (from <= this.anchor && to >= this.anchor)\n            return EditorSelection.range(from, to);\n        let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to;\n        return EditorSelection.range(this.anchor, head);\n    }\n    /**\n    Compare this range to another range.\n    */\n    eq(other) {\n        return this.anchor == other.anchor && this.head == other.head;\n    }\n    /**\n    Return a JSON-serializable object representing the range.\n    */\n    toJSON() { return { anchor: this.anchor, head: this.head }; }\n    /**\n    Convert a JSON representation of a range to a `SelectionRange`\n    instance.\n    */\n    static fromJSON(json) {\n        if (!json || typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid JSON representation for SelectionRange\");\n        return EditorSelection.range(json.anchor, json.head);\n    }\n    /**\n    @internal\n    */\n    static create(from, to, flags) {\n        return new SelectionRange(from, to, flags);\n    }\n}\n/**\nAn editor selection holds one or more selection ranges.\n*/\nclass EditorSelection {\n    constructor(\n    /**\n    The ranges in the selection, sorted by position. Ranges cannot\n    overlap (but they may touch, if they aren't empty).\n    */\n    ranges, \n    /**\n    The index of the _main_ range in the selection (which is\n    usually the range that was added last).\n    */\n    mainIndex) {\n        this.ranges = ranges;\n        this.mainIndex = mainIndex;\n    }\n    /**\n    Map a selection through a change. Used to adjust the selection\n    position for changes.\n    */\n    map(change, assoc = -1) {\n        if (change.empty)\n            return this;\n        return EditorSelection.create(this.ranges.map(r => r.map(change, assoc)), this.mainIndex);\n    }\n    /**\n    Compare this selection to another selection.\n    */\n    eq(other) {\n        if (this.ranges.length != other.ranges.length ||\n            this.mainIndex != other.mainIndex)\n            return false;\n        for (let i = 0; i < this.ranges.length; i++)\n            if (!this.ranges[i].eq(other.ranges[i]))\n                return false;\n        return true;\n    }\n    /**\n    Get the primary selection range. Usually, you should make sure\n    your code applies to _all_ ranges, by using methods like\n    [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).\n    */\n    get main() { return this.ranges[this.mainIndex]; }\n    /**\n    Make sure the selection only has one range. Returns a selection\n    holding only the main range from this selection.\n    */\n    asSingle() {\n        return this.ranges.length == 1 ? this : new EditorSelection([this.main], 0);\n    }\n    /**\n    Extend this selection with an extra range.\n    */\n    addRange(range, main = true) {\n        return EditorSelection.create([range].concat(this.ranges), main ? 0 : this.mainIndex + 1);\n    }\n    /**\n    Replace a given range with another range, and then normalize the\n    selection to merge and sort ranges if necessary.\n    */\n    replaceRange(range, which = this.mainIndex) {\n        let ranges = this.ranges.slice();\n        ranges[which] = range;\n        return EditorSelection.create(ranges, this.mainIndex);\n    }\n    /**\n    Convert this selection to an object that can be serialized to\n    JSON.\n    */\n    toJSON() {\n        return { ranges: this.ranges.map(r => r.toJSON()), main: this.mainIndex };\n    }\n    /**\n    Create a selection from a JSON representation.\n    */\n    static fromJSON(json) {\n        if (!json || !Array.isArray(json.ranges) || typeof json.main != \"number\" || json.main >= json.ranges.length)\n            throw new RangeError(\"Invalid JSON representation for EditorSelection\");\n        return new EditorSelection(json.ranges.map((r) => SelectionRange.fromJSON(r)), json.main);\n    }\n    /**\n    Create a selection holding a single range.\n    */\n    static single(anchor, head = anchor) {\n        return new EditorSelection([EditorSelection.range(anchor, head)], 0);\n    }\n    /**\n    Sort and merge the given set of ranges, creating a valid\n    selection.\n    */\n    static create(ranges, mainIndex = 0) {\n        if (ranges.length == 0)\n            throw new RangeError(\"A selection needs at least one range\");\n        for (let pos = 0, i = 0; i < ranges.length; i++) {\n            let range = ranges[i];\n            if (range.empty ? range.from <= pos : range.from < pos)\n                return EditorSelection.normalized(ranges.slice(), mainIndex);\n            pos = range.to;\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n    /**\n    Create a cursor selection range at the given position. You can\n    safely ignore the optional arguments in most situations.\n    */\n    static cursor(pos, assoc = 0, bidiLevel, goalColumn) {\n        return SelectionRange.create(pos, pos, (assoc == 0 ? 0 : assoc < 0 ? 4 /* RangeFlag.AssocBefore */ : 8 /* RangeFlag.AssocAfter */) |\n            (bidiLevel == null ? 3 : Math.min(2, bidiLevel)) |\n            ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* RangeFlag.NoGoalColumn */) << 5 /* RangeFlag.GoalColumnOffset */));\n    }\n    /**\n    Create a selection range.\n    */\n    static range(anchor, head, goalColumn, bidiLevel) {\n        let flags = ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* RangeFlag.NoGoalColumn */) << 5 /* RangeFlag.GoalColumnOffset */) |\n            (bidiLevel == null ? 3 : Math.min(2, bidiLevel));\n        return head < anchor ? SelectionRange.create(head, anchor, 16 /* RangeFlag.Inverted */ | 8 /* RangeFlag.AssocAfter */ | flags)\n            : SelectionRange.create(anchor, head, (head > anchor ? 4 /* RangeFlag.AssocBefore */ : 0) | flags);\n    }\n    /**\n    @internal\n    */\n    static normalized(ranges, mainIndex = 0) {\n        let main = ranges[mainIndex];\n        ranges.sort((a, b) => a.from - b.from);\n        mainIndex = ranges.indexOf(main);\n        for (let i = 1; i < ranges.length; i++) {\n            let range = ranges[i], prev = ranges[i - 1];\n            if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n                let from = prev.from, to = Math.max(range.to, prev.to);\n                if (i <= mainIndex)\n                    mainIndex--;\n                ranges.splice(--i, 2, range.anchor > range.head ? EditorSelection.range(to, from) : EditorSelection.range(from, to));\n            }\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n}\nfunction checkSelection(selection, docLength) {\n    for (let range of selection.ranges)\n        if (range.to > docLength)\n            throw new RangeError(\"Selection points outside of document\");\n}\n\nlet nextID = 0;\n/**\nA facet is a labeled value that is associated with an editor\nstate. It takes inputs from any number of extensions, and combines\nthose into a single output value.\n\nExamples of uses of facets are the [tab\nsize](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize), [editor\nattributes](https://codemirror.net/6/docs/ref/#view.EditorView^editorAttributes), and [update\nlisteners](https://codemirror.net/6/docs/ref/#view.EditorView^updateListener).\n*/\nclass Facet {\n    constructor(\n    /**\n    @internal\n    */\n    combine, \n    /**\n    @internal\n    */\n    compareInput, \n    /**\n    @internal\n    */\n    compare, isStatic, enables) {\n        this.combine = combine;\n        this.compareInput = compareInput;\n        this.compare = compare;\n        this.isStatic = isStatic;\n        /**\n        @internal\n        */\n        this.id = nextID++;\n        this.default = combine([]);\n        this.extensions = typeof enables == \"function\" ? enables(this) : enables;\n    }\n    /**\n    Define a new facet.\n    */\n    static define(config = {}) {\n        return new Facet(config.combine || ((a) => a), config.compareInput || ((a, b) => a === b), config.compare || (!config.combine ? sameArray : (a, b) => a === b), !!config.static, config.enables);\n    }\n    /**\n    Returns an extension that adds the given value to this facet.\n    */\n    of(value) {\n        return new FacetProvider([], this, 0 /* Provider.Static */, value);\n    }\n    /**\n    Create an extension that computes a value for the facet from a\n    state. You must take care to declare the parts of the state that\n    this value depends on, since your function is only called again\n    for a new state when one of those parts changed.\n    \n    In cases where your value depends only on a single field, you'll\n    want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.\n    */\n    compute(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 1 /* Provider.Single */, get);\n    }\n    /**\n    Create an extension that computes zero or more values for this\n    facet from a state.\n    */\n    computeN(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 2 /* Provider.Multi */, get);\n    }\n    from(field, get) {\n        if (!get)\n            get = x => x;\n        return this.compute([field], state => get(state.field(field)));\n    }\n}\nfunction sameArray(a, b) {\n    return a == b || a.length == b.length && a.every((e, i) => e === b[i]);\n}\nclass FacetProvider {\n    constructor(dependencies, facet, type, value) {\n        this.dependencies = dependencies;\n        this.facet = facet;\n        this.type = type;\n        this.value = value;\n        this.id = nextID++;\n    }\n    dynamicSlot(addresses) {\n        var _a;\n        let getter = this.value;\n        let compare = this.facet.compareInput;\n        let id = this.id, idx = addresses[id] >> 1, multi = this.type == 2 /* Provider.Multi */;\n        let depDoc = false, depSel = false, depAddrs = [];\n        for (let dep of this.dependencies) {\n            if (dep == \"doc\")\n                depDoc = true;\n            else if (dep == \"selection\")\n                depSel = true;\n            else if ((((_a = addresses[dep.id]) !== null && _a !== void 0 ? _a : 1) & 1) == 0)\n                depAddrs.push(addresses[dep.id]);\n        }\n        return {\n            create(state) {\n                state.values[idx] = getter(state);\n                return 1 /* SlotStatus.Changed */;\n            },\n            update(state, tr) {\n                if ((depDoc && tr.docChanged) || (depSel && (tr.docChanged || tr.selection)) || ensureAll(state, depAddrs)) {\n                    let newVal = getter(state);\n                    if (multi ? !compareArray(newVal, state.values[idx], compare) : !compare(newVal, state.values[idx])) {\n                        state.values[idx] = newVal;\n                        return 1 /* SlotStatus.Changed */;\n                    }\n                }\n                return 0;\n            },\n            reconfigure: (state, oldState) => {\n                let newVal, oldAddr = oldState.config.address[id];\n                if (oldAddr != null) {\n                    let oldVal = getAddr(oldState, oldAddr);\n                    if (this.dependencies.every(dep => {\n                        return dep instanceof Facet ? oldState.facet(dep) === state.facet(dep) :\n                            dep instanceof StateField ? oldState.field(dep, false) == state.field(dep, false) : true;\n                    }) || (multi ? compareArray(newVal = getter(state), oldVal, compare) : compare(newVal = getter(state), oldVal))) {\n                        state.values[idx] = oldVal;\n                        return 0;\n                    }\n                }\n                else {\n                    newVal = getter(state);\n                }\n                state.values[idx] = newVal;\n                return 1 /* SlotStatus.Changed */;\n            }\n        };\n    }\n}\nfunction compareArray(a, b, compare) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!compare(a[i], b[i]))\n            return false;\n    return true;\n}\nfunction ensureAll(state, addrs) {\n    let changed = false;\n    for (let addr of addrs)\n        if (ensureAddr(state, addr) & 1 /* SlotStatus.Changed */)\n            changed = true;\n    return changed;\n}\nfunction dynamicFacetSlot(addresses, facet, providers) {\n    let providerAddrs = providers.map(p => addresses[p.id]);\n    let providerTypes = providers.map(p => p.type);\n    let dynamic = providerAddrs.filter(p => !(p & 1));\n    let idx = addresses[facet.id] >> 1;\n    function get(state) {\n        let values = [];\n        for (let i = 0; i < providerAddrs.length; i++) {\n            let value = getAddr(state, providerAddrs[i]);\n            if (providerTypes[i] == 2 /* Provider.Multi */)\n                for (let val of value)\n                    values.push(val);\n            else\n                values.push(value);\n        }\n        return facet.combine(values);\n    }\n    return {\n        create(state) {\n            for (let addr of providerAddrs)\n                ensureAddr(state, addr);\n            state.values[idx] = get(state);\n            return 1 /* SlotStatus.Changed */;\n        },\n        update(state, tr) {\n            if (!ensureAll(state, dynamic))\n                return 0;\n            let value = get(state);\n            if (facet.compare(value, state.values[idx]))\n                return 0;\n            state.values[idx] = value;\n            return 1 /* SlotStatus.Changed */;\n        },\n        reconfigure(state, oldState) {\n            let depChanged = ensureAll(state, providerAddrs);\n            let oldProviders = oldState.config.facets[facet.id], oldValue = oldState.facet(facet);\n            if (oldProviders && !depChanged && sameArray(providers, oldProviders)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            let value = get(state);\n            if (facet.compare(value, oldValue)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            state.values[idx] = value;\n            return 1 /* SlotStatus.Changed */;\n        }\n    };\n}\nconst initField = /*@__PURE__*/Facet.define({ static: true });\n/**\nFields can store additional information in an editor state, and\nkeep it in sync with the rest of the state.\n*/\nclass StateField {\n    constructor(\n    /**\n    @internal\n    */\n    id, createF, updateF, compareF, \n    /**\n    @internal\n    */\n    spec) {\n        this.id = id;\n        this.createF = createF;\n        this.updateF = updateF;\n        this.compareF = compareF;\n        this.spec = spec;\n        /**\n        @internal\n        */\n        this.provides = undefined;\n    }\n    /**\n    Define a state field.\n    */\n    static define(config) {\n        let field = new StateField(nextID++, config.create, config.update, config.compare || ((a, b) => a === b), config);\n        if (config.provide)\n            field.provides = config.provide(field);\n        return field;\n    }\n    create(state) {\n        let init = state.facet(initField).find(i => i.field == this);\n        return ((init === null || init === void 0 ? void 0 : init.create) || this.createF)(state);\n    }\n    /**\n    @internal\n    */\n    slot(addresses) {\n        let idx = addresses[this.id] >> 1;\n        return {\n            create: (state) => {\n                state.values[idx] = this.create(state);\n                return 1 /* SlotStatus.Changed */;\n            },\n            update: (state, tr) => {\n                let oldVal = state.values[idx];\n                let value = this.updateF(oldVal, tr);\n                if (this.compareF(oldVal, value))\n                    return 0;\n                state.values[idx] = value;\n                return 1 /* SlotStatus.Changed */;\n            },\n            reconfigure: (state, oldState) => {\n                if (oldState.config.address[this.id] != null) {\n                    state.values[idx] = oldState.field(this);\n                    return 0;\n                }\n                state.values[idx] = this.create(state);\n                return 1 /* SlotStatus.Changed */;\n            }\n        };\n    }\n    /**\n    Returns an extension that enables this field and overrides the\n    way it is initialized. Can be useful when you need to provide a\n    non-default starting value for the field.\n    */\n    init(create) {\n        return [this, initField.of({ field: this, create })];\n    }\n    /**\n    State field instances can be used as\n    [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a\n    given state.\n    */\n    get extension() { return this; }\n}\nconst Prec_ = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };\nfunction prec(value) {\n    return (ext) => new PrecExtension(ext, value);\n}\n/**\nBy default extensions are registered in the order they are found\nin the flattened form of nested array that was provided.\nIndividual extension values can be assigned a precedence to\noverride this. Extensions that do not have a precedence set get\nthe precedence of the nearest parent with a precedence, or\n[`default`](https://codemirror.net/6/docs/ref/#state.Prec.default) if there is no such parent. The\nfinal ordering of extensions is determined by first sorting by\nprecedence and then by order within each precedence.\n*/\nconst Prec = {\n    /**\n    The highest precedence level, for extensions that should end up\n    near the start of the precedence ordering.\n    */\n    highest: /*@__PURE__*/prec(Prec_.highest),\n    /**\n    A higher-than-default precedence, for extensions that should\n    come before those with default precedence.\n    */\n    high: /*@__PURE__*/prec(Prec_.high),\n    /**\n    The default precedence, which is also used for extensions\n    without an explicit precedence.\n    */\n    default: /*@__PURE__*/prec(Prec_.default),\n    /**\n    A lower-than-default precedence.\n    */\n    low: /*@__PURE__*/prec(Prec_.low),\n    /**\n    The lowest precedence level. Meant for things that should end up\n    near the end of the extension order.\n    */\n    lowest: /*@__PURE__*/prec(Prec_.lowest)\n};\nclass PrecExtension {\n    constructor(inner, prec) {\n        this.inner = inner;\n        this.prec = prec;\n    }\n}\n/**\nExtension compartments can be used to make a configuration\ndynamic. By [wrapping](https://codemirror.net/6/docs/ref/#state.Compartment.of) part of your\nconfiguration in a compartment, you can later\n[replace](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure) that part through a\ntransaction.\n*/\nclass Compartment {\n    /**\n    Create an instance of this compartment to add to your [state\n    configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).\n    */\n    of(ext) { return new CompartmentInstance(this, ext); }\n    /**\n    Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that\n    reconfigures this compartment.\n    */\n    reconfigure(content) {\n        return Compartment.reconfigure.of({ compartment: this, extension: content });\n    }\n    /**\n    Get the current content of the compartment in the state, or\n    `undefined` if it isn't present.\n    */\n    get(state) {\n        return state.config.compartments.get(this);\n    }\n}\nclass CompartmentInstance {\n    constructor(compartment, inner) {\n        this.compartment = compartment;\n        this.inner = inner;\n    }\n}\nclass Configuration {\n    constructor(base, compartments, dynamicSlots, address, staticValues, facets) {\n        this.base = base;\n        this.compartments = compartments;\n        this.dynamicSlots = dynamicSlots;\n        this.address = address;\n        this.staticValues = staticValues;\n        this.facets = facets;\n        this.statusTemplate = [];\n        while (this.statusTemplate.length < dynamicSlots.length)\n            this.statusTemplate.push(0 /* SlotStatus.Unresolved */);\n    }\n    staticFacet(facet) {\n        let addr = this.address[facet.id];\n        return addr == null ? facet.default : this.staticValues[addr >> 1];\n    }\n    static resolve(base, compartments, oldState) {\n        let fields = [];\n        let facets = Object.create(null);\n        let newCompartments = new Map();\n        for (let ext of flatten(base, compartments, newCompartments)) {\n            if (ext instanceof StateField)\n                fields.push(ext);\n            else\n                (facets[ext.facet.id] || (facets[ext.facet.id] = [])).push(ext);\n        }\n        let address = Object.create(null);\n        let staticValues = [];\n        let dynamicSlots = [];\n        for (let field of fields) {\n            address[field.id] = dynamicSlots.length << 1;\n            dynamicSlots.push(a => field.slot(a));\n        }\n        let oldFacets = oldState === null || oldState === void 0 ? void 0 : oldState.config.facets;\n        for (let id in facets) {\n            let providers = facets[id], facet = providers[0].facet;\n            let oldProviders = oldFacets && oldFacets[id] || [];\n            if (providers.every(p => p.type == 0 /* Provider.Static */)) {\n                address[facet.id] = (staticValues.length << 1) | 1;\n                if (sameArray(oldProviders, providers)) {\n                    staticValues.push(oldState.facet(facet));\n                }\n                else {\n                    let value = facet.combine(providers.map(p => p.value));\n                    staticValues.push(oldState && facet.compare(value, oldState.facet(facet)) ? oldState.facet(facet) : value);\n                }\n            }\n            else {\n                for (let p of providers) {\n                    if (p.type == 0 /* Provider.Static */) {\n                        address[p.id] = (staticValues.length << 1) | 1;\n                        staticValues.push(p.value);\n                    }\n                    else {\n                        address[p.id] = dynamicSlots.length << 1;\n                        dynamicSlots.push(a => p.dynamicSlot(a));\n                    }\n                }\n                address[facet.id] = dynamicSlots.length << 1;\n                dynamicSlots.push(a => dynamicFacetSlot(a, facet, providers));\n            }\n        }\n        let dynamic = dynamicSlots.map(f => f(address));\n        return new Configuration(base, newCompartments, dynamic, address, staticValues, facets);\n    }\n}\nfunction flatten(extension, compartments, newCompartments) {\n    let result = [[], [], [], [], []];\n    let seen = new Map();\n    function inner(ext, prec) {\n        let known = seen.get(ext);\n        if (known != null) {\n            if (known <= prec)\n                return;\n            let found = result[known].indexOf(ext);\n            if (found > -1)\n                result[known].splice(found, 1);\n            if (ext instanceof CompartmentInstance)\n                newCompartments.delete(ext.compartment);\n        }\n        seen.set(ext, prec);\n        if (Array.isArray(ext)) {\n            for (let e of ext)\n                inner(e, prec);\n        }\n        else if (ext instanceof CompartmentInstance) {\n            if (newCompartments.has(ext.compartment))\n                throw new RangeError(`Duplicate use of compartment in extensions`);\n            let content = compartments.get(ext.compartment) || ext.inner;\n            newCompartments.set(ext.compartment, content);\n            inner(content, prec);\n        }\n        else if (ext instanceof PrecExtension) {\n            inner(ext.inner, ext.prec);\n        }\n        else if (ext instanceof StateField) {\n            result[prec].push(ext);\n            if (ext.provides)\n                inner(ext.provides, prec);\n        }\n        else if (ext instanceof FacetProvider) {\n            result[prec].push(ext);\n            if (ext.facet.extensions)\n                inner(ext.facet.extensions, Prec_.default);\n        }\n        else {\n            let content = ext.extension;\n            if (!content)\n                throw new Error(`Unrecognized extension value in extension set (${ext}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);\n            inner(content, prec);\n        }\n    }\n    inner(extension, Prec_.default);\n    return result.reduce((a, b) => a.concat(b));\n}\nfunction ensureAddr(state, addr) {\n    if (addr & 1)\n        return 2 /* SlotStatus.Computed */;\n    let idx = addr >> 1;\n    let status = state.status[idx];\n    if (status == 4 /* SlotStatus.Computing */)\n        throw new Error(\"Cyclic dependency between fields and/or facets\");\n    if (status & 2 /* SlotStatus.Computed */)\n        return status;\n    state.status[idx] = 4 /* SlotStatus.Computing */;\n    let changed = state.computeSlot(state, state.config.dynamicSlots[idx]);\n    return state.status[idx] = 2 /* SlotStatus.Computed */ | changed;\n}\nfunction getAddr(state, addr) {\n    return addr & 1 ? state.config.staticValues[addr >> 1] : state.values[addr >> 1];\n}\n\nconst languageData = /*@__PURE__*/Facet.define();\nconst allowMultipleSelections = /*@__PURE__*/Facet.define({\n    combine: values => values.some(v => v),\n    static: true\n});\nconst lineSeparator = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : undefined,\n    static: true\n});\nconst changeFilter = /*@__PURE__*/Facet.define();\nconst transactionFilter = /*@__PURE__*/Facet.define();\nconst transactionExtender = /*@__PURE__*/Facet.define();\nconst readOnly = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : false\n});\n\n/**\nAnnotations are tagged values that are used to add metadata to\ntransactions in an extensible way. They should be used to model\nthings that effect the entire transaction (such as its [time\nstamp](https://codemirror.net/6/docs/ref/#state.Transaction^time) or information about its\n[origin](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent)). For effects that happen\n_alongside_ the other changes made by the transaction, [state\neffects](https://codemirror.net/6/docs/ref/#state.StateEffect) are more appropriate.\n*/\nclass Annotation {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The annotation type.\n    */\n    type, \n    /**\n    The value of this annotation.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Define a new type of annotation.\n    */\n    static define() { return new AnnotationType(); }\n}\n/**\nMarker that identifies a type of [annotation](https://codemirror.net/6/docs/ref/#state.Annotation).\n*/\nclass AnnotationType {\n    /**\n    Create an instance of this annotation.\n    */\n    of(value) { return new Annotation(this, value); }\n}\n/**\nRepresentation of a type of state effect. Defined with\n[`StateEffect.define`](https://codemirror.net/6/docs/ref/#state.StateEffect^define).\n*/\nclass StateEffectType {\n    /**\n    @internal\n    */\n    constructor(\n    // The `any` types in these function types are there to work\n    // around TypeScript issue #37631, where the type guard on\n    // `StateEffect.is` mysteriously stops working when these properly\n    // have type `Value`.\n    /**\n    @internal\n    */\n    map) {\n        this.map = map;\n    }\n    /**\n    Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this\n    type.\n    */\n    of(value) { return new StateEffect(this, value); }\n}\n/**\nState effects can be used to represent additional effects\nassociated with a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction.effects). They\nare often useful to model changes to custom [state\nfields](https://codemirror.net/6/docs/ref/#state.StateField), when those changes aren't implicit in\ndocument or selection changes.\n*/\nclass StateEffect {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    type, \n    /**\n    The value of this effect.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Map this effect through a position mapping. Will return\n    `undefined` when that ends up deleting the effect.\n    */\n    map(mapping) {\n        let mapped = this.type.map(this.value, mapping);\n        return mapped === undefined ? undefined : mapped == this.value ? this : new StateEffect(this.type, mapped);\n    }\n    /**\n    Tells you whether this effect object is of a given\n    [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).\n    */\n    is(type) { return this.type == type; }\n    /**\n    Define a new effect type. The type parameter indicates the type\n    of values that his effect holds.\n    */\n    static define(spec = {}) {\n        return new StateEffectType(spec.map || (v => v));\n    }\n    /**\n    Map an array of effects through a change set.\n    */\n    static mapEffects(effects, mapping) {\n        if (!effects.length)\n            return effects;\n        let result = [];\n        for (let effect of effects) {\n            let mapped = effect.map(mapping);\n            if (mapped)\n                result.push(mapped);\n        }\n        return result;\n    }\n}\n/**\nThis effect can be used to reconfigure the root extensions of\nthe editor. Doing this will discard any extensions\n[appended](https://codemirror.net/6/docs/ref/#state.StateEffect^appendConfig), but does not reset\nthe content of [reconfigured](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure)\ncompartments.\n*/\nStateEffect.reconfigure = /*@__PURE__*/StateEffect.define();\n/**\nAppend extensions to the top-level configuration of the editor.\n*/\nStateEffect.appendConfig = /*@__PURE__*/StateEffect.define();\n/**\nChanges to the editor state are grouped into transactions.\nTypically, a user action creates a single transaction, which may\ncontain any number of document changes, may change the selection,\nor have other effects. Create a transaction by calling\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update), or immediately\ndispatch one by calling\n[`EditorView.dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch).\n*/\nclass Transaction {\n    constructor(\n    /**\n    The state from which the transaction starts.\n    */\n    startState, \n    /**\n    The document changes made by this transaction.\n    */\n    changes, \n    /**\n    The selection set by this transaction, or undefined if it\n    doesn't explicitly set a selection.\n    */\n    selection, \n    /**\n    The effects added to the transaction.\n    */\n    effects, \n    /**\n    @internal\n    */\n    annotations, \n    /**\n    Whether the selection should be scrolled into view after this\n    transaction is dispatched.\n    */\n    scrollIntoView) {\n        this.startState = startState;\n        this.changes = changes;\n        this.selection = selection;\n        this.effects = effects;\n        this.annotations = annotations;\n        this.scrollIntoView = scrollIntoView;\n        /**\n        @internal\n        */\n        this._doc = null;\n        /**\n        @internal\n        */\n        this._state = null;\n        if (selection)\n            checkSelection(selection, changes.newLength);\n        if (!annotations.some((a) => a.type == Transaction.time))\n            this.annotations = annotations.concat(Transaction.time.of(Date.now()));\n    }\n    /**\n    @internal\n    */\n    static create(startState, changes, selection, effects, annotations, scrollIntoView) {\n        return new Transaction(startState, changes, selection, effects, annotations, scrollIntoView);\n    }\n    /**\n    The new document produced by the transaction. Contrary to\n    [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't\n    force the entire new state to be computed right away, so it is\n    recommended that [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter\n    when they need to look at the new document.\n    */\n    get newDoc() {\n        return this._doc || (this._doc = this.changes.apply(this.startState.doc));\n    }\n    /**\n    The new selection produced by the transaction. If\n    [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,\n    this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's\n    current selection through the changes made by the transaction.\n    */\n    get newSelection() {\n        return this.selection || this.startState.selection.map(this.changes);\n    }\n    /**\n    The new state created by the transaction. Computed on demand\n    (but retained for subsequent access), so it is recommended not to\n    access it in [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.\n    */\n    get state() {\n        if (!this._state)\n            this.startState.applyTransaction(this);\n        return this._state;\n    }\n    /**\n    Get the value of the given annotation type, if any.\n    */\n    annotation(type) {\n        for (let ann of this.annotations)\n            if (ann.type == type)\n                return ann.value;\n        return undefined;\n    }\n    /**\n    Indicates whether the transaction changed the document.\n    */\n    get docChanged() { return !this.changes.empty; }\n    /**\n    Indicates whether this transaction reconfigures the state\n    (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or\n    with a top-level configuration\n    [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).\n    */\n    get reconfigured() { return this.startState.config != this.state.config; }\n    /**\n    Returns true if the transaction has a [user\n    event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to\n    or more specific than `event`. For example, if the transaction\n    has `\"select.pointer\"` as user event, `\"select\"` and\n    `\"select.pointer\"` will match it.\n    */\n    isUserEvent(event) {\n        let e = this.annotation(Transaction.userEvent);\n        return !!(e && (e == event || e.length > event.length && e.slice(0, event.length) == event && e[event.length] == \".\"));\n    }\n}\n/**\nAnnotation used to store transaction timestamps. Automatically\nadded to every transaction, holding `Date.now()`.\n*/\nTransaction.time = /*@__PURE__*/Annotation.define();\n/**\nAnnotation used to associate a transaction with a user interface\nevent. Holds a string identifying the event, using a\ndot-separated format to support attaching more specific\ninformation. The events used by the core libraries are:\n\n - `\"input\"` when content is entered\n   - `\"input.type\"` for typed input\n     - `\"input.type.compose\"` for composition\n   - `\"input.paste\"` for pasted input\n   - `\"input.drop\"` when adding content with drag-and-drop\n   - `\"input.complete\"` when autocompleting\n - `\"delete\"` when the user deletes content\n   - `\"delete.selection\"` when deleting the selection\n   - `\"delete.forward\"` when deleting forward from the selection\n   - `\"delete.backward\"` when deleting backward from the selection\n   - `\"delete.cut\"` when cutting to the clipboard\n - `\"move\"` when content is moved\n   - `\"move.drop\"` when content is moved within the editor through drag-and-drop\n - `\"select\"` when explicitly changing the selection\n   - `\"select.pointer\"` when selecting with a mouse or other pointing device\n - `\"undo\"` and `\"redo\"` for history actions\n\nUse [`isUserEvent`](https://codemirror.net/6/docs/ref/#state.Transaction.isUserEvent) to check\nwhether the annotation matches a given event.\n*/\nTransaction.userEvent = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating whether a transaction should be added to\nthe undo history or not.\n*/\nTransaction.addToHistory = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating (when present and true) that a transaction\nrepresents a change made by some other actor, not the user. This\nis used, for example, to tag other people's changes in\ncollaborative editing.\n*/\nTransaction.remote = /*@__PURE__*/Annotation.define();\nfunction joinRanges(a, b) {\n    let result = [];\n    for (let iA = 0, iB = 0;;) {\n        let from, to;\n        if (iA < a.length && (iB == b.length || b[iB] >= a[iA])) {\n            from = a[iA++];\n            to = a[iA++];\n        }\n        else if (iB < b.length) {\n            from = b[iB++];\n            to = b[iB++];\n        }\n        else\n            return result;\n        if (!result.length || result[result.length - 1] < from)\n            result.push(from, to);\n        else if (result[result.length - 1] < to)\n            result[result.length - 1] = to;\n    }\n}\nfunction mergeTransaction(a, b, sequential) {\n    var _a;\n    let mapForA, mapForB, changes;\n    if (sequential) {\n        mapForA = b.changes;\n        mapForB = ChangeSet.empty(b.changes.length);\n        changes = a.changes.compose(b.changes);\n    }\n    else {\n        mapForA = b.changes.map(a.changes);\n        mapForB = a.changes.mapDesc(b.changes, true);\n        changes = a.changes.compose(mapForA);\n    }\n    return {\n        changes,\n        selection: b.selection ? b.selection.map(mapForB) : (_a = a.selection) === null || _a === void 0 ? void 0 : _a.map(mapForA),\n        effects: StateEffect.mapEffects(a.effects, mapForA).concat(StateEffect.mapEffects(b.effects, mapForB)),\n        annotations: a.annotations.length ? a.annotations.concat(b.annotations) : b.annotations,\n        scrollIntoView: a.scrollIntoView || b.scrollIntoView\n    };\n}\nfunction resolveTransactionInner(state, spec, docSize) {\n    let sel = spec.selection, annotations = asArray(spec.annotations);\n    if (spec.userEvent)\n        annotations = annotations.concat(Transaction.userEvent.of(spec.userEvent));\n    return {\n        changes: spec.changes instanceof ChangeSet ? spec.changes\n            : ChangeSet.of(spec.changes || [], docSize, state.facet(lineSeparator)),\n        selection: sel && (sel instanceof EditorSelection ? sel : EditorSelection.single(sel.anchor, sel.head)),\n        effects: asArray(spec.effects),\n        annotations,\n        scrollIntoView: !!spec.scrollIntoView\n    };\n}\nfunction resolveTransaction(state, specs, filter) {\n    let s = resolveTransactionInner(state, specs.length ? specs[0] : {}, state.doc.length);\n    if (specs.length && specs[0].filter === false)\n        filter = false;\n    for (let i = 1; i < specs.length; i++) {\n        if (specs[i].filter === false)\n            filter = false;\n        let seq = !!specs[i].sequential;\n        s = mergeTransaction(s, resolveTransactionInner(state, specs[i], seq ? s.changes.newLength : state.doc.length), seq);\n    }\n    let tr = Transaction.create(state, s.changes, s.selection, s.effects, s.annotations, s.scrollIntoView);\n    return extendTransaction(filter ? filterTransaction(tr) : tr);\n}\n// Finish a transaction by applying filters if necessary.\nfunction filterTransaction(tr) {\n    let state = tr.startState;\n    // Change filters\n    let result = true;\n    for (let filter of state.facet(changeFilter)) {\n        let value = filter(tr);\n        if (value === false) {\n            result = false;\n            break;\n        }\n        if (Array.isArray(value))\n            result = result === true ? value : joinRanges(result, value);\n    }\n    if (result !== true) {\n        let changes, back;\n        if (result === false) {\n            back = tr.changes.invertedDesc;\n            changes = ChangeSet.empty(state.doc.length);\n        }\n        else {\n            let filtered = tr.changes.filter(result);\n            changes = filtered.changes;\n            back = filtered.filtered.mapDesc(filtered.changes).invertedDesc;\n        }\n        tr = Transaction.create(state, changes, tr.selection && tr.selection.map(back), StateEffect.mapEffects(tr.effects, back), tr.annotations, tr.scrollIntoView);\n    }\n    // Transaction filters\n    let filters = state.facet(transactionFilter);\n    for (let i = filters.length - 1; i >= 0; i--) {\n        let filtered = filters[i](tr);\n        if (filtered instanceof Transaction)\n            tr = filtered;\n        else if (Array.isArray(filtered) && filtered.length == 1 && filtered[0] instanceof Transaction)\n            tr = filtered[0];\n        else\n            tr = resolveTransaction(state, asArray(filtered), false);\n    }\n    return tr;\n}\nfunction extendTransaction(tr) {\n    let state = tr.startState, extenders = state.facet(transactionExtender), spec = tr;\n    for (let i = extenders.length - 1; i >= 0; i--) {\n        let extension = extenders[i](tr);\n        if (extension && Object.keys(extension).length)\n            spec = mergeTransaction(spec, resolveTransactionInner(state, extension, tr.changes.newLength), true);\n    }\n    return spec == tr ? tr : Transaction.create(state, tr.changes, tr.selection, spec.effects, spec.annotations, spec.scrollIntoView);\n}\nconst none = [];\nfunction asArray(value) {\n    return value == null ? none : Array.isArray(value) ? value : [value];\n}\n\n/**\nThe categories produced by a [character\ncategorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer). These are used\ndo things like selecting by word.\n*/\nvar CharCategory = /*@__PURE__*/(function (CharCategory) {\n    /**\n    Word characters.\n    */\n    CharCategory[CharCategory[\"Word\"] = 0] = \"Word\";\n    /**\n    Whitespace.\n    */\n    CharCategory[CharCategory[\"Space\"] = 1] = \"Space\";\n    /**\n    Anything else.\n    */\n    CharCategory[CharCategory[\"Other\"] = 2] = \"Other\";\nreturn CharCategory})(CharCategory || (CharCategory = {}));\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\nlet wordChar;\ntry {\n    wordChar = /*@__PURE__*/new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_]\", \"u\");\n}\ncatch (_) { }\nfunction hasWordChar(str) {\n    if (wordChar)\n        return wordChar.test(str);\n    for (let i = 0; i < str.length; i++) {\n        let ch = str[i];\n        if (/\\w/.test(ch) || ch > \"\\x80\" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch)))\n            return true;\n    }\n    return false;\n}\nfunction makeCategorizer(wordChars) {\n    return (char) => {\n        if (!/\\S/.test(char))\n            return CharCategory.Space;\n        if (hasWordChar(char))\n            return CharCategory.Word;\n        for (let i = 0; i < wordChars.length; i++)\n            if (char.indexOf(wordChars[i]) > -1)\n                return CharCategory.Word;\n        return CharCategory.Other;\n    };\n}\n\n/**\nThe editor state class is a persistent (immutable) data structure.\nTo update a state, you [create](https://codemirror.net/6/docs/ref/#state.EditorState.update) a\n[transaction](https://codemirror.net/6/docs/ref/#state.Transaction), which produces a _new_ state\ninstance, without modifying the original object.\n\nAs such, _never_ mutate properties of a state directly. That'll\njust break things.\n*/\nclass EditorState {\n    constructor(\n    /**\n    @internal\n    */\n    config, \n    /**\n    The current document.\n    */\n    doc, \n    /**\n    The current selection.\n    */\n    selection, \n    /**\n    @internal\n    */\n    values, computeSlot, tr) {\n        this.config = config;\n        this.doc = doc;\n        this.selection = selection;\n        this.values = values;\n        this.status = config.statusTemplate.slice();\n        this.computeSlot = computeSlot;\n        // Fill in the computed state immediately, so that further queries\n        // for it made during the update return this state\n        if (tr)\n            tr._state = this;\n        for (let i = 0; i < this.config.dynamicSlots.length; i++)\n            ensureAddr(this, i << 1);\n        this.computeSlot = null;\n    }\n    field(field, require = true) {\n        let addr = this.config.address[field.id];\n        if (addr == null) {\n            if (require)\n                throw new RangeError(\"Field is not present in this state\");\n            return undefined;\n        }\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this\n    state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)\n    can be passed. Unless\n    [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the\n    [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec\n    are assumed to start in the _current_ document (not the document\n    produced by previous specs), and its\n    [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and\n    [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer\n    to the document created by its _own_ changes. The resulting\n    transaction contains the combined effect of all the different\n    specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later\n    specs take precedence over earlier ones.\n    */\n    update(...specs) {\n        return resolveTransaction(this, specs, true);\n    }\n    /**\n    @internal\n    */\n    applyTransaction(tr) {\n        let conf = this.config, { base, compartments } = conf;\n        for (let effect of tr.effects) {\n            if (effect.is(Compartment.reconfigure)) {\n                if (conf) {\n                    compartments = new Map;\n                    conf.compartments.forEach((val, key) => compartments.set(key, val));\n                    conf = null;\n                }\n                compartments.set(effect.value.compartment, effect.value.extension);\n            }\n            else if (effect.is(StateEffect.reconfigure)) {\n                conf = null;\n                base = effect.value;\n            }\n            else if (effect.is(StateEffect.appendConfig)) {\n                conf = null;\n                base = asArray(base).concat(effect.value);\n            }\n        }\n        let startValues;\n        if (!conf) {\n            conf = Configuration.resolve(base, compartments, this);\n            let intermediateState = new EditorState(conf, this.doc, this.selection, conf.dynamicSlots.map(() => null), (state, slot) => slot.reconfigure(state, this), null);\n            startValues = intermediateState.values;\n        }\n        else {\n            startValues = tr.startState.values.slice();\n        }\n        new EditorState(conf, tr.newDoc, tr.newSelection, startValues, (state, slot) => slot.update(state, tr), tr);\n    }\n    /**\n    Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that\n    replaces every selection range with the given content.\n    */\n    replaceSelection(text) {\n        if (typeof text == \"string\")\n            text = this.toText(text);\n        return this.changeByRange(range => ({ changes: { from: range.from, to: range.to, insert: text },\n            range: EditorSelection.cursor(range.from + text.length) }));\n    }\n    /**\n    Create a set of changes and a new selection by running the given\n    function for each range in the active selection. The function\n    can return an optional set of changes (in the coordinate space\n    of the start document), plus an updated range (in the coordinate\n    space of the document produced by the call's own changes). This\n    method will merge all the changes and ranges into a single\n    changeset and selection, and return it as a [transaction\n    spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to\n    [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).\n    */\n    changeByRange(f) {\n        let sel = this.selection;\n        let result1 = f(sel.ranges[0]);\n        let changes = this.changes(result1.changes), ranges = [result1.range];\n        let effects = asArray(result1.effects);\n        for (let i = 1; i < sel.ranges.length; i++) {\n            let result = f(sel.ranges[i]);\n            let newChanges = this.changes(result.changes), newMapped = newChanges.map(changes);\n            for (let j = 0; j < i; j++)\n                ranges[j] = ranges[j].map(newMapped);\n            let mapBy = changes.mapDesc(newChanges, true);\n            ranges.push(result.range.map(mapBy));\n            changes = changes.compose(newMapped);\n            effects = StateEffect.mapEffects(effects, newMapped).concat(StateEffect.mapEffects(asArray(result.effects), mapBy));\n        }\n        return {\n            changes,\n            selection: EditorSelection.create(ranges, sel.mainIndex),\n            effects\n        };\n    }\n    /**\n    Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change\n    description, taking the state's document length and line\n    separator into account.\n    */\n    changes(spec = []) {\n        if (spec instanceof ChangeSet)\n            return spec;\n        return ChangeSet.of(spec, this.doc.length, this.facet(EditorState.lineSeparator));\n    }\n    /**\n    Using the state's [line\n    separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a\n    [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.\n    */\n    toText(string) {\n        return Text.of(string.split(this.facet(EditorState.lineSeparator) || DefaultSplit));\n    }\n    /**\n    Return the given range of the document as a string.\n    */\n    sliceDoc(from = 0, to = this.doc.length) {\n        return this.doc.sliceString(from, to, this.lineBreak);\n    }\n    /**\n    Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).\n    */\n    facet(facet) {\n        let addr = this.config.address[facet.id];\n        if (addr == null)\n            return facet.default;\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Convert this state to a JSON-serializable object. When custom\n    fields should be serialized, you can pass them in as an object\n    mapping property names (in the resulting object, which should\n    not use `doc` or `selection`) to fields.\n    */\n    toJSON(fields) {\n        let result = {\n            doc: this.sliceDoc(),\n            selection: this.selection.toJSON()\n        };\n        if (fields)\n            for (let prop in fields) {\n                let value = fields[prop];\n                if (value instanceof StateField && this.config.address[value.id] != null)\n                    result[prop] = value.spec.toJSON(this.field(fields[prop]), this);\n            }\n        return result;\n    }\n    /**\n    Deserialize a state from its JSON representation. When custom\n    fields should be deserialized, pass the same object you passed\n    to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as\n    third argument.\n    */\n    static fromJSON(json, config = {}, fields) {\n        if (!json || typeof json.doc != \"string\")\n            throw new RangeError(\"Invalid JSON representation for EditorState\");\n        let fieldInit = [];\n        if (fields)\n            for (let prop in fields) {\n                if (Object.prototype.hasOwnProperty.call(json, prop)) {\n                    let field = fields[prop], value = json[prop];\n                    fieldInit.push(field.init(state => field.spec.fromJSON(value, state)));\n                }\n            }\n        return EditorState.create({\n            doc: json.doc,\n            selection: EditorSelection.fromJSON(json.selection),\n            extensions: config.extensions ? fieldInit.concat([config.extensions]) : fieldInit\n        });\n    }\n    /**\n    Create a new state. You'll usually only need this when\n    initializing an editor—updated states are created by applying\n    transactions.\n    */\n    static create(config = {}) {\n        let configuration = Configuration.resolve(config.extensions || [], new Map);\n        let doc = config.doc instanceof Text ? config.doc\n            : Text.of((config.doc || \"\").split(configuration.staticFacet(EditorState.lineSeparator) || DefaultSplit));\n        let selection = !config.selection ? EditorSelection.single(0)\n            : config.selection instanceof EditorSelection ? config.selection\n                : EditorSelection.single(config.selection.anchor, config.selection.head);\n        checkSelection(selection, doc.length);\n        if (!configuration.staticFacet(allowMultipleSelections))\n            selection = selection.asSingle();\n        return new EditorState(configuration, doc, selection, configuration.dynamicSlots.map(() => null), (state, slot) => slot.create(state), null);\n    }\n    /**\n    The size (in columns) of a tab in the document, determined by\n    the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.\n    */\n    get tabSize() { return this.facet(EditorState.tabSize); }\n    /**\n    Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)\n    string for this state.\n    */\n    get lineBreak() { return this.facet(EditorState.lineSeparator) || \"\\n\"; }\n    /**\n    Returns true when the editor is\n    [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.\n    */\n    get readOnly() { return this.facet(readOnly); }\n    /**\n    Look up a translation for the given phrase (via the\n    [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the\n    original string if no translation is found.\n    \n    If additional arguments are passed, they will be inserted in\n    place of markers like `$1` (for the first value) and `$2`, etc.\n    A single `$` is equivalent to `$1`, and `$$` will produce a\n    literal dollar sign.\n    */\n    phrase(phrase, ...insert) {\n        for (let map of this.facet(EditorState.phrases))\n            if (Object.prototype.hasOwnProperty.call(map, phrase)) {\n                phrase = map[phrase];\n                break;\n            }\n        if (insert.length)\n            phrase = phrase.replace(/\\$(\\$|\\d*)/g, (m, i) => {\n                if (i == \"$\")\n                    return \"$\";\n                let n = +(i || 1);\n                return !n || n > insert.length ? m : insert[n - 1];\n            });\n        return phrase;\n    }\n    /**\n    Find the values for a given language data field, provided by the\n    the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.\n    \n    Examples of language data fields are...\n    \n    - [`\"commentTokens\"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying\n      comment syntax.\n    - [`\"autocomplete\"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)\n      for providing language-specific completion sources.\n    - [`\"wordChars\"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding\n      characters that should be considered part of words in this\n      language.\n    - [`\"closeBrackets\"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls\n      bracket closing behavior.\n    */\n    languageDataAt(name, pos, side = -1) {\n        let values = [];\n        for (let provider of this.facet(languageData)) {\n            for (let result of provider(this, pos, side)) {\n                if (Object.prototype.hasOwnProperty.call(result, name))\n                    values.push(result[name]);\n            }\n        }\n        return values;\n    }\n    /**\n    Return a function that can categorize strings (expected to\n    represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))\n    into one of:\n    \n     - Word (contains an alphanumeric character or a character\n       explicitly listed in the local language's `\"wordChars\"`\n       language data, which should be a string)\n     - Space (contains only whitespace)\n     - Other (anything else)\n    */\n    charCategorizer(at) {\n        return makeCategorizer(this.languageDataAt(\"wordChars\", at).join(\"\"));\n    }\n    /**\n    Find the word at the given position, meaning the range\n    containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters\n    around it. If no word characters are adjacent to the position,\n    this returns null.\n    */\n    wordAt(pos) {\n        let { text, from, length } = this.doc.lineAt(pos);\n        let cat = this.charCategorizer(pos);\n        let start = pos - from, end = pos - from;\n        while (start > 0) {\n            let prev = findClusterBreak(text, start, false);\n            if (cat(text.slice(prev, start)) != CharCategory.Word)\n                break;\n            start = prev;\n        }\n        while (end < length) {\n            let next = findClusterBreak(text, end);\n            if (cat(text.slice(end, next)) != CharCategory.Word)\n                break;\n            end = next;\n        }\n        return start == end ? null : EditorSelection.range(start + from, end + from);\n    }\n}\n/**\nA facet that, when enabled, causes the editor to allow multiple\nranges to be selected. Be careful though, because by default the\neditor relies on the native DOM selection, which cannot handle\nmultiple selections. An extension like\n[`drawSelection`](https://codemirror.net/6/docs/ref/#view.drawSelection) can be used to make\nsecondary selections visible to the user.\n*/\nEditorState.allowMultipleSelections = allowMultipleSelections;\n/**\nConfigures the tab size to use in this state. The first\n(highest-precedence) value of the facet is used. If no value is\ngiven, this defaults to 4.\n*/\nEditorState.tabSize = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : 4\n});\n/**\nThe line separator to use. By default, any of `\"\\n\"`, `\"\\r\\n\"`\nand `\"\\r\"` is treated as a separator when splitting lines, and\nlines are joined with `\"\\n\"`.\n\nWhen you configure a value here, only that precise separator\nwill be used, allowing you to round-trip documents through the\neditor without normalizing line separators.\n*/\nEditorState.lineSeparator = lineSeparator;\n/**\nThis facet controls the value of the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) getter, which is\nconsulted by commands and extensions that implement editing\nfunctionality to determine whether they should apply. It\ndefaults to false, but when its highest-precedence value is\n`true`, such functionality disables itself.\n\nNot to be confused with\n[`EditorView.editable`](https://codemirror.net/6/docs/ref/#view.EditorView^editable), which\ncontrols whether the editor's DOM is set to be editable (and\nthus focusable).\n*/\nEditorState.readOnly = readOnly;\n/**\nRegisters translation phrases. The\n[`phrase`](https://codemirror.net/6/docs/ref/#state.EditorState.phrase) method will look through\nall objects registered with this facet to find translations for\nits argument.\n*/\nEditorState.phrases = /*@__PURE__*/Facet.define({\n    compare(a, b) {\n        let kA = Object.keys(a), kB = Object.keys(b);\n        return kA.length == kB.length && kA.every(k => a[k] == b[k]);\n    }\n});\n/**\nA facet used to register [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) providers.\n*/\nEditorState.languageData = languageData;\n/**\nFacet used to register change filters, which are called for each\ntransaction (unless explicitly\n[disabled](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter)), and can suppress\npart of the transaction's changes.\n\nSuch a function can return `true` to indicate that it doesn't\nwant to do anything, `false` to completely stop the changes in\nthe transaction, or a set of ranges in which changes should be\nsuppressed. Such ranges are represented as an array of numbers,\nwith each pair of two numbers indicating the start and end of a\nrange. So for example `[10, 20, 100, 110]` suppresses changes\nbetween 10 and 20, and between 100 and 110.\n*/\nEditorState.changeFilter = changeFilter;\n/**\nFacet used to register a hook that gets a chance to update or\nreplace transaction specs before they are applied. This will\nonly be applied for transactions that don't have\n[`filter`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter) set to `false`. You\ncan either return a single transaction spec (possibly the input\ntransaction), or an array of specs (which will be combined in\nthe same way as the arguments to\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update)).\n\nWhen possible, it is recommended to avoid accessing\n[`Transaction.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state) in a filter,\nsince it will force creation of a state that will then be\ndiscarded again, if the transaction is actually filtered.\n\n(This functionality should be used with care. Indiscriminately\nmodifying transaction is likely to break something or degrade\nthe user experience.)\n*/\nEditorState.transactionFilter = transactionFilter;\n/**\nThis is a more limited form of\n[`transactionFilter`](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter),\nwhich can only add\n[annotations](https://codemirror.net/6/docs/ref/#state.TransactionSpec.annotations) and\n[effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects). _But_, this type\nof filter runs even if the transaction has disabled regular\n[filtering](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter), making it suitable\nfor effects that don't need to touch the changes or selection,\nbut do want to process every transaction.\n\nExtenders run _after_ filters, when both are present.\n*/\nEditorState.transactionExtender = transactionExtender;\nCompartment.reconfigure = /*@__PURE__*/StateEffect.define();\n\n/**\nUtility function for combining behaviors to fill in a config\nobject from an array of provided configs. `defaults` should hold\ndefault values for all optional fields in `Config`.\n\nThe function will, by default, error\nwhen a field gets two values that aren't `===`-equal, but you can\nprovide combine functions per field to do something else.\n*/\nfunction combineConfig(configs, defaults, // Should hold only the optional properties of Config, but I haven't managed to express that\ncombine = {}) {\n    let result = {};\n    for (let config of configs)\n        for (let key of Object.keys(config)) {\n            let value = config[key], current = result[key];\n            if (current === undefined)\n                result[key] = value;\n            else if (current === value || value === undefined) ; // No conflict\n            else if (Object.hasOwnProperty.call(combine, key))\n                result[key] = combine[key](current, value);\n            else\n                throw new Error(\"Config merge conflict for field \" + key);\n        }\n    for (let key in defaults)\n        if (result[key] === undefined)\n            result[key] = defaults[key];\n    return result;\n}\n\n/**\nEach range is associated with a value, which must inherit from\nthis class.\n*/\nclass RangeValue {\n    /**\n    Compare this value with another value. Used when comparing\n    rangesets. The default implementation compares by identity.\n    Unless you are only creating a fixed number of unique instances\n    of your value type, it is a good idea to implement this\n    properly.\n    */\n    eq(other) { return this == other; }\n    /**\n    Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.\n    */\n    range(from, to = from) { return Range.create(from, to, this); }\n}\nRangeValue.prototype.startSide = RangeValue.prototype.endSide = 0;\nRangeValue.prototype.point = false;\nRangeValue.prototype.mapMode = MapMode.TrackDel;\n/**\nA range associates a value with a range of positions.\n*/\nclass Range {\n    constructor(\n    /**\n    The range's start position.\n    */\n    from, \n    /**\n    Its end position.\n    */\n    to, \n    /**\n    The value associated with this range.\n    */\n    value) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n    }\n    /**\n    @internal\n    */\n    static create(from, to, value) {\n        return new Range(from, to, value);\n    }\n}\nfunction cmpRange(a, b) {\n    return a.from - b.from || a.value.startSide - b.value.startSide;\n}\nclass Chunk {\n    constructor(from, to, value, \n    // Chunks are marked with the largest point that occurs\n    // in them (or -1 for no points), so that scans that are\n    // only interested in points (such as the\n    // heightmap-related logic) can skip range-only chunks.\n    maxPoint) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n        this.maxPoint = maxPoint;\n    }\n    get length() { return this.to[this.to.length - 1]; }\n    // Find the index of the given position and side. Use the ranges'\n    // `from` pos when `end == false`, `to` when `end == true`.\n    findIndex(pos, side, end, startAt = 0) {\n        let arr = end ? this.to : this.from;\n        for (let lo = startAt, hi = arr.length;;) {\n            if (lo == hi)\n                return lo;\n            let mid = (lo + hi) >> 1;\n            let diff = arr[mid] - pos || (end ? this.value[mid].endSide : this.value[mid].startSide) - side;\n            if (mid == lo)\n                return diff >= 0 ? lo : hi;\n            if (diff >= 0)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n    }\n    between(offset, from, to, f) {\n        for (let i = this.findIndex(from, -1000000000 /* C.Far */, true), e = this.findIndex(to, 1000000000 /* C.Far */, false, i); i < e; i++)\n            if (f(this.from[i] + offset, this.to[i] + offset, this.value[i]) === false)\n                return false;\n    }\n    map(offset, changes) {\n        let value = [], from = [], to = [], newPos = -1, maxPoint = -1;\n        for (let i = 0; i < this.value.length; i++) {\n            let val = this.value[i], curFrom = this.from[i] + offset, curTo = this.to[i] + offset, newFrom, newTo;\n            if (curFrom == curTo) {\n                let mapped = changes.mapPos(curFrom, val.startSide, val.mapMode);\n                if (mapped == null)\n                    continue;\n                newFrom = newTo = mapped;\n                if (val.startSide != val.endSide) {\n                    newTo = changes.mapPos(curFrom, val.endSide);\n                    if (newTo < newFrom)\n                        continue;\n                }\n            }\n            else {\n                newFrom = changes.mapPos(curFrom, val.startSide);\n                newTo = changes.mapPos(curTo, val.endSide);\n                if (newFrom > newTo || newFrom == newTo && val.startSide > 0 && val.endSide <= 0)\n                    continue;\n            }\n            if ((newTo - newFrom || val.endSide - val.startSide) < 0)\n                continue;\n            if (newPos < 0)\n                newPos = newFrom;\n            if (val.point)\n                maxPoint = Math.max(maxPoint, newTo - newFrom);\n            value.push(val);\n            from.push(newFrom - newPos);\n            to.push(newTo - newPos);\n        }\n        return { mapped: value.length ? new Chunk(from, to, value, maxPoint) : null, pos: newPos };\n    }\n}\n/**\nA range set stores a collection of [ranges](https://codemirror.net/6/docs/ref/#state.Range) in a\nway that makes them efficient to [map](https://codemirror.net/6/docs/ref/#state.RangeSet.map) and\n[update](https://codemirror.net/6/docs/ref/#state.RangeSet.update). This is an immutable data\nstructure.\n*/\nclass RangeSet {\n    constructor(\n    /**\n    @internal\n    */\n    chunkPos, \n    /**\n    @internal\n    */\n    chunk, \n    /**\n    @internal\n    */\n    nextLayer, \n    /**\n    @internal\n    */\n    maxPoint) {\n        this.chunkPos = chunkPos;\n        this.chunk = chunk;\n        this.nextLayer = nextLayer;\n        this.maxPoint = maxPoint;\n    }\n    /**\n    @internal\n    */\n    static create(chunkPos, chunk, nextLayer, maxPoint) {\n        return new RangeSet(chunkPos, chunk, nextLayer, maxPoint);\n    }\n    /**\n    @internal\n    */\n    get length() {\n        let last = this.chunk.length - 1;\n        return last < 0 ? 0 : Math.max(this.chunkEnd(last), this.nextLayer.length);\n    }\n    /**\n    The number of ranges in the set.\n    */\n    get size() {\n        if (this.isEmpty)\n            return 0;\n        let size = this.nextLayer.size;\n        for (let chunk of this.chunk)\n            size += chunk.value.length;\n        return size;\n    }\n    /**\n    @internal\n    */\n    chunkEnd(index) {\n        return this.chunkPos[index] + this.chunk[index].length;\n    }\n    /**\n    Update the range set, optionally adding new ranges or filtering\n    out existing ones.\n    \n    (Note: The type parameter is just there as a kludge to work\n    around TypeScript variance issues that prevented `RangeSet<X>`\n    from being a subtype of `RangeSet<Y>` when `X` is a subtype of\n    `Y`.)\n    */\n    update(updateSpec) {\n        let { add = [], sort = false, filterFrom = 0, filterTo = this.length } = updateSpec;\n        let filter = updateSpec.filter;\n        if (add.length == 0 && !filter)\n            return this;\n        if (sort)\n            add = add.slice().sort(cmpRange);\n        if (this.isEmpty)\n            return add.length ? RangeSet.of(add) : this;\n        let cur = new LayerCursor(this, null, -1).goto(0), i = 0, spill = [];\n        let builder = new RangeSetBuilder();\n        while (cur.value || i < add.length) {\n            if (i < add.length && (cur.from - add[i].from || cur.startSide - add[i].value.startSide) >= 0) {\n                let range = add[i++];\n                if (!builder.addInner(range.from, range.to, range.value))\n                    spill.push(range);\n            }\n            else if (cur.rangeIndex == 1 && cur.chunkIndex < this.chunk.length &&\n                (i == add.length || this.chunkEnd(cur.chunkIndex) < add[i].from) &&\n                (!filter || filterFrom > this.chunkEnd(cur.chunkIndex) || filterTo < this.chunkPos[cur.chunkIndex]) &&\n                builder.addChunk(this.chunkPos[cur.chunkIndex], this.chunk[cur.chunkIndex])) {\n                cur.nextChunk();\n            }\n            else {\n                if (!filter || filterFrom > cur.to || filterTo < cur.from || filter(cur.from, cur.to, cur.value)) {\n                    if (!builder.addInner(cur.from, cur.to, cur.value))\n                        spill.push(Range.create(cur.from, cur.to, cur.value));\n                }\n                cur.next();\n            }\n        }\n        return builder.finishInner(this.nextLayer.isEmpty && !spill.length ? RangeSet.empty\n            : this.nextLayer.update({ add: spill, filter, filterFrom, filterTo }));\n    }\n    /**\n    Map this range set through a set of changes, return the new set.\n    */\n    map(changes) {\n        if (changes.empty || this.isEmpty)\n            return this;\n        let chunks = [], chunkPos = [], maxPoint = -1;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            let touch = changes.touchesRange(start, start + chunk.length);\n            if (touch === false) {\n                maxPoint = Math.max(maxPoint, chunk.maxPoint);\n                chunks.push(chunk);\n                chunkPos.push(changes.mapPos(start));\n            }\n            else if (touch === true) {\n                let { mapped, pos } = chunk.map(start, changes);\n                if (mapped) {\n                    maxPoint = Math.max(maxPoint, mapped.maxPoint);\n                    chunks.push(mapped);\n                    chunkPos.push(pos);\n                }\n            }\n        }\n        let next = this.nextLayer.map(changes);\n        return chunks.length == 0 ? next : new RangeSet(chunkPos, chunks, next || RangeSet.empty, maxPoint);\n    }\n    /**\n    Iterate over the ranges that touch the region `from` to `to`,\n    calling `f` for each. There is no guarantee that the ranges will\n    be reported in any specific order. When the callback returns\n    `false`, iteration stops.\n    */\n    between(from, to, f) {\n        if (this.isEmpty)\n            return;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            if (to >= start && from <= start + chunk.length &&\n                chunk.between(start, from - start, to - start, f) === false)\n                return;\n        }\n        this.nextLayer.between(from, to, f);\n    }\n    /**\n    Iterate over the ranges in this set, in order, including all\n    ranges that end at or after `from`.\n    */\n    iter(from = 0) {\n        return HeapCursor.from([this]).goto(from);\n    }\n    /**\n    @internal\n    */\n    get isEmpty() { return this.nextLayer == this; }\n    /**\n    Iterate over the ranges in a collection of sets, in order,\n    starting from `from`.\n    */\n    static iter(sets, from = 0) {\n        return HeapCursor.from(sets).goto(from);\n    }\n    /**\n    Iterate over two groups of sets, calling methods on `comparator`\n    to notify it of possible differences.\n    */\n    static compare(oldSets, newSets, \n    /**\n    This indicates how the underlying data changed between these\n    ranges, and is needed to synchronize the iteration. `from` and\n    `to` are coordinates in the _new_ space, after these changes.\n    */\n    textDiff, comparator, \n    /**\n    Can be used to ignore all non-point ranges, and points below\n    the given size. When -1, all ranges are compared.\n    */\n    minPointSize = -1) {\n        let a = oldSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let b = newSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let sharedChunks = findSharedChunks(a, b, textDiff);\n        let sideA = new SpanCursor(a, sharedChunks, minPointSize);\n        let sideB = new SpanCursor(b, sharedChunks, minPointSize);\n        textDiff.iterGaps((fromA, fromB, length) => compare(sideA, fromA, sideB, fromB, length, comparator));\n        if (textDiff.empty && textDiff.length == 0)\n            compare(sideA, 0, sideB, 0, 0, comparator);\n    }\n    /**\n    Compare the contents of two groups of range sets, returning true\n    if they are equivalent in the given range.\n    */\n    static eq(oldSets, newSets, from = 0, to) {\n        if (to == null)\n            to = 1000000000 /* C.Far */ - 1;\n        let a = oldSets.filter(set => !set.isEmpty && newSets.indexOf(set) < 0);\n        let b = newSets.filter(set => !set.isEmpty && oldSets.indexOf(set) < 0);\n        if (a.length != b.length)\n            return false;\n        if (!a.length)\n            return true;\n        let sharedChunks = findSharedChunks(a, b);\n        let sideA = new SpanCursor(a, sharedChunks, 0).goto(from), sideB = new SpanCursor(b, sharedChunks, 0).goto(from);\n        for (;;) {\n            if (sideA.to != sideB.to ||\n                !sameValues(sideA.active, sideB.active) ||\n                sideA.point && (!sideB.point || !sideA.point.eq(sideB.point)))\n                return false;\n            if (sideA.to > to)\n                return true;\n            sideA.next();\n            sideB.next();\n        }\n    }\n    /**\n    Iterate over a group of range sets at the same time, notifying\n    the iterator about the ranges covering every given piece of\n    content. Returns the open count (see\n    [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end\n    of the iteration.\n    */\n    static spans(sets, from, to, iterator, \n    /**\n    When given and greater than -1, only points of at least this\n    size are taken into account.\n    */\n    minPointSize = -1) {\n        let cursor = new SpanCursor(sets, null, minPointSize).goto(from), pos = from;\n        let openRanges = cursor.openStart;\n        for (;;) {\n            let curTo = Math.min(cursor.to, to);\n            if (cursor.point) {\n                let active = cursor.activeForPoint(cursor.to);\n                let openCount = cursor.pointFrom < from ? active.length + 1 : Math.min(active.length, openRanges);\n                iterator.point(pos, curTo, cursor.point, active, openCount, cursor.pointRank);\n                openRanges = Math.min(cursor.openEnd(curTo), active.length);\n            }\n            else if (curTo > pos) {\n                iterator.span(pos, curTo, cursor.active, openRanges);\n                openRanges = cursor.openEnd(curTo);\n            }\n            if (cursor.to > to)\n                return openRanges + (cursor.point && cursor.to > to ? 1 : 0);\n            pos = cursor.to;\n            cursor.next();\n        }\n    }\n    /**\n    Create a range set for the given range or array of ranges. By\n    default, this expects the ranges to be _sorted_ (by start\n    position and, if two start at the same position,\n    `value.startSide`). You can pass `true` as second argument to\n    cause the method to sort them.\n    */\n    static of(ranges, sort = false) {\n        let build = new RangeSetBuilder();\n        for (let range of ranges instanceof Range ? [ranges] : sort ? lazySort(ranges) : ranges)\n            build.add(range.from, range.to, range.value);\n        return build.finish();\n    }\n}\n/**\nThe empty set of ranges.\n*/\nRangeSet.empty = /*@__PURE__*/new RangeSet([], [], null, -1);\nfunction lazySort(ranges) {\n    if (ranges.length > 1)\n        for (let prev = ranges[0], i = 1; i < ranges.length; i++) {\n            let cur = ranges[i];\n            if (cmpRange(prev, cur) > 0)\n                return ranges.slice().sort(cmpRange);\n            prev = cur;\n        }\n    return ranges;\n}\nRangeSet.empty.nextLayer = RangeSet.empty;\n/**\nA range set builder is a data structure that helps build up a\n[range set](https://codemirror.net/6/docs/ref/#state.RangeSet) directly, without first allocating\nan array of [`Range`](https://codemirror.net/6/docs/ref/#state.Range) objects.\n*/\nclass RangeSetBuilder {\n    /**\n    Create an empty builder.\n    */\n    constructor() {\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunkStart = -1;\n        this.last = null;\n        this.lastFrom = -1000000000 /* C.Far */;\n        this.lastTo = -1000000000 /* C.Far */;\n        this.from = [];\n        this.to = [];\n        this.value = [];\n        this.maxPoint = -1;\n        this.setMaxPoint = -1;\n        this.nextLayer = null;\n    }\n    finishChunk(newArrays) {\n        this.chunks.push(new Chunk(this.from, this.to, this.value, this.maxPoint));\n        this.chunkPos.push(this.chunkStart);\n        this.chunkStart = -1;\n        this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint);\n        this.maxPoint = -1;\n        if (newArrays) {\n            this.from = [];\n            this.to = [];\n            this.value = [];\n        }\n    }\n    /**\n    Add a range. Ranges should be added in sorted (by `from` and\n    `value.startSide`) order.\n    */\n    add(from, to, value) {\n        if (!this.addInner(from, to, value))\n            (this.nextLayer || (this.nextLayer = new RangeSetBuilder)).add(from, to, value);\n    }\n    /**\n    @internal\n    */\n    addInner(from, to, value) {\n        let diff = from - this.lastTo || value.startSide - this.last.endSide;\n        if (diff <= 0 && (from - this.lastFrom || value.startSide - this.last.startSide) < 0)\n            throw new Error(\"Ranges must be added sorted by `from` position and `startSide`\");\n        if (diff < 0)\n            return false;\n        if (this.from.length == 250 /* C.ChunkSize */)\n            this.finishChunk(true);\n        if (this.chunkStart < 0)\n            this.chunkStart = from;\n        this.from.push(from - this.chunkStart);\n        this.to.push(to - this.chunkStart);\n        this.last = value;\n        this.lastFrom = from;\n        this.lastTo = to;\n        this.value.push(value);\n        if (value.point)\n            this.maxPoint = Math.max(this.maxPoint, to - from);\n        return true;\n    }\n    /**\n    @internal\n    */\n    addChunk(from, chunk) {\n        if ((from - this.lastTo || chunk.value[0].startSide - this.last.endSide) < 0)\n            return false;\n        if (this.from.length)\n            this.finishChunk(true);\n        this.setMaxPoint = Math.max(this.setMaxPoint, chunk.maxPoint);\n        this.chunks.push(chunk);\n        this.chunkPos.push(from);\n        let last = chunk.value.length - 1;\n        this.last = chunk.value[last];\n        this.lastFrom = chunk.from[last] + from;\n        this.lastTo = chunk.to[last] + from;\n        return true;\n    }\n    /**\n    Finish the range set. Returns the new set. The builder can't be\n    used anymore after this has been called.\n    */\n    finish() { return this.finishInner(RangeSet.empty); }\n    /**\n    @internal\n    */\n    finishInner(next) {\n        if (this.from.length)\n            this.finishChunk(false);\n        if (this.chunks.length == 0)\n            return next;\n        let result = RangeSet.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(next) : next, this.setMaxPoint);\n        this.from = null; // Make sure further `add` calls produce errors\n        return result;\n    }\n}\nfunction findSharedChunks(a, b, textDiff) {\n    let inA = new Map();\n    for (let set of a)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (set.chunk[i].maxPoint <= 0)\n                inA.set(set.chunk[i], set.chunkPos[i]);\n    let shared = new Set();\n    for (let set of b)\n        for (let i = 0; i < set.chunk.length; i++) {\n            let known = inA.get(set.chunk[i]);\n            if (known != null && (textDiff ? textDiff.mapPos(known) : known) == set.chunkPos[i] &&\n                !(textDiff === null || textDiff === void 0 ? void 0 : textDiff.touchesRange(known, known + set.chunk[i].length)))\n                shared.add(set.chunk[i]);\n        }\n    return shared;\n}\nclass LayerCursor {\n    constructor(layer, skip, minPoint, rank = 0) {\n        this.layer = layer;\n        this.skip = skip;\n        this.minPoint = minPoint;\n        this.rank = rank;\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    get endSide() { return this.value ? this.value.endSide : 0; }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        this.chunkIndex = this.rangeIndex = 0;\n        this.gotoInner(pos, side, false);\n        return this;\n    }\n    gotoInner(pos, side, forward) {\n        while (this.chunkIndex < this.layer.chunk.length) {\n            let next = this.layer.chunk[this.chunkIndex];\n            if (!(this.skip && this.skip.has(next) ||\n                this.layer.chunkEnd(this.chunkIndex) < pos ||\n                next.maxPoint < this.minPoint))\n                break;\n            this.chunkIndex++;\n            forward = false;\n        }\n        if (this.chunkIndex < this.layer.chunk.length) {\n            let rangeIndex = this.layer.chunk[this.chunkIndex].findIndex(pos - this.layer.chunkPos[this.chunkIndex], side, true);\n            if (!forward || this.rangeIndex < rangeIndex)\n                this.setRangeIndex(rangeIndex);\n        }\n        this.next();\n    }\n    forward(pos, side) {\n        if ((this.to - pos || this.endSide - side) < 0)\n            this.gotoInner(pos, side, true);\n    }\n    next() {\n        for (;;) {\n            if (this.chunkIndex == this.layer.chunk.length) {\n                this.from = this.to = 1000000000 /* C.Far */;\n                this.value = null;\n                break;\n            }\n            else {\n                let chunkPos = this.layer.chunkPos[this.chunkIndex], chunk = this.layer.chunk[this.chunkIndex];\n                let from = chunkPos + chunk.from[this.rangeIndex];\n                this.from = from;\n                this.to = chunkPos + chunk.to[this.rangeIndex];\n                this.value = chunk.value[this.rangeIndex];\n                this.setRangeIndex(this.rangeIndex + 1);\n                if (this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)\n                    break;\n            }\n        }\n    }\n    setRangeIndex(index) {\n        if (index == this.layer.chunk[this.chunkIndex].value.length) {\n            this.chunkIndex++;\n            if (this.skip) {\n                while (this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]))\n                    this.chunkIndex++;\n            }\n            this.rangeIndex = 0;\n        }\n        else {\n            this.rangeIndex = index;\n        }\n    }\n    nextChunk() {\n        this.chunkIndex++;\n        this.rangeIndex = 0;\n        this.next();\n    }\n    compare(other) {\n        return this.from - other.from || this.startSide - other.startSide || this.rank - other.rank ||\n            this.to - other.to || this.endSide - other.endSide;\n    }\n}\nclass HeapCursor {\n    constructor(heap) {\n        this.heap = heap;\n    }\n    static from(sets, skip = null, minPoint = -1) {\n        let heap = [];\n        for (let i = 0; i < sets.length; i++) {\n            for (let cur = sets[i]; !cur.isEmpty; cur = cur.nextLayer) {\n                if (cur.maxPoint >= minPoint)\n                    heap.push(new LayerCursor(cur, skip, minPoint, i));\n            }\n        }\n        return heap.length == 1 ? heap[0] : new HeapCursor(heap);\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        for (let cur of this.heap)\n            cur.goto(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        for (let cur of this.heap)\n            cur.forward(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        if ((this.to - pos || this.value.endSide - side) < 0)\n            this.next();\n    }\n    next() {\n        if (this.heap.length == 0) {\n            this.from = this.to = 1000000000 /* C.Far */;\n            this.value = null;\n            this.rank = -1;\n        }\n        else {\n            let top = this.heap[0];\n            this.from = top.from;\n            this.to = top.to;\n            this.value = top.value;\n            this.rank = top.rank;\n            if (top.value)\n                top.next();\n            heapBubble(this.heap, 0);\n        }\n    }\n}\nfunction heapBubble(heap, index) {\n    for (let cur = heap[index];;) {\n        let childIndex = (index << 1) + 1;\n        if (childIndex >= heap.length)\n            break;\n        let child = heap[childIndex];\n        if (childIndex + 1 < heap.length && child.compare(heap[childIndex + 1]) >= 0) {\n            child = heap[childIndex + 1];\n            childIndex++;\n        }\n        if (cur.compare(child) < 0)\n            break;\n        heap[childIndex] = cur;\n        heap[index] = child;\n        index = childIndex;\n    }\n}\nclass SpanCursor {\n    constructor(sets, skip, minPoint) {\n        this.minPoint = minPoint;\n        this.active = [];\n        this.activeTo = [];\n        this.activeRank = [];\n        this.minActive = -1;\n        // A currently active point range, if any\n        this.point = null;\n        this.pointFrom = 0;\n        this.pointRank = 0;\n        this.to = -1000000000 /* C.Far */;\n        this.endSide = 0;\n        // The amount of open active ranges at the start of the iterator.\n        // Not including points.\n        this.openStart = -1;\n        this.cursor = HeapCursor.from(sets, skip, minPoint);\n    }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        this.cursor.goto(pos, side);\n        this.active.length = this.activeTo.length = this.activeRank.length = 0;\n        this.minActive = -1;\n        this.to = pos;\n        this.endSide = side;\n        this.openStart = -1;\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        while (this.minActive > -1 && (this.activeTo[this.minActive] - pos || this.active[this.minActive].endSide - side) < 0)\n            this.removeActive(this.minActive);\n        this.cursor.forward(pos, side);\n    }\n    removeActive(index) {\n        remove(this.active, index);\n        remove(this.activeTo, index);\n        remove(this.activeRank, index);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    addActive(trackOpen) {\n        let i = 0, { value, to, rank } = this.cursor;\n        while (i < this.activeRank.length && this.activeRank[i] <= rank)\n            i++;\n        insert(this.active, i, value);\n        insert(this.activeTo, i, to);\n        insert(this.activeRank, i, rank);\n        if (trackOpen)\n            insert(trackOpen, i, this.cursor.from);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    // After calling this, if `this.point` != null, the next range is a\n    // point. Otherwise, it's a regular range, covered by `this.active`.\n    next() {\n        let from = this.to, wasPoint = this.point;\n        this.point = null;\n        let trackOpen = this.openStart < 0 ? [] : null;\n        for (;;) {\n            let a = this.minActive;\n            if (a > -1 && (this.activeTo[a] - this.cursor.from || this.active[a].endSide - this.cursor.startSide) < 0) {\n                if (this.activeTo[a] > from) {\n                    this.to = this.activeTo[a];\n                    this.endSide = this.active[a].endSide;\n                    break;\n                }\n                this.removeActive(a);\n                if (trackOpen)\n                    remove(trackOpen, a);\n            }\n            else if (!this.cursor.value) {\n                this.to = this.endSide = 1000000000 /* C.Far */;\n                break;\n            }\n            else if (this.cursor.from > from) {\n                this.to = this.cursor.from;\n                this.endSide = this.cursor.startSide;\n                break;\n            }\n            else {\n                let nextVal = this.cursor.value;\n                if (!nextVal.point) { // Opening a range\n                    this.addActive(trackOpen);\n                    this.cursor.next();\n                }\n                else if (wasPoint && this.cursor.to == this.to && this.cursor.from < this.cursor.to) {\n                    // Ignore any non-empty points that end precisely at the end of the prev point\n                    this.cursor.next();\n                }\n                else { // New point\n                    this.point = nextVal;\n                    this.pointFrom = this.cursor.from;\n                    this.pointRank = this.cursor.rank;\n                    this.to = this.cursor.to;\n                    this.endSide = nextVal.endSide;\n                    this.cursor.next();\n                    this.forward(this.to, this.endSide);\n                    break;\n                }\n            }\n        }\n        if (trackOpen) {\n            this.openStart = 0;\n            for (let i = trackOpen.length - 1; i >= 0 && trackOpen[i] < from; i--)\n                this.openStart++;\n        }\n    }\n    activeForPoint(to) {\n        if (!this.active.length)\n            return this.active;\n        let active = [];\n        for (let i = this.active.length - 1; i >= 0; i--) {\n            if (this.activeRank[i] < this.pointRank)\n                break;\n            if (this.activeTo[i] > to || this.activeTo[i] == to && this.active[i].endSide >= this.point.endSide)\n                active.push(this.active[i]);\n        }\n        return active.reverse();\n    }\n    openEnd(to) {\n        let open = 0;\n        for (let i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > to; i--)\n            open++;\n        return open;\n    }\n}\nfunction compare(a, startA, b, startB, length, comparator) {\n    a.goto(startA);\n    b.goto(startB);\n    let endB = startB + length;\n    let pos = startB, dPos = startB - startA;\n    for (;;) {\n        let diff = (a.to + dPos) - b.to || a.endSide - b.endSide;\n        let end = diff < 0 ? a.to + dPos : b.to, clipEnd = Math.min(end, endB);\n        if (a.point || b.point) {\n            if (!(a.point && b.point && (a.point == b.point || a.point.eq(b.point)) &&\n                sameValues(a.activeForPoint(a.to + dPos), b.activeForPoint(b.to))))\n                comparator.comparePoint(pos, clipEnd, a.point, b.point);\n        }\n        else {\n            if (clipEnd > pos && !sameValues(a.active, b.active))\n                comparator.compareRange(pos, clipEnd, a.active, b.active);\n        }\n        if (end > endB)\n            break;\n        pos = end;\n        if (diff <= 0)\n            a.next();\n        if (diff >= 0)\n            b.next();\n    }\n}\nfunction sameValues(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i] && !a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction remove(array, index) {\n    for (let i = index, e = array.length - 1; i < e; i++)\n        array[i] = array[i + 1];\n    array.pop();\n}\nfunction insert(array, index, value) {\n    for (let i = array.length - 1; i >= index; i--)\n        array[i + 1] = array[i];\n    array[index] = value;\n}\nfunction findMinIndex(value, array) {\n    let found = -1, foundPos = 1000000000 /* C.Far */;\n    for (let i = 0; i < array.length; i++)\n        if ((array[i] - foundPos || value[i].endSide - value[found].endSide) < 0) {\n            found = i;\n            foundPos = array[i];\n        }\n    return found;\n}\n\n/**\nCount the column position at the given offset into the string,\ntaking extending characters and tab size into account.\n*/\nfunction countColumn(string, tabSize, to = string.length) {\n    let n = 0;\n    for (let i = 0; i < to;) {\n        if (string.charCodeAt(i) == 9) {\n            n += tabSize - (n % tabSize);\n            i++;\n        }\n        else {\n            n++;\n            i = findClusterBreak(string, i);\n        }\n    }\n    return n;\n}\n/**\nFind the offset that corresponds to the given column position in a\nstring, taking extending characters and tab size into account. By\ndefault, the string length is returned when it is too short to\nreach the column. Pass `strict` true to make it return -1 in that\nsituation.\n*/\nfunction findColumn(string, col, tabSize, strict) {\n    for (let i = 0, n = 0;;) {\n        if (n >= col)\n            return i;\n        if (i == string.length)\n            break;\n        n += string.charCodeAt(i) == 9 ? tabSize - (n % tabSize) : 1;\n        i = findClusterBreak(string, i);\n    }\n    return strict === true ? -1 : string.length;\n}\n\nexport { Annotation, AnnotationType, ChangeDesc, ChangeSet, CharCategory, Compartment, EditorSelection, EditorState, Facet, Line, MapMode, Prec, Range, RangeSet, RangeSetBuilder, RangeValue, SelectionRange, StateEffect, StateEffectType, StateField, Text, Transaction, codePointAt, codePointSize, combineConfig, countColumn, findClusterBreak, findColumn, fromCodePoint };\n","import { ChangeSet, ChangeSpec, Text } from \"@codemirror/state\";\nimport { extensionPort, proxy } from \"../../util/comlink\";\nimport { TextChange, WatchTextFileListeners } from \"../../types\";\n\n/**\n * A helper to change a ChangeSet into a simpler serializable & human readable format\n */\nfunction changeSetToSimpleTextChange(changes: ChangeSet): Array<TextChange> {\n  const simpleChanges: Array<TextChange> = [];\n\n  changes.iterChanges((fromA, toA, _fromB, _toB, text) => {\n    const change: TextChange = { from: fromA };\n\n    if (toA > fromA) {\n      change.to = toA;\n    }\n\n    if (text.length) {\n      change.insert = text.sliceString(0);\n    }\n\n    simpleChanges.push(change);\n  });\n\n  return simpleChanges;\n}\n\n/**\n * watches a file via comlink, notifies listeners about changes.\n * it handles synchronization between local and remote text states.\n * properly disposes resources when no longer needed.\n */\nclass TextFileWatcher {\n  /*\n   * TODO: what do we do with out of order messages, postMessage has no guarantees of order\n   * TODO: we need versioning to guarantee correctness. Related to above, using async/await doesn't guarantee that our change got applied before the next incoming change and vice versa\n   */\n  private state: {\n    localText: Text;\n    remoteText: Text;\n    unconfirmedChanges: Set<{ changes: ChangeSet }>;\n    requestWriteChange: (changes: ChangeSpec) => Promise<void>;\n  } | null;\n  private isDisposed: boolean;\n  public dispose: () => void;\n\n  constructor(\n    private path: string,\n    private listeners: {\n      onReady: () => void;\n      onChange: NonNullable<WatchTextFileListeners[\"onChange\"]>;\n      onMoveOrDelete: NonNullable<WatchTextFileListeners[\"onMoveOrDelete\"]>;\n      onError: NonNullable<WatchTextFileListeners[\"onError\"]>;\n    }\n  ) {\n    this.state = null;\n    this.isDisposed = false;\n    this.dispose = () => {\n      this.isDisposed = true;\n    };\n\n    if (!extensionPort) {\n      throw new Error(\"Expected extensionPort\");\n    }\n\n    extensionPort\n      .watchTextFile(\n        this.path,\n        proxy({\n          onReady: this.handleReady.bind(this) as any, // wrongly typed at extensionPort\n          onChange: this.handleChange.bind(this),\n          onMoveOrDelete: (event) => {\n            listeners.onMoveOrDelete(event);\n          },\n          onError: (error) => {\n            listeners.onError(error);\n          },\n        })\n      )\n      .then((portDispose) => {\n        if (this.isDisposed) {\n          portDispose();\n\n          return;\n        }\n\n        this.dispose = () => {\n          this.isDisposed = true;\n          portDispose();\n        };\n      });\n  }\n\n  public writeChange(changes: ChangeSpec) {\n    if (this.isDisposed) {\n      throw new Error(\"Wrote change on a disposed TextFileWatcher\");\n    }\n\n    if (!this.state) {\n      throw new Error(\"Tried to write changes before ready\");\n    }\n\n    const changeSet = ChangeSet.of(changes, this.state.localText.length);\n    this.state.localText = changeSet.apply(this.state.localText);\n\n    this.enqueueChangeSet(changeSet);\n  }\n\n  public getLatestContent() {\n    if (this.isDisposed) {\n      throw new Error(\"Cannot get content of a disposed TextFileWatcher\");\n    }\n\n    if (!this.state) {\n      throw new Error(\"Called getLatestContent on an unready TextFileWatcher\");\n    }\n\n    return this.state.localText.sliceString(0);\n  }\n\n  public getIsReady() {\n    if (this.isDisposed) {\n      throw new Error(\"Cannot get isReady of a disposed TextFileWatcher\");\n    }\n\n    return Boolean(this.state);\n  }\n\n  private async handleReady({\n    writeChange,\n    initialContent,\n  }: {\n    writeChange: (changes: ChangeSpec) => Promise<void>;\n    initialContent: Promise<string>;\n  }) {\n    if (this.isDisposed) {\n      return;\n    }\n\n    const content = Text.of((await initialContent).split(\"\\n\"));\n    this.state = {\n      requestWriteChange: writeChange,\n      localText: content,\n      remoteText: content,\n      unconfirmedChanges: new Set(),\n    };\n\n    this.listeners.onReady();\n  }\n\n  private handleChange({ changes: changeJSON }: { changes: any }) {\n    if (this.isDisposed) {\n      return;\n    }\n\n    if (!this.state) {\n      throw new Error(\"unexpected handleOnChange called before handleOnReady\");\n    }\n\n    let changes = ChangeSet.fromJSON(changeJSON);\n\n    this.state.remoteText = changes.apply(this.state.remoteText);\n\n    for (const unconfirmed of this.state.unconfirmedChanges) {\n      const unconfirmedUpdated = unconfirmed.changes.map(changes);\n      changes = changes.map(unconfirmed.changes, true);\n      unconfirmed.changes = unconfirmedUpdated;\n    }\n\n    this.state.localText = changes.apply(this.state.localText);\n\n    this.listeners.onChange({\n      changes: changeSetToSimpleTextChange(changes),\n      latestContent: this.getLatestContent(),\n    });\n  }\n\n  private async enqueueChangeSet(changes: ChangeSet) {\n    if (this.isDisposed) {\n      throw new Error(\"Wrote change on a disposed TextFileWatcher\");\n    }\n\n    if (!this.state) {\n      throw new Error(\"Tried to write changes before ready\");\n    }\n\n    // Store in a ref since the ChangeSet is immutable, and it will change when fastfowarded\n    const ref = { changes };\n    this.state.unconfirmedChanges.add(ref);\n    await this.state.requestWriteChange(\n      changeSetToSimpleTextChange(ref.changes)\n    );\n\n    this.state.unconfirmedChanges.delete(ref);\n    this.state.remoteText = ref.changes.apply(this.state.remoteText);\n  }\n}\n\n/**\n * A class that manages multiple `TextFileWatcher` instances\n * ensuring that there's only one watcher per file to make sure\n * we are handling synchronization properly, having multiple watchers\n * will cause issues with the `TextFileWatcher` implementation.\n * Notifies listeners when a file is ready or when there are changes.\n * Automatically disposes watchers when there are no more listeners.\n * This should be a singleton, but it's not enforced for testability.\n */\nclass FileWatcherManager {\n  private files: Map<\n    string,\n    {\n      listeners: Set<WatchTextFileListeners>;\n      watcher: TextFileWatcher;\n    }\n  >;\n\n  constructor() {\n    this.files = new Map();\n  }\n\n  public watch(path: string, listeners: WatchTextFileListeners) {\n    if (this.files.has(path)) {\n      this.watchExisting(path, listeners);\n    } else {\n      this.watchNew(path, listeners);\n    }\n\n    return () => {\n      const file = this.files.get(path);\n\n      if (!file) {\n        return;\n      }\n\n      file.listeners.delete(listeners);\n      if (file.listeners.size === 0) {\n        this.dispose(path);\n      }\n    };\n  }\n\n  private dispose(path: string) {\n    const file = this.files.get(path);\n\n    if (!file) {\n      return;\n    }\n\n    file.watcher.dispose();\n    this.files.delete(path);\n  }\n\n  private watchNew(path: string, listeners: WatchTextFileListeners) {\n    const watcher = new TextFileWatcher(path, {\n      onReady: () => {\n        this.handleReady(path);\n      },\n      onChange: (changeEvent) => {\n        this.handleChange(path, changeEvent);\n      },\n      onMoveOrDelete: (event) => {\n        this.handleMoveOrDelete(path, event);\n      },\n      onError: (error) => {\n        this.handleError(path, error);\n      },\n    });\n\n    this.files.set(path, {\n      listeners: new Set([listeners]),\n      watcher,\n    });\n  }\n\n  private watchExisting(path: string, listeners: WatchTextFileListeners) {\n    const file = this.files.get(path);\n\n    if (!file) {\n      throw new Error(\"file is not watched\");\n    }\n\n    file.listeners.add(listeners);\n  }\n\n  private handleChange(\n    path: string,\n    changeEvent: Parameters<NonNullable<WatchTextFileListeners[\"onChange\"]>>[0]\n  ) {\n    const file = this.files.get(path);\n\n    if (!file) {\n      throw new Error(\"Unexpected change on a non-watched file\");\n    }\n\n    if (!file.watcher.getIsReady()) {\n      throw new Error(\"Unexpected change on a non-ready file\");\n    }\n\n    for (const { onChange } of file.listeners) {\n      if (!onChange) {\n        continue;\n      }\n\n      onChange(changeEvent);\n    }\n  }\n\n  private handleReady(path: string) {\n    const file = this.files.get(path);\n\n    if (!file) {\n      throw new Error(\"Unexpected change on a non-watched file\");\n    }\n\n    if (!file.watcher.getIsReady()) {\n      throw new Error(\"Got ready on a non-ready file :/\");\n    }\n\n    const initialContent = file.watcher.getLatestContent();\n    for (const { onReady, onChange } of file.listeners) {\n      onReady({\n        initialContent,\n        getLatestContent: () => file.watcher.getLatestContent(),\n        writeChange: (changes: TextChange | Array<TextChange>) => {\n          file.watcher.writeChange(changes);\n\n          for (const { onChange: otherOnChange } of file.listeners) {\n            if (onChange === otherOnChange) {\n              // we don't want to notify the originator, they already know about the change\n              continue;\n            }\n\n            if (!otherOnChange) {\n              continue;\n            }\n\n            otherOnChange({\n              changes: Array.isArray(changes) ? changes : [changes],\n              latestContent: file.watcher.getLatestContent(),\n            });\n          }\n        },\n      });\n    }\n  }\n\n  private handleError(path: string, error: string) {\n    const file = this.files.get(path);\n\n    if (!file) {\n      throw new Error(\"Unexpected error on a non-watched file\");\n    }\n\n    for (const { onError } of file.listeners) {\n      if (!onError) {\n        continue;\n      }\n\n      onError(error);\n    }\n\n    this.dispose(path);\n  }\n\n  private handleMoveOrDelete(\n    path: string,\n    event: Parameters<NonNullable<WatchTextFileListeners[\"onMoveOrDelete\"]>>[0]\n  ) {\n    const file = this.files.get(path);\n\n    if (!file) {\n      throw new Error(\"Unexpected move or delete event on a non-watched file\");\n    }\n\n    for (const { onMoveOrDelete } of file.listeners) {\n      if (!onMoveOrDelete) {\n        continue;\n      }\n\n      onMoveOrDelete(event);\n    }\n\n    this.dispose(path);\n  }\n}\n\nexport const fileWatcherManager = new FileWatcherManager();\n","import { extensionPort } from \"../util/comlink\";\n\n/**\n * Sets the value for a given key. Required [permissions](/extensions/api/manifest#scopetype): `repldb:read`, `repldb:write`.\n */\nexport async function set(args: { key: string; value: any }) {\n  return extensionPort.setReplDbValue(args.key, args.value);\n}\n\n/**\n * Returns a value associated with the given key. Required [permissions](/extensions/api/manifest#scopetype): `repldb:read`.\n */\nexport async function get(args: { key: string }) {\n  return extensionPort.getReplDbValue(args.key);\n}\n\n/**\n * Lists keys in the replDb. Accepts an optional `prefix`, which filters for keys beginning with the given prefix. Required [permissions](/extensions/api/manifest#scopetype): `repldb:read`.\n */\nexport async function list(args: { prefix?: string } = {}) {\n  return extensionPort.listReplDbKeys(args?.prefix || \"\");\n}\n\n/**\n * Deletes a key in the replDb. Required [permissions](/extensions/api/manifest#scopetype): `repldb:read`, `repldb:write`.\n */\nexport async function del(args: { key: string }) {\n  return extensionPort.deleteReplDbKey(args.key);\n}\n","import { extensionPort } from \"../util/comlink\";\n\n/**\n * Returns the path to the current file the extension is opened with, if it is a [File Handler](/extensions/key-concepts#file-handler).\n */\nexport function filePath() {\n  return extensionPort.filePath;\n}\n","import { proxy } from \"comlink\";\nimport {\n  DisposerFunction,\n  OnThemeChangeListener,\n  OnThemeChangeValuesListener,\n  ThemeValuesGlobal,\n} from \"../types\";\nimport { extensionPort } from \"../util/comlink\";\n\n/**\n * Returns all metadata on the current theme including syntax highlighting, description, HSL, token values, and more.\n */\nexport async function getCurrentTheme() {\n  return await extensionPort.getCurrentTheme();\n}\n\n/**\n * Returns the current theme's global token values.\n */\nexport async function getCurrentThemeValues(): Promise<ThemeValuesGlobal> {\n  return await extensionPort.getCurrentThemeValues();\n}\n\n/**\n * Fires the `callback` parameter function with the updated theme when the user's theme changes.\n */\nexport async function onThemeChange(\n  callback: OnThemeChangeListener\n): Promise<DisposerFunction> {\n  return await extensionPort.onThemeChange(proxy(callback));\n}\n\n/**\n * Fires the `callback` parameter function with the updated theme values when the user's theme changes.\n */\nexport async function onThemeChangeValues(\n  callback: OnThemeChangeValuesListener\n): Promise<DisposerFunction> {\n  return await extensionPort.onThemeChangeValues(proxy(callback));\n}\n","import { extensionPort } from \"../util/comlink\";\n\n/**\n * Shows a confirmation toast message within the Replit workspace for `length` milliseconds.  Returns the ID of the message as a UUID\n */\nexport const showConfirm = async (str: string, length: number = 4000) => {\n  if (typeof str !== \"string\") {\n    throw new Error(\"Messages must be strings\");\n  }\n\n  return extensionPort.showConfirm(str, length);\n};\n\n/**\n * Shows an error toast message within the Replit workspace for `length` milliseconds.  Returns the ID of the message as a UUID\n */\nexport const showError = async (str: string, length: number = 4000) => {\n  if (typeof str !== \"string\") {\n    throw new Error(\"Messages must be strings\");\n  }\n\n  return extensionPort.showError(str, length);\n};\n\n/**\n * Shows a notice toast message within the Replit workspace for `length` milliseconds.  Returns the ID of the message as a UUID\n */\nexport const showNotice = async (str: string, length: number = 4000) => {\n  if (typeof str !== \"string\") {\n    throw new Error(\"Messages must be strings\");\n  }\n\n  return extensionPort.showNotice(str, length);\n};\n\n/**\n * Shows a warning toast message within the Replit workspace for `length` milliseconds.  Returns the ID of the message as a UUID\n */\nexport const showWarning = async (str: string, length: number = 4000) => {\n  if (typeof str !== \"string\") {\n    throw new Error(\"Messages must be strings\");\n  }\n\n  return extensionPort.showWarning(str, length);\n};\n\n/**\n * Hides a message by its IDs\n */\nexport const hideMessage = async (id: string) => {\n  return extensionPort.hideMessage(id);\n};\n\n/**\n * Hides all toast messages visible on the screens\n */\nexport const hideAllMessages = async () => {\n  return extensionPort.hideAllMessages();\n};\n","import {\n  ReplDataInclusion,\n  UserDataInclusion,\n  CurrentUserDataInclusion,\n} from \"../types\";\nimport { extensionPort } from \"../util/comlink\";\n\n/**\n * Fetches the current user via graphql\n */\nexport async function currentUser(args: CurrentUserDataInclusion = {}) {\n  return await extensionPort.currentUser(args);\n}\n\n/**\n * Fetches a user by their id via graphql\n */\nexport async function userById(args: { id: number } & UserDataInclusion) {\n  if (typeof args.id !== \"number\") {\n    throw new Error(\n      `Query parameter \"id\" must be a number.  Found type ${typeof args.id} instead.`\n    );\n  }\n\n  return await extensionPort.userById(args);\n}\n\n/**\n * Fetches a user by their username via graphql\n */\nexport async function userByUsername(\n  args: { username: string } & UserDataInclusion\n) {\n  if (typeof args.username !== \"string\") {\n    throw new Error(\n      `Query parameter \"username\" must be a string.  Found type ${typeof args.username} instead.`\n    );\n  }\n\n  return await extensionPort.userByUsername(args);\n}\n\n/**\n * Fetches the current Repl via graphql\n */\nexport async function currentRepl(args: ReplDataInclusion = {}) {\n  return await extensionPort.currentRepl(args);\n}\n\n/**\n * Fetches a Repl by its ID via graphql\n */\nexport async function replById(args: { id: string } & ReplDataInclusion) {\n  if (typeof args.id !== \"string\") {\n    throw new Error(\n      `Query parameter \"id\" must be a string.  Found type ${typeof args.id} instead.`\n    );\n  }\n\n  return await extensionPort.replById(args);\n}\n\n/**\n * Fetches a Repl by its URL via graphql\n */\nexport async function replByUrl(args: { url: string } & ReplDataInclusion) {\n  if (typeof args.url !== \"string\") {\n    throw new Error(\n      `Query parameter \"url\" must be a string.  Found type ${typeof args.url} instead.`\n    );\n  }\n\n  return await extensionPort.replByUrl(args);\n}\n","import { DisposerFunction, OnActiveFileChangeListener } from \"../types\";\nimport { extensionPort, proxy } from \"../util/comlink\";\n\n/**\n * Sets up a listener to handle when the active file is changed\n */\nexport function onActiveFileChange(\n  listener: OnActiveFileChangeListener\n): DisposerFunction {\n  let dispose = () => {\n    console.log(\"disposing existing watcher\");\n  };\n\n  extensionPort.watchActiveFile(proxy(listener)).then((d: () => void) => {\n    dispose = d;\n  });\n\n  return () => {\n    dispose();\n  };\n}\n\n/**\n * Returns the current file the user is focusing\n */\nexport async function getActiveFile() {\n  return await extensionPort.getActiveFile();\n}\n","export * as auth from \"./auth\";\nexport * as editor from \"./editor\";\n","import { extensionPort } from \"../../util/comlink\";\nimport * as jose from \"jose\";\nimport { polyfillEd25519 } from \"../../polyfills/ed25519\";\nimport { AuthenticateResult, JWTVerifyResult } from \"../../types\";\n\nconst success = typeof window !== \"undefined\" ? polyfillEd25519() : false;\nif (!success) {\n  console.warn(\n    \"Failed to polyfill ed25519: crypto.subtle is not available in the environment. This will cause issues with the auth API.\"\n  );\n}\n\n/**\n * Returns a unique JWT token that can be used to verify that an extension has been loaded on Replit by a particular user\n */\nexport async function getAuthToken() {\n  return extensionPort.experimental.auth.getAuthToken();\n}\n\n/**\n * Verifies a provided JWT token and returns the decoded token.\n */\nexport async function verifyAuthToken(token: string): Promise<JWTVerifyResult> {\n  const tokenHeaders = jose.decodeProtectedHeader(token);\n\n  if (tokenHeaders.typ !== \"JWT\") {\n    throw new Error(\"Expected typ: JWT\");\n  }\n\n  if (tokenHeaders.alg !== \"EdDSA\") {\n    throw new Error(\"Expected alg: EdDSA\");\n  }\n\n  if (!tokenHeaders.kid) {\n    throw new Error(\"Expected `kid` to be defined\");\n  }\n\n  const res = await fetch(\n    `https://replit.com/data/extensions/publicKey/${tokenHeaders.kid}`\n  );\n\n  const { ok, value: publicKey } = await res.json();\n\n  if (!ok) {\n    throw new Error(\"Extension Auth: Failed to fetch public key\");\n  }\n\n  try {\n    const importedPublicKey = await jose.importSPKI(publicKey, \"EdDSA\");\n\n    const decodedToken = await jose.jwtVerify(token, importedPublicKey);\n\n    return decodedToken;\n  } catch (e) {\n    throw new Error(\"Extension Auth: Failed to verify token\");\n  }\n}\n\n/**\n * Performs authentication and returns the user and installation information\n */\nexport async function authenticate(): Promise<AuthenticateResult> {\n  const token = await getAuthToken();\n  const decodedToken = await verifyAuthToken(token);\n\n  if (\n    typeof decodedToken.payload.userId !== \"number\" ||\n    typeof decodedToken.payload.installationId !== \"string\" ||\n    typeof decodedToken.payload.extensionId !== \"string\"\n  ) {\n    throw new Error(\"Failed to authenticate\");\n  }\n\n  return {\n    user: {\n      id: decodedToken.payload.userId,\n    },\n    installation: {\n      id: decodedToken.payload.installationId,\n      extensionId: decodedToken.payload.extensionId,\n    },\n  };\n}\n","export default crypto;\nexport const isCryptoKey = (key) => {\n  if (\n    \"type\" in key &&\n    \"extractable\" in key &&\n    \"algorithm\" in key &&\n    \"usages\" in key\n  ) {\n    return true;\n  }\n\n  return key instanceof CryptoKey;\n};\n","import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n","import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n","export class JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    constructor(message) {\n        var _a;\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nexport class JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n","import crypto from './webcrypto.js';\nexport default crypto.getRandomValues.bind(crypto);\n","function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n","function message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n","import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    return isCryptoKey(key);\n};\nexport const types = ['CryptoKey'];\n","const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encodeBase64, decodeBase64 } from './base64url.js';\nimport formatPEM from '../lib/format_pem.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nconst genericExport = async (keyType, keyFormat, key) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    if (!key.extractable) {\n        throw new TypeError('CryptoKey is not extractable');\n    }\n    if (key.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return formatPEM(encodeBase64(new Uint8Array(await crypto.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nconst findOid = (keyData, oid, from = 0) => {\n    if (from === 0) {\n        oid.unshift(oid.length);\n        oid.unshift(0x06);\n    }\n    let i = keyData.indexOf(oid[0], from);\n    if (i === -1)\n        return false;\n    const sub = keyData.subarray(i, i + oid.length);\n    if (sub.length !== oid.length)\n        return false;\n    return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);\n};\nconst getNamedCurve = (keyData) => {\n    switch (true) {\n        case findOid(keyData, [0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07]):\n            return 'P-256';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x22]):\n            return 'P-384';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x23]):\n            return 'P-521';\n        case findOid(keyData, [0x2b, 0x65, 0x6e]):\n            return 'X25519';\n        case findOid(keyData, [0x2b, 0x65, 0x6f]):\n            return 'X448';\n        case findOid(keyData, [0x2b, 0x65, 0x70]):\n            return 'Ed25519';\n        case findOid(keyData, [0x2b, 0x65, 0x71]):\n            return 'Ed448';\n        default:\n            throw new JOSENotSupported('Invalid or unsupported EC Key Curve or OKP Key Sub Type');\n    }\n};\nconst genericImport = async (replace, keyFormat, pem, alg, options) => {\n    var _a;\n    let algorithm;\n    let keyUsages;\n    const keyData = new Uint8Array(atob(pem.replace(replace, ''))\n        .split('')\n        .map((c) => c.charCodeAt(0)));\n    const isPublic = keyFormat === 'spki';\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n            };\n            keyUsages = isPublic ? ['encrypt', 'wrapKey'] : ['decrypt', 'unwrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            const namedCurve = getNamedCurve(keyData);\n            algorithm = namedCurve.startsWith('P-') ? { name: 'ECDH', namedCurve } : { name: namedCurve };\n            keyUsages = isPublic ? [] : ['deriveBits'];\n            break;\n        }\n        case 'EdDSA':\n            algorithm = { name: getNamedCurve(keyData) };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\n    }\n    return crypto.subtle.importKey(keyFormat, keyData, algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n};\nexport const fromPKCS8 = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, 'pkcs8', pem, alg, options);\n};\nexport const fromSPKI = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, 'spki', pem, alg, options);\n};\nfunction getElement(seq) {\n    let result = [];\n    let next = 0;\n    while (next < seq.length) {\n        let nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            if (length > bytes.byteLength) {\n                throw new TypeError('invalid indefinite form length');\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    else {\n        let numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nfunction getSPKI(x509) {\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = decodeBase64(pem);\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\n}\nexport const fromX509 = (pem, alg, options) => {\n    let spki;\n    try {\n        spki = getSPKI(pem);\n    }\n    catch (cause) {\n        throw new TypeError('failed to parse the X.509 certificate', { cause });\n    }\n    return fromSPKI(spki, alg, options);\n};\n","import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg, octAsKeyObject) {\n    var _a;\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : (octAsKeyObject = jwk.ext !== true);\n            if (octAsKeyObject) {\n                return asKeyObject({ ...jwk, alg, ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false });\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n","import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nconst symmetricTypeCheck = (alg, key) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\nexport default checkKeyType;\n","import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n","const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport encrypt from '../../runtime/encrypt.js';\nimport { deflate } from '../../runtime/zlib.js';\nimport generateIv from '../../lib/iv.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport const unprotected = Symbol();\nexport class FlattenedEncrypt {\n    constructor(plaintext) {\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError('plaintext must be an instance of Uint8Array');\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== 'DEF') {\n                throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === 'dir') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Encryption');\n            }\n        }\n        else if (alg === 'ECDH-ES') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Key Agreement');\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    }\n                    else {\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\n                    }\n                }\n                else {\n                    if (!this._protectedHeader) {\n                        this.setProtectedHeader(parameters);\n                    }\n                    else {\n                        this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                    }\n                }\n            }\n        }\n        this._iv || (this._iv = generateIv(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = base64url(this._aad);\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === 'DEF') {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || deflate)(this._plaintext);\n            ({ ciphertext, tag } = await encrypt(enc, deflated, cek, this._iv, additionalData));\n        }\n        else {\n            ;\n            ({ ciphertext, tag } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: base64url(ciphertext),\n            iv: base64url(this._iv),\n            tag: base64url(tag),\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = base64url(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport default function getCryptoKey(alg, key, usage) {\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch (_a) {\n        return false;\n    }\n};\nexport default verify;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    const signature = base64url(jws.signature);\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        payload = base64url(jws.payload);\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","export default (date) => Math.floor(date.getTime() / 1000);\n","const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            return Math.round(value);\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            return Math.round(value * minute);\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            return Math.round(value * hour);\n        case 'day':\n        case 'days':\n        case 'd':\n            return Math.round(value * day);\n        case 'week':\n        case 'weeks':\n        case 'w':\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n","import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch (_a) {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    if (maxTokenAge !== undefined)\n        requiredClaims.push('iat');\n    if (audience !== undefined)\n        requiredClaims.push('aud');\n    if (subject !== undefined)\n        requiredClaims.push('sub');\n    if (issuer !== undefined)\n        requiredClaims.push('iss');\n    for (const claim of new Set(requiredClaims.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, 'missing');\n        }\n    }\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n","import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await compactVerify(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n","import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nexport function decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(decoder.decode(base64url(protectedB64u)));\n        if (!isObject(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch (_a) {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\n","export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n","declare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n\n// We accept hex strings besides Uint8Array for simplicity\nexport type Hex = Uint8Array | string;\n// Very few implementations accept numbers, we do it to ease learning curve\nexport type PrivKey = Hex | bigint;\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// Caching slows it down 2-3x\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  if (hex.length % 2) throw new Error('hex string is invalid: unpadded ' + hex.length);\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// Big Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport const numberToBytesBE = (n: bigint, len: number) =>\n  hexToBytes(n.toString(16).padStart(len * 2, '0'));\nexport const numberToBytesLE = (n: bigint, len: number) => numberToBytesBE(n, len).reverse();\n// Returns variable number bytes (minimal bigint encoding?)\nexport const numberToVarBytesBE = (n: bigint) => hexToBytes(numberToHexUnpadded(n));\n\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n// Copies several Uint8Arrays into one.\nexport function concatBytes(...arrs: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrs.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrs.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\n// Bit operations\n\n// Amount of bits inside bigint (Same as n.toString(2).length)\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n// Gets single bit at position. NOTE: first bit position is 0 (same as arrays)\n// Same as !!+Array.from(n.toString(2)).reverse()[pos]\nexport const bitGet = (n: bigint, pos: number) => (n >> BigInt(pos)) & _1n;\n// Sets single bit at position\nexport const bitSet = (n: bigint, pos: number, value: boolean) =>\n  n | ((value ? _1n : _0n) << BigInt(pos));\n// Return mask for N bits (Same as BigInt(`0b${Array(i).fill('1').join('')}`))\n// Not using ** operator with bigints for old engines.\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently exponentiate num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * powMod(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Eucledian GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Currently completly inconsistent naming:\n// - readable: add, mul, sqr, sqrt, inv, div, pow, eq, sub\n// - unreadable mess: addition, multiply, square, squareRoot, inversion, divide, power, equals, subtract\n\n// Field is not always over prime, Fp2 for example has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n// 0 is non-invertible: non-batched version will throw on 0\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being neglible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @returns valid private scalar\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, FHash, Hex } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n\n// Edwards curves must declare params a & d.\nexport type CurveType = BasicCurve<bigint> & {\n  a: bigint; // curve param a\n  d: bigint; // curve param d\n  hash: FHash; // Hashing\n  randomBytes: (bytesLength?: number) => Uint8Array; // CSPRNG\n  adjustScalarBytes?: (bytes: Uint8Array) => Uint8Array; // clears bits to get valid field elemtn\n  domain?: (data: Uint8Array, ctx: Uint8Array, phflag: boolean) => Uint8Array; // Used for hashing\n  uvRatio?: (u: bigint, v: bigint) => { isValid: boolean; value: bigint }; // Ratio √(u/v)\n  prehash?: FHash; // RFC 8032 pre-hashing of messages to sign() / verify()\n  mapToCurve?: (scalar: bigint[]) => AffinePoint<bigint>; // for hash-to-curve standard\n};\n\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    curve,\n    {\n      hash: 'function',\n      a: 'bigint',\n      d: 'bigint',\n      randomBytes: 'function',\n    },\n    {\n      adjustScalarBytes: 'function',\n      domain: 'function',\n      uvRatio: 'function',\n      mapToCurve: 'function',\n    }\n  );\n  // Set defaults\n  return Object.freeze({ ...opts } as const);\n}\n\n// Instance of Extended Point with coordinates in X, Y, Z, T\nexport interface ExtPointType extends Group<ExtPointType> {\n  readonly ex: bigint;\n  readonly ey: bigint;\n  readonly ez: bigint;\n  readonly et: bigint;\n  get x(): bigint;\n  get y(): bigint;\n  assertValidity(): void;\n  multiply(scalar: bigint): ExtPointType;\n  multiplyUnsafe(scalar: bigint): ExtPointType;\n  isSmallOrder(): boolean;\n  isTorsionFree(): boolean;\n  clearCofactor(): ExtPointType;\n  toAffine(iz?: bigint): AffinePoint<bigint>;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n}\n// Static methods of Extended Point with coordinates in X, Y, Z, T\nexport interface ExtPointConstructor extends GroupConstructor<ExtPointType> {\n  new (x: bigint, y: bigint, z: bigint, t: bigint): ExtPointType;\n  fromAffine(p: AffinePoint<bigint>): ExtPointType;\n  fromHex(hex: Hex): ExtPointType;\n  fromPrivateKey(privateKey: Hex): ExtPointType;\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: Hex) => Uint8Array;\n  sign: (message: Hex, privateKey: Hex) => Uint8Array;\n  verify: (sig: Hex, message: Hex, publicKey: Hex) => boolean;\n  ExtendedPoint: ExtPointConstructor;\n  utils: {\n    randomPrivateKey: () => Uint8Array;\n    getExtendedPublicKey: (key: Hex) => {\n      head: Uint8Array;\n      prefix: Uint8Array;\n      scalar: bigint;\n      point: ExtPointType;\n      pointBytes: Uint8Array;\n    };\n  };\n};\n\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const {\n    Fp,\n    n: CURVE_ORDER,\n    prehash: prehash,\n    hash: cHash,\n    randomBytes,\n    nByteLength,\n    h: cofactor,\n  } = CURVE;\n  const MASK = _2n ** BigInt(nByteLength * 8);\n  const modP = Fp.create; // Function overrides\n\n  // sqrt(u/v)\n  const uvRatio =\n    CURVE.uvRatio ||\n    ((u: bigint, v: bigint) => {\n      try {\n        return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n      } catch (e) {\n        return { isValid: false, value: _0n };\n      }\n    });\n  const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes: Uint8Array) => bytes); // NOOP\n  const domain =\n    CURVE.domain ||\n    ((data: Uint8Array, ctx: Uint8Array, phflag: boolean) => {\n      if (ctx.length || phflag) throw new Error('Contexts/pre-hash are not supported');\n      return data;\n    }); // NOOP\n  const inBig = (n: bigint) => typeof n === 'bigint' && _0n < n; // n in [1..]\n  const inRange = (n: bigint, max: bigint) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n  const in0MaskRange = (n: bigint) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n  function assertInRange(n: bigint, max: bigint) {\n    // n in [1..max-1]\n    if (inRange(n, max)) return n;\n    throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n  }\n  function assertGE0(n: bigint) {\n    // n in [0..CURVE_ORDER-1]\n    return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n  }\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function isPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ExtendedPoint expected');\n  }\n  // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n  // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n  class Point implements ExtPointType {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    static readonly ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n\n    constructor(\n      readonly ex: bigint,\n      readonly ey: bigint,\n      readonly ez: bigint,\n      readonly et: bigint\n    ) {\n      if (!in0MaskRange(ex)) throw new Error('x required');\n      if (!in0MaskRange(ey)) throw new Error('y required');\n      if (!in0MaskRange(ez)) throw new Error('z required');\n      if (!in0MaskRange(et)) throw new Error('t required');\n    }\n\n    get x(): bigint {\n      return this.toAffine().x;\n    }\n    get y(): bigint {\n      return this.toAffine().y;\n    }\n\n    static fromAffine(p: AffinePoint<bigint>): Point {\n      if (p instanceof Point) throw new Error('extended point not allowed');\n      const { x, y } = p || {};\n      if (!in0MaskRange(x) || !in0MaskRange(y)) throw new Error('invalid affine point');\n      return new Point(x, y, _1n, modP(x * y));\n    }\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.ez));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n    // Not required for fromHex(), which always creates valid points.\n    // Could be useful for fromAffine().\n    assertValidity(): void {\n      const { a, d } = CURVE;\n      if (this.is0()) throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n      // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n      // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n      const { ex: X, ey: Y, ez: Z, et: T } = this;\n      const X2 = modP(X * X); // X²\n      const Y2 = modP(Y * Y); // Y²\n      const Z2 = modP(Z * Z); // Z²\n      const Z4 = modP(Z2 * Z2); // Z⁴\n      const aX2 = modP(X2 * a); // aX²\n      const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n      const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n      if (left !== right) throw new Error('bad point: equation left != right (1)');\n      // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n      const XY = modP(X * Y);\n      const ZT = modP(Z * T);\n      if (XY !== ZT) throw new Error('bad point: equation left != right (2)');\n    }\n\n    // Compare one point to another.\n    equals(other: Point): boolean {\n      isPoint(other);\n      const { ex: X1, ey: Y1, ez: Z1 } = this;\n      const { ex: X2, ey: Y2, ez: Z2 } = other;\n      const X1Z2 = modP(X1 * Z2);\n      const X2Z1 = modP(X2 * Z1);\n      const Y1Z2 = modP(Y1 * Z2);\n      const Y2Z1 = modP(Y2 * Z1);\n      return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n\n    protected is0(): boolean {\n      return this.equals(Point.ZERO);\n    }\n\n    negate(): Point {\n      // Flips point sign to a negative one (-x, y in affine coords)\n      return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n    }\n\n    // Fast algo for doubling Extended Point.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n    // Cost: 4M + 4S + 1*a + 6add + 1*2.\n    double(): Point {\n      const { a } = CURVE;\n      const { ex: X1, ey: Y1, ez: Z1 } = this;\n      const A = modP(X1 * X1); // A = X12\n      const B = modP(Y1 * Y1); // B = Y12\n      const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n      const D = modP(a * A); // D = a*A\n      const x1y1 = X1 + Y1;\n      const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n      const G = D + B; // G = D+B\n      const F = G - C; // F = G-C\n      const H = D - B; // H = D-B\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    // Fast algo for adding 2 Extended Points.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n    // Cost: 9M + 1*a + 1*d + 7add.\n    add(other: Point) {\n      isPoint(other);\n      const { a, d } = CURVE;\n      const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n      const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n      // Faster algo for adding 2 Extended Points when curve's a=-1.\n      // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n      // Cost: 8M + 8add + 2*2.\n      // Note: It does not check whether the `other` point is valid.\n      if (a === BigInt(-1)) {\n        const A = modP((Y1 - X1) * (Y2 + X2));\n        const B = modP((Y1 + X1) * (Y2 - X2));\n        const F = modP(B - A);\n        if (F === _0n) return this.double(); // Same point. Tests say it doesn't affect timing\n        const C = modP(Z1 * _2n * T2);\n        const D = modP(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = modP(E * F);\n        const Y3 = modP(G * H);\n        const T3 = modP(E * H);\n        const Z3 = modP(F * G);\n        return new Point(X3, Y3, Z3, T3);\n      }\n      const A = modP(X1 * X2); // A = X1*X2\n      const B = modP(Y1 * Y2); // B = Y1*Y2\n      const C = modP(T1 * d * T2); // C = T1*d*T2\n      const D = modP(Z1 * Z2); // D = Z1*Z2\n      const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n      const F = D - C; // F = D-C\n      const G = D + C; // G = D+C\n      const H = modP(B - a * A); // H = B-a*A\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    subtract(other: Point): Point {\n      return this.add(other.negate());\n    }\n\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n    }\n\n    // Constant-time multiplication.\n    multiply(scalar: bigint): Point {\n      const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n      return Point.normalizeZ([p, f])[0];\n    }\n\n    // Non-constant-time multiplication. Uses double-and-add algorithm.\n    // It's faster, but should only be used when you don't care about\n    // an exposed private key e.g. sig verification.\n    // Does NOT allow scalars higher than CURVE.n.\n    multiplyUnsafe(scalar: bigint): Point {\n      let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n      if (n === _0n) return I;\n      if (this.equals(I) || n === _1n) return this;\n      if (this.equals(G)) return this.wNAF(n).p;\n      return wnaf.unsafeLadder(this, n);\n    }\n\n    // Checks if point is of small order.\n    // If you add something to small order point, you will have \"dirty\"\n    // point with torsion component.\n    // Multiplies point by cofactor and checks if the result is 0.\n    isSmallOrder(): boolean {\n      return this.multiplyUnsafe(cofactor).is0();\n    }\n\n    // Multiplies point by curve order and checks if the result is 0.\n    // Returns `false` is the point is dirty.\n    isTorsionFree(): boolean {\n      return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n    }\n\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    toAffine(iz?: bigint): AffinePoint<bigint> {\n      const { ex: x, ey: y, ez: z } = this;\n      const is0 = this.is0();\n      if (iz == null) iz = is0 ? _8n : (Fp.inv(z) as bigint); // 8 was chosen arbitrarily\n      const ax = modP(x * iz);\n      const ay = modP(y * iz);\n      const zz = modP(z * iz);\n      if (is0) return { x: _0n, y: _1n };\n      if (zz !== _1n) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n\n    clearCofactor(): Point {\n      const { h: cofactor } = CURVE;\n      if (cofactor === _1n) return this;\n      return this.multiplyUnsafe(cofactor);\n    }\n\n    // Converts hash string or Uint8Array to Point.\n    // Uses algo from RFC8032 5.1.3.\n    static fromHex(hex: Hex, zip215 = false): Point {\n      const { d, a } = CURVE;\n      const len = Fp.BYTES;\n      hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n      const normed = hex.slice(); // copy again, we'll manipulate it\n      const lastByte = hex[len - 1]; // select last byte\n      normed[len - 1] = lastByte & ~0x80; // clear last bit\n      const y = ut.bytesToNumberLE(normed);\n      if (y === _0n) {\n        // y=0 is allowed\n      } else {\n        // RFC8032 prohibits >= p, but ZIP215 doesn't\n        if (zip215) assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n        else assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n      }\n\n      // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n      // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n      const y2 = modP(y * y); // denominator is always non-0 mod p.\n      const u = modP(y2 - _1n); // u = y² - 1\n      const v = modP(d * y2 - a); // v = d y² + 1.\n      let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n      if (!isValid) throw new Error('Point.fromHex: invalid y coordinate');\n      const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n      const isLastByteOdd = (lastByte & 0x80) !== 0; // if x=0 and x_0 = 1, fail\n      if (isLastByteOdd !== isXOdd) x = modP(-x); // if x_0 != x mod 2, set x = p-x\n      return Point.fromAffine({ x, y });\n    }\n    static fromPrivateKey(privKey: Hex) {\n      return getExtendedPublicKey(privKey).point;\n    }\n    toRawBytes(): Uint8Array {\n      const { x, y } = this.toAffine();\n      const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n      bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n      return bytes; // and use the last byte to encode sign of x\n    }\n    toHex(): string {\n      return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n    }\n  }\n  const { BASE: G, ZERO: I } = Point;\n  const wnaf = wNAF(Point, nByteLength * 8);\n\n  function modN(a: bigint) {\n    return mod(a, CURVE_ORDER);\n  }\n  // Little-endian SHA512 with modulo n\n  function modN_LE(hash: Uint8Array): bigint {\n    return modN(ut.bytesToNumberLE(hash));\n  }\n\n  /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n  function getExtendedPublicKey(key: Hex) {\n    const len = nByteLength;\n    key = ensureBytes('private key', key, len);\n    // Hash private key with curve's hash function to produce uniformingly random input\n    // Check byte lengths: ensure(64, h(ensure(32, key)))\n    const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n    const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n    const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n    const scalar = modN_LE(head); // The actual private scalar\n    const point = G.multiply(scalar); // Point on Edwards curve aka public key\n    const pointBytes = point.toRawBytes(); // Uint8Array representation\n    return { head, prefix, scalar, point, pointBytes };\n  }\n\n  // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n  function getPublicKey(privKey: Hex): Uint8Array {\n    return getExtendedPublicKey(privKey).pointBytes;\n  }\n\n  // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n  function hashDomainToScalar(context: Hex = new Uint8Array(), ...msgs: Uint8Array[]) {\n    const msg = ut.concatBytes(...msgs);\n    return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n  }\n\n  /** Signs message with privateKey. RFC8032 5.1.6 */\n  function sign(msg: Hex, privKey: Hex, options: { context?: Hex } = {}): Uint8Array {\n    msg = ensureBytes('message', msg);\n    if (prehash) msg = prehash(msg); // for ed25519ph etc.\n    const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n    const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n    const R = G.multiply(r).toRawBytes(); // R = rG\n    const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n    const s = modN(r + k * scalar); // S = (r + k * s) mod L\n    assertGE0(s); // 0 <= s < l\n    const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n    return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n  }\n\n  const verifyOpts: { context?: Hex; zip215?: boolean } = VERIFY_DEFAULT;\n  function verify(sig: Hex, msg: Hex, publicKey: Hex, options = verifyOpts): boolean {\n    const { context, zip215 } = options;\n    const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n    sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n    msg = ensureBytes('message', msg);\n    if (prehash) msg = prehash(msg); // for ed25519ph, etc\n\n    const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n    // zip215: true is good for consensus-critical apps and allows points < 2^256\n    // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n    let A, R, SB;\n    try {\n      A = Point.fromHex(publicKey, zip215);\n      R = Point.fromHex(sig.slice(0, len), zip215);\n      SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n    } catch (error) {\n      return false;\n    }\n\n    const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n    const RkA = R.add(A.multiplyUnsafe(k));\n    // [8][S]B = [8]R + [8][k]A'\n    return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n  }\n\n  G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n\n  const utils = {\n    getExtendedPublicKey,\n    // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n    randomPrivateKey: (): Uint8Array => randomBytes(Fp.BYTES),\n\n    /**\n     * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n     * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n     * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n     * @param windowSize 2, 4, 8, 16\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3));\n      return point;\n    },\n  };\n\n  return {\n    CURVE,\n    getPublicKey,\n    sign,\n    verify,\n    ExtendedPoint: Point,\n    utils,\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { mod, pow } from './modular.js';\nimport { bytesToNumberLE, ensureBytes, numberToBytesLE, validateObject } from './utils.js';\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\ntype Hex = string | Uint8Array;\n\nexport type CurveType = {\n  P: bigint; // finite field prime\n  nByteLength: number;\n  adjustScalarBytes?: (bytes: Uint8Array) => Uint8Array;\n  domain?: (data: Uint8Array, ctx: Uint8Array, phflag: boolean) => Uint8Array;\n  a: bigint;\n  montgomeryBits: number;\n  powPminus2?: (x: bigint) => bigint;\n  xyToU?: (x: bigint, y: bigint) => bigint;\n  Gu: bigint;\n  randomBytes?: (bytesLength?: number) => Uint8Array;\n};\nexport type CurveFn = {\n  scalarMult: (scalar: Hex, u: Hex) => Uint8Array;\n  scalarMultBase: (scalar: Hex) => Uint8Array;\n  getSharedSecret: (privateKeyA: Hex, publicKeyB: Hex) => Uint8Array;\n  getPublicKey: (privateKey: Hex) => Uint8Array;\n  utils: { randomPrivateKey: () => Uint8Array };\n  GuBytes: Uint8Array;\n};\n\nfunction validateOpts(curve: CurveType) {\n  validateObject(\n    curve,\n    {\n      a: 'bigint',\n    },\n    {\n      montgomeryBits: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n      adjustScalarBytes: 'function',\n      domain: 'function',\n      powPminus2: 'function',\n      Gu: 'bigint',\n    }\n  );\n  // Set defaults\n  return Object.freeze({ ...curve } as const);\n}\n\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nexport function montgomery(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef);\n  const { P } = CURVE;\n  const modP = (n: bigint) => mod(n, P);\n  const montgomeryBits = CURVE.montgomeryBits;\n  const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n  const fieldLen = CURVE.nByteLength;\n  const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes: Uint8Array) => bytes);\n  const powPminus2 = CURVE.powPminus2 || ((x: bigint) => pow(x, P - BigInt(2), P));\n\n  // cswap from RFC7748. But it is not from RFC7748!\n  /*\n    cswap(swap, x_2, x_3):\n         dummy = mask(swap) AND (x_2 XOR x_3)\n         x_2 = x_2 XOR dummy\n         x_3 = x_3 XOR dummy\n         Return (x_2, x_3)\n  Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n   and x_3, computed, e.g., as mask(swap) = 0 - swap.\n  */\n  function cswap(swap: bigint, x_2: bigint, x_3: bigint): [bigint, bigint] {\n    const dummy = modP(swap * (x_2 - x_3));\n    x_2 = modP(x_2 - dummy);\n    x_3 = modP(x_3 + dummy);\n    return [x_2, x_3];\n  }\n\n  // Accepts 0 as well\n  function assertFieldElement(n: bigint): bigint {\n    if (typeof n === 'bigint' && _0n <= n && n < P) return n;\n    throw new Error('Expected valid scalar 0 < scalar < CURVE.P');\n  }\n\n  // x25519 from 4\n  // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n  const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n  /**\n   *\n   * @param pointU u coordinate (x) on Montgomery Curve 25519\n   * @param scalar by which the point would be multiplied\n   * @returns new Point on Montgomery curve\n   */\n  function montgomeryLadder(pointU: bigint, scalar: bigint): bigint {\n    const u = assertFieldElement(pointU);\n    // Section 5: Implementations MUST accept non-canonical values and process them as\n    // if they had been reduced modulo the field prime.\n    const k = assertFieldElement(scalar);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw: [bigint, bigint];\n    for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n      const k_t = (k >> t) & _1n;\n      swap ^= k_t;\n      sw = cswap(swap, x_2, x_3);\n      x_2 = sw[0];\n      x_3 = sw[1];\n      sw = cswap(swap, z_2, z_3);\n      z_2 = sw[0];\n      z_3 = sw[1];\n      swap = k_t;\n\n      const A = x_2 + z_2;\n      const AA = modP(A * A);\n      const B = x_2 - z_2;\n      const BB = modP(B * B);\n      const E = AA - BB;\n      const C = x_3 + z_3;\n      const D = x_3 - z_3;\n      const DA = modP(D * A);\n      const CB = modP(C * B);\n      const dacb = DA + CB;\n      const da_cb = DA - CB;\n      x_3 = modP(dacb * dacb);\n      z_3 = modP(x_1 * modP(da_cb * da_cb));\n      x_2 = modP(AA * BB);\n      z_2 = modP(E * (AA + modP(a24 * E)));\n    }\n    // (x_2, x_3) = cswap(swap, x_2, x_3)\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    // (z_2, z_3) = cswap(swap, z_2, z_3)\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    // z_2^(p - 2)\n    const z2 = powPminus2(z_2);\n    // Return x_2 * (z_2^(p - 2))\n    return modP(x_2 * z2);\n  }\n\n  function encodeUCoordinate(u: bigint): Uint8Array {\n    return numberToBytesLE(modP(u), montgomeryBytes);\n  }\n\n  function decodeUCoordinate(uEnc: Hex): bigint {\n    // Section 5: When receiving such an array, implementations of X25519\n    // MUST mask the most significant bit in the final byte.\n    // This is very ugly way, but it works because fieldLen-1 is outside of bounds for X448, so this becomes NOOP\n    // fieldLen - scalaryBytes = 1 for X448 and = 0 for X25519\n    const u = ensureBytes('u coordinate', uEnc, montgomeryBytes);\n    // u[fieldLen-1] crashes QuickJS (TypeError: out-of-bound numeric index)\n    if (fieldLen === montgomeryBytes) u[fieldLen - 1] &= 127; // 0b0111_1111\n    return bytesToNumberLE(u);\n  }\n  function decodeScalar(n: Hex): bigint {\n    const bytes = ensureBytes('scalar', n);\n    if (bytes.length !== montgomeryBytes && bytes.length !== fieldLen)\n      throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${bytes.length}`);\n    return bytesToNumberLE(adjustScalarBytes(bytes));\n  }\n  function scalarMult(scalar: Hex, u: Hex): Uint8Array {\n    const pointU = decodeUCoordinate(u);\n    const _scalar = decodeScalar(scalar);\n    const pu = montgomeryLadder(pointU, _scalar);\n    // The result was not contributory\n    // https://cr.yp.to/ecdh.html#validate\n    if (pu === _0n) throw new Error('Invalid private or public key received');\n    return encodeUCoordinate(pu);\n  }\n  // Computes public key from private. By doing scalar multiplication of base point.\n  const GuBytes = encodeUCoordinate(CURVE.Gu);\n  function scalarMultBase(scalar: Hex): Uint8Array {\n    return scalarMult(scalar, GuBytes);\n  }\n\n  return {\n    scalarMult,\n    scalarMultBase,\n    getSharedSecret: (privateKey: Hex, publicKey: Hex) => scalarMult(privateKey, publicKey),\n    getPublicKey: (privateKey: Hex): Uint8Array => scalarMultBase(privateKey),\n    utils: { randomPrivateKey: () => CURVE.randomBytes!(CURVE.nByteLength) },\n    GuBytes: GuBytes,\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport { bytesToNumberBE, CHash, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (dst instanceof Uint8Array) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction isBytes(item: unknown): void {\n  if (!(item instanceof Uint8Array)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'string',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  isBytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards, ExtPointType } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { mod, pow2, isNegativeLE, Field, FpSqrtEven } from './abstract/modular.js';\nimport {\n  equalBytes,\n  bytesToHex,\n  bytesToNumberLE,\n  numberToBytesLE,\n  Hex,\n  ensureBytes,\n} from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\nimport { AffinePoint } from './abstract/curve.js';\n\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\n\nconst ED25519_P = BigInt(\n  '57896044618658097711785492504343953926634992332820282019728792003956564819949'\n);\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt(\n  '19681161376707505956807079304988542015446066515923890162744021073123829784752'\n);\n\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x: bigint) {\n  const P = ED25519_P;\n  const x2 = (x * x) % P;\n  const b2 = (x2 * x) % P; // x^3, 11\n  const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n  const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n  const b10 = (pow2(b5, _5n, P) * b5) % P;\n  const b20 = (pow2(b10, _10n, P) * b10) % P;\n  const b40 = (pow2(b20, _20n, P) * b20) % P;\n  const b80 = (pow2(b40, _40n, P) * b40) % P;\n  const b160 = (pow2(b80, _80n, P) * b80) % P;\n  const b240 = (pow2(b160, _80n, P) * b80) % P;\n  const b250 = (pow2(b240, _10n, P) * b10) % P;\n  const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n  // ^ To pow to (p+3)/8, multiply it by x.\n  return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes: Uint8Array): Uint8Array {\n  // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n  // set the three least significant bits of the first byte\n  bytes[0] &= 248; // 0b1111_1000\n  // and the most significant bit of the last to zero,\n  bytes[31] &= 127; // 0b0111_1111\n  // set the second most significant bit of the last byte to 1\n  bytes[31] |= 64; // 0b0100_0000\n  return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u: bigint, v: bigint): { isValid: boolean; value: bigint } {\n  const P = ED25519_P;\n  const v3 = mod(v * v * v, P); // v³\n  const v7 = mod(v3 * v3 * v, P); // v⁷\n  // (p+3)/8 and (p-5)/8\n  const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n  let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n  const vx2 = mod(v * x * x, P); // vx²\n  const root1 = x; // First root candidate\n  const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n  const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n  const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n  const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n  if (useRoot1) x = root1;\n  if (useRoot2 || noRoot) x = root2; // We return root2 anyway, for const-time\n  if (isNegativeLE(x, P)) x = mod(-x, P);\n  return { isValid: useRoot1 || useRoot2, value: x };\n}\n\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n  '0100000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n  '0000000000000000000000000000000000000000000000000000000000000080',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n  'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n  '0000000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\n\nconst Fp = Field(ED25519_P, undefined, true);\n\nconst ed25519Defaults = {\n  // Param: a\n  a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n  // d is equal to -121665/121666 over finite field.\n  // Negative number is P - number, and division is invert(number, P)\n  d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n  // Finite field 𝔽p over which we'll do calculations; 2n ** 255n - 19n\n  Fp,\n  // Subgroup order: how many points curve has\n  // 2n ** 252n + 27742317777372353535851937790883648493n;\n  n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n  // Cofactor\n  h: BigInt(8),\n  // Base point (x, y) aka generator point\n  Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n  Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n  hash: sha512,\n  randomBytes,\n  adjustScalarBytes,\n  // dom2\n  // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n  // Constant-time, u/√v\n  uvRatio,\n} as const;\n\nexport const ed25519 = twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data: Uint8Array, ctx: Uint8Array, phflag: boolean) {\n  if (ctx.length > 255) throw new Error('Context is too big');\n  return concatBytes(\n    utf8ToBytes('SigEd25519 no Ed25519 collisions'),\n    new Uint8Array([phflag ? 1 : 0, ctx.length]),\n    ctx,\n    data\n  );\n}\nexport const ed25519ctx = twistedEdwards({ ...ed25519Defaults, domain: ed25519_domain });\nexport const ed25519ph = twistedEdwards({\n  ...ed25519Defaults,\n  domain: ed25519_domain,\n  prehash: sha512,\n});\n\nexport const x25519 = montgomery({\n  P: ED25519_P,\n  a: BigInt(486662),\n  montgomeryBits: 255, // n is 253 bits\n  nByteLength: 32,\n  Gu: BigInt(9),\n  powPminus2: (x: bigint): bigint => {\n    const P = ED25519_P;\n    // x^(p-2) aka x^(2^255-21)\n    const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n    return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n  },\n  adjustScalarBytes,\n  randomBytes,\n});\n\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const aPub = ed25519.getPublicKey(utils.randomPrivateKey());\n *   x25519.getSharedSecret(edwardsToMontgomery(aPub), edwardsToMontgomery(someonesPub))\n */\nexport function edwardsToMontgomery(edwardsPub: Hex): Uint8Array {\n  const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n  const _1n = BigInt(1);\n  return Fp.toBytes(Fp.create((y - _1n) * Fp.inv(y + _1n)));\n}\n\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\n\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\n\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u: bigint) {\n  let tv1 = Fp.sqr(u);       //  1.  tv1 = u^2\n  tv1 = Fp.mul(tv1, _2n);       //  2.  tv1 = 2 * tv1\n  let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n  let x1n = Fp.neg(ELL2_J);  //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n  let tv2 = Fp.sqr(xd);      //  5.  tv2 = xd^2\n  let gxd = Fp.mul(tv2, xd);    //  6.  gxd = tv2 * xd        # gxd = xd^3\n  let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n  gx1 = Fp.mul(gx1, x1n);       //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n  gx1 = Fp.add(gx1, tv2);       //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n  gx1 = Fp.mul(gx1, x1n);       //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n  let tv3 = Fp.sqr(gxd);     //  11. tv3 = gxd^2\n  tv2 = Fp.sqr(tv3);         //  12. tv2 = tv3^2           # gxd^4\n  tv3 = Fp.mul(tv3, gxd);       //  13. tv3 = tv3 * gxd       # gxd^3\n  tv3 = Fp.mul(tv3, gx1);       //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n  tv2 = Fp.mul(tv2, tv3);       //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n  let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n  y11 = Fp.mul(y11, tv3);       //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n  let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n  tv2 = Fp.sqr(y11);         //  19. tv2 = y11^2\n  tv2 = Fp.mul(tv2, gxd);       //  20. tv2 = tv2 * gxd\n  let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n  let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n  let x2n = Fp.mul(x1n, tv1);   //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n  let y21 = Fp.mul(y11, u);     //  24. y21 = y11 * u\n  y21 = Fp.mul(y21, ELL2_C2);   //  25. y21 = y21 * c2\n  let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n  let gx2 = Fp.mul(gx1, tv1);   //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n  tv2 = Fp.sqr(y21);         //  28. tv2 = y21^2\n  tv2 = Fp.mul(tv2, gxd);       //  29. tv2 = tv2 * gxd\n  let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n  let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n  tv2 = Fp.sqr(y1);          //  32. tv2 = y1^2\n  tv2 = Fp.mul(tv2, gxd);       //  33. tv2 = tv2 * gxd\n  let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n  let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n  let y = Fp.cmov(y2, y1, e3);  //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n  let e4 = Fp.isOdd(y);         //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n  y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n  return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\n\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u: bigint) {\n  const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) = map_to_curve_elligator2_curve25519(u)\n  let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n  xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n  let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n  let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n  let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n  let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n  let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n  xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n  xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n  yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n  yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n\n  const inv = Fp.invertBatch([xd, yd]); // batch division\n  return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst { hashToCurve, encodeToCurve } = htf.createHasher(\n  ed25519.ExtendedPoint,\n  (scalars: bigint[]) => map_to_curve_elligator2_edwards25519(scalars[0]),\n  {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n  }\n);\nexport { hashToCurve, encodeToCurve };\n\nfunction assertRstPoint(other: unknown) {\n  if (!(other instanceof RistrettoPoint)) throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = BigInt(\n  '19681161376707505956807079304988542015446066515923890162744021073123829784752'\n);\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt(\n  '25063068953384623474111414158702152701244531502492656460079210482610430750235'\n);\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt(\n  '54469307008909316920995813868745141605393597292927456921205312896311721017578'\n);\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt(\n  '1159843021668779879193775521855586647937357759715417654439879720876111806838'\n);\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt(\n  '40440834346308536858101042469323190826248399146238708352240133220865137265952'\n);\n// Calculates 1/√(number)\nconst invertSqrt = (number: bigint) => uvRatio(_1n, number);\n\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes: Uint8Array) =>\n  ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n\ntype ExtendedPoint = ExtPointType;\n\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0: bigint): ExtendedPoint {\n  const { d } = ed25519.CURVE;\n  const P = ed25519.CURVE.Fp.ORDER;\n  const mod = ed25519.CURVE.Fp.create;\n  const r = mod(SQRT_M1 * r0 * r0); // 1\n  const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n  let c = BigInt(-1); // 3\n  const D = mod((c - d * r) * mod(r + d)); // 4\n  let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n  let s_ = mod(s * r0); // 6\n  if (!isNegativeLE(s_, P)) s_ = mod(-s_);\n  if (!Ns_D_is_sq) s = s_; // 7\n  if (!Ns_D_is_sq) c = r; // 8\n  const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n  const s2 = s * s;\n  const W0 = mod((s + s) * D); // 10\n  const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n  const W2 = mod(_1n - s2); // 12\n  const W3 = mod(_1n + s2); // 13\n  return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nexport class RistrettoPoint {\n  static BASE = new RistrettoPoint(ed25519.ExtendedPoint.BASE);\n  static ZERO = new RistrettoPoint(ed25519.ExtendedPoint.ZERO);\n\n  // Private property to discourage combining ExtendedPoint + RistrettoPoint\n  // Always use Ristretto encoding/decoding instead.\n  constructor(private readonly ep: ExtendedPoint) {}\n\n  static fromAffine(ap: AffinePoint<bigint>) {\n    return new RistrettoPoint(ed25519.ExtendedPoint.fromAffine(ap));\n  }\n\n  /**\n   * Takes uniform output of 64-bit hash function like sha512 and converts it to `RistrettoPoint`.\n   * The hash-to-group operation applies Elligator twice and adds the results.\n   * **Note:** this is one-way map, there is no conversion from point to hash.\n   * https://ristretto.group/formulas/elligator.html\n   * @param hex 64-bit output of a hash function\n   */\n  static hashToCurve(hex: Hex): RistrettoPoint {\n    hex = ensureBytes('ristrettoHash', hex, 64);\n    const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n    const R1 = calcElligatorRistrettoMap(r1);\n    const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n    const R2 = calcElligatorRistrettoMap(r2);\n    return new RistrettoPoint(R1.add(R2));\n  }\n\n  /**\n   * Converts ristretto-encoded string to ristretto point.\n   * https://ristretto.group/formulas/decoding.html\n   * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n   */\n  static fromHex(hex: Hex): RistrettoPoint {\n    hex = ensureBytes('ristrettoHex', hex, 32);\n    const { a, d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n    const s = bytes255ToNumberLE(hex);\n    // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n    // 3. Check that s is non-negative, or else abort\n    if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P)) throw new Error(emsg);\n    const s2 = mod(s * s);\n    const u1 = mod(_1n + a * s2); // 4 (a is -1)\n    const u2 = mod(_1n - a * s2); // 5\n    const u1_2 = mod(u1 * u1);\n    const u2_2 = mod(u2 * u2);\n    const v = mod(a * d * u1_2 - u2_2); // 6\n    const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n    const Dx = mod(I * u2); // 8\n    const Dy = mod(I * Dx * v); // 9\n    let x = mod((s + s) * Dx); // 10\n    if (isNegativeLE(x, P)) x = mod(-x); // 10\n    const y = mod(u1 * Dy); // 11\n    const t = mod(x * y); // 12\n    if (!isValid || isNegativeLE(t, P) || y === _0n) throw new Error(emsg);\n    return new RistrettoPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n  }\n\n  /**\n   * Encodes ristretto point to Uint8Array.\n   * https://ristretto.group/formulas/encoding.html\n   */\n  toRawBytes(): Uint8Array {\n    let { ex: x, ey: y, ez: z, et: t } = this.ep;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const u1 = mod(mod(z + y) * mod(z - y)); // 1\n    const u2 = mod(x * y); // 2\n    // Square root always exists\n    const u2sq = mod(u2 * u2);\n    const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n    const D1 = mod(invsqrt * u1); // 4\n    const D2 = mod(invsqrt * u2); // 5\n    const zInv = mod(D1 * D2 * t); // 6\n    let D: bigint; // 7\n    if (isNegativeLE(t * zInv, P)) {\n      let _x = mod(y * SQRT_M1);\n      let _y = mod(x * SQRT_M1);\n      x = _x;\n      y = _y;\n      D = mod(D1 * INVSQRT_A_MINUS_D);\n    } else {\n      D = D2; // 8\n    }\n    if (isNegativeLE(x * zInv, P)) y = mod(-y); // 9\n    let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n    if (isNegativeLE(s, P)) s = mod(-s);\n    return numberToBytesLE(s, 32); // 11\n  }\n\n  toHex(): string {\n    return bytesToHex(this.toRawBytes());\n  }\n\n  toString(): string {\n    return this.toHex();\n  }\n\n  // Compare one point to another.\n  equals(other: RistrettoPoint): boolean {\n    assertRstPoint(other);\n    const { ex: X1, ey: Y1 } = this.ep;\n    const { ex: X2, ey: Y2 } = other.ep;\n    const mod = ed25519.CURVE.Fp.create;\n    // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n    const one = mod(X1 * Y2) === mod(Y1 * X2);\n    const two = mod(Y1 * Y2) === mod(X1 * X2);\n    return one || two;\n  }\n\n  add(other: RistrettoPoint): RistrettoPoint {\n    assertRstPoint(other);\n    return new RistrettoPoint(this.ep.add(other.ep));\n  }\n\n  subtract(other: RistrettoPoint): RistrettoPoint {\n    assertRstPoint(other);\n    return new RistrettoPoint(this.ep.subtract(other.ep));\n  }\n\n  multiply(scalar: bigint): RistrettoPoint {\n    return new RistrettoPoint(this.ep.multiply(scalar));\n  }\n\n  multiplyUnsafe(scalar: bigint): RistrettoPoint {\n    return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n  }\n}\n\n// https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/14/\n// Appendix B.  Hashing to ristretto255\nexport const hash_to_ristretto255 = (msg: Uint8Array, options: htf.htfBasicOpts) => {\n  const d = options.DST;\n  const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n  const uniform_bytes = htf.expand_message_xmd(msg, DST, 64, sha512);\n  const P = RistrettoPoint.hashToCurve(uniform_bytes);\n  return P;\n};\n","/**\n * This is a polyfill for ed25519 support in the browser, which is currently not available as part of the\n * WebCrypto API. The polyfill code is vendored from https://www.npmjs.com/package/@yoursunny/webcrypto-ed25519,\n * and modified to use a modern and more secure version of @noble/curves.\n */\n\nimport { ed25519 as ed } from \"@noble/curves/ed25519\";\nimport { bytesToHex } from \"@noble/curves/abstract/utils\";\nimport * as asn1 from \"@root/asn1\";\n// @ts-expect-error no typing\nimport { toBase64Url as b64encode, toBuffer as b64decode } from \"b64u-lite\";\n\nexport const C = {\n  wicgAlgorithm: \"Ed25519\",\n  nodeAlgorithm: \"NODE-ED25519\",\n  nodeNamedCurve: \"NODE-ED25519\",\n  kty: \"OKP\",\n  crv: \"Ed25519\",\n  oid: \"2B6570\".toLowerCase(),\n};\n\nexport function isEd25519Algorithm(a: any) {\n  return (\n    a === C.wicgAlgorithm ||\n    a === C.nodeAlgorithm ||\n    a.name === C.wicgAlgorithm ||\n    (a.name === C.nodeAlgorithm && a.namedCurve === C.nodeNamedCurve)\n  );\n}\n\nexport const Ed25519Algorithm: KeyAlgorithm = {\n  name: C.wicgAlgorithm,\n};\n\nfunction asUint8Array(b: BufferSource): Uint8Array {\n  if (b instanceof Uint8Array) {\n    return b;\n  }\n  if (b instanceof ArrayBuffer) {\n    return new Uint8Array(b);\n  }\n  return new Uint8Array(b.buffer, b.byteOffset, b.byteLength);\n}\n\nfunction asArrayBuffer(b: Uint8Array): ArrayBuffer {\n  if (b.byteLength === b.buffer.byteLength) {\n    return b.buffer;\n  }\n  return b.buffer.slice(b.byteOffset, b.byteLength);\n}\n\nconst slot = \"8d9df0f7-1363-4d2c-8152-ce4ed78f27d8\";\n\ninterface Ed25519CryptoKey extends CryptoKey {\n  [slot]: Uint8Array;\n}\n\nclass Ponyfill implements Record<keyof SubtleCrypto, Function> {\n  constructor(private readonly super_: SubtleCrypto) {\n    this.orig_ = {} as any;\n    for (const method of [\n      \"generateKey\",\n      \"exportKey\",\n      \"importKey\",\n      \"encrypt\",\n      \"decrypt\",\n      \"wrapKey\",\n      \"unwrapKey\",\n      \"deriveBits\",\n      \"deriveKey\",\n      \"sign\",\n      \"verify\",\n      \"digest\",\n    ] as const) {\n      if (this[method]) {\n        this.orig_[method] = super_[method];\n      } else {\n        this[method] = super_[method].bind(super_) as any;\n      }\n    }\n  }\n\n  private readonly orig_: Record<keyof SubtleCrypto, Function>;\n\n  public async generateKey(\n    algorithm: KeyAlgorithm,\n    extractable: boolean,\n    keyUsages: Iterable<KeyUsage>\n  ): Promise<CryptoKeyPair> {\n    if (isEd25519Algorithm(algorithm)) {\n      const pvt = ed.utils.randomPrivateKey();\n      const pub = await ed.getPublicKey(pvt);\n\n      const usages = Array.from(keyUsages);\n      const privateKey: Ed25519CryptoKey = {\n        algorithm,\n        extractable,\n        type: \"private\",\n        usages,\n        [slot]: pvt,\n      };\n      const publicKey: Ed25519CryptoKey = {\n        algorithm,\n        extractable: true,\n        type: \"public\",\n        usages,\n        [slot]: pub,\n      };\n      return { privateKey, publicKey };\n    }\n    return this.orig_.generateKey.apply(this.super_, arguments);\n  }\n\n  public async exportKey(\n    format: KeyFormat,\n    key: CryptoKey\n  ): Promise<JsonWebKey | ArrayBuffer> {\n    if (isEd25519Algorithm(key.algorithm) && key.extractable) {\n      const raw = (key as Ed25519CryptoKey)[slot];\n      switch (format) {\n        case \"jwk\": {\n          const jwk: JsonWebKey = {\n            kty: C.kty,\n            crv: C.crv,\n          };\n          if (key.type === \"public\") {\n            jwk.x = b64encode(raw);\n          } else {\n            jwk.d = b64encode(raw);\n            jwk.x = b64encode(await ed.getPublicKey(raw));\n          }\n          return jwk;\n        }\n        case \"spki\": {\n          return asArrayBuffer(\n            asn1.pack([\n              \"30\",\n              [\n                [\"30\", [[\"06\", \"2B6570\"]]],\n                [\"03\", raw],\n              ],\n            ])\n          );\n        }\n      }\n    }\n    return this.orig_.exportKey.apply(this.super_, arguments);\n  }\n\n  public async importKey(\n    format: KeyFormat,\n    keyData: JsonWebKey | BufferSource,\n    algorithm: Algorithm,\n    extractable: boolean,\n    keyUsages: Iterable<KeyUsage>\n  ): Promise<CryptoKey> {\n    if (isEd25519Algorithm(algorithm)) {\n      const usages = Array.from(keyUsages);\n      switch (format) {\n        case \"jwk\": {\n          const jwk = keyData as JsonWebKey;\n          if (jwk.kty !== C.kty || jwk.crv !== C.crv || !jwk.x) {\n            break;\n          }\n\n          const key: Ed25519CryptoKey = {\n            algorithm,\n            extractable,\n            type: jwk.d ? \"private\" : \"public\",\n            usages,\n            [slot]: b64decode(jwk.d ?? jwk.x),\n          };\n          return key;\n        }\n        case \"spki\": {\n          const der = asn1.parseVerbose(asUint8Array(keyData as BufferSource));\n          const algo = der.children?.[0]?.children?.[0]?.value;\n          const raw = der.children?.[1]?.value;\n          if (\n            !(algo instanceof Uint8Array) ||\n            bytesToHex(algo) !== C.oid ||\n            !(raw instanceof Uint8Array)\n          ) {\n            break;\n          }\n          const key: Ed25519CryptoKey = {\n            algorithm,\n            extractable: true,\n            type: \"public\",\n            usages,\n            [slot]: raw,\n          };\n          return key;\n        }\n      }\n    }\n    return this.orig_.importKey.apply(this.super_, arguments);\n  }\n\n  public async sign(\n    algorithm: AlgorithmIdentifier,\n    key: CryptoKey,\n    data: BufferSource\n  ): Promise<ArrayBuffer> {\n    if (\n      isEd25519Algorithm(algorithm) &&\n      isEd25519Algorithm(key.algorithm) &&\n      key.type === \"private\" &&\n      key.usages.includes(\"sign\")\n    ) {\n      return asArrayBuffer(\n        await ed.sign(asUint8Array(data), (key as Ed25519CryptoKey)[slot])\n      );\n    }\n    return this.orig_.sign.apply(this.super_, arguments);\n  }\n\n  public async verify(\n    algorithm: AlgorithmIdentifier,\n    key: CryptoKey,\n    signature: BufferSource,\n    data: BufferSource\n  ): Promise<boolean> {\n    if (\n      isEd25519Algorithm(algorithm) &&\n      isEd25519Algorithm(key.algorithm) &&\n      key.type === \"public\" &&\n      key.usages.includes(\"verify\")\n    ) {\n      const s = asUint8Array(signature);\n      const m = asUint8Array(data);\n      const p = (key as Ed25519CryptoKey)[slot];\n      return ed.verify(s, m, p);\n    }\n    return this.orig_.verify.apply(this.super_, arguments);\n  }\n}\ninterface Ponyfill extends Record<keyof SubtleCrypto, Function> {}\n\nexport function ponyfillEd25519(subtle = crypto.subtle): SubtleCrypto | null {\n  if (!subtle) {\n    // This is for JSDOM compatibility, since that environment doesn't support the crypto.subtle API at all.\n    // It shouldn't happen on a real browser\n    console.warn(`polyfill ed25519: crypto.subtle is not available`);\n    return null;\n  }\n\n  return new Ponyfill(subtle) as unknown as SubtleCrypto;\n}\n\nexport function polyfillEd25519(): boolean {\n  const ponyfill = ponyfillEd25519();\n\n  if (!ponyfill) {\n    return false;\n  }\n\n  Object.defineProperty(globalThis.crypto, \"subtle\", {\n    value: ponyfill,\n    configurable: true,\n  });\n\n  return true;\n}\n","export function atob(b64) {\n  return window.atob(b64) \n}\nexport function btoa(bin) {\n  return window.btoa(bin) \n}\nexport function toBase64(input) {\n  if (typeof input === 'string')\n    return window.btoa(unescape(encodeURIComponent(input)))\n  else {\n    var buffer = new Uint8Array(input);\n    var binary = '';\n    for (var b = 0; b < buffer.byteLength; b++) {\n        binary += String.fromCharCode(buffer[b]);\n    }\n    return window.btoa(binary);\n  }\n}\nexport function fromBase64(b64) {\n  return decodeURIComponent(escape(window.atob(b64)))\n}\nexport function toBuffer(b64) {\n  var utf8 = window.atob(b64);\n  var result = new Uint8Array(utf8.length);\n  for (var i = 0; i < utf8.length; i++) {\n      result[i] = utf8.charCodeAt(i);\n  }\n  return result;\n}\n","import { atob, btoa, toBase64, fromBase64, toBuffer as toBuffer64 } from 'b64-lite'\n\nexport function toBinaryString(b64u) {\n  return atob(b64u\n    .replace(/-/g, '+')\n    .replace(/_/g, '/'))\n}\n\nexport function fromBinaryString(binaryString, padding) {\n  return btoa(binaryString)\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, padding ? '=' : '')\n}\n\nexport function toBase64Url(input, padding) {\n  return toBase64(input)\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, padding ? '=' : '')\n}\n\nexport function fromBase64Url(b64u) {\n  return fromBase64(b64u\n    .replace(/-/g, '+')\n    .replace(/_/g, '/'))\n}\n\nexport function toBuffer(b64u) {\n  return toBuffer64(b64u\n    .replace(/-/g, '+')\n    .replace(/_/g, '/'))\n}\n","import { EditorPreferences } from \"../../types\";\nimport { extensionPort } from \"../../util/comlink\";\n\n/**\n * Returns the current user's editor preferences.\n */\nexport async function getPreferences(): Promise<EditorPreferences> {\n  return await extensionPort.experimental.editor.getPreferences();\n}\n","// internal API goes here\nexport {};\n","import {\n  ExecResult,\n  SpawnOptions,\n  SpawnOutput,\n  SpawnResult,\n} from \"../types/exec\";\nimport { extensionPort, proxy } from \"../util/comlink\";\n\n/**\n * Spawns a command, with given arguments and environment variables. Takes in callbacks,\n * and returns an object containing a promise that resolves when the command exits, and\n * a dispose function to kill the process\n */\nfunction spawn(options: SpawnOptions): SpawnOutput {\n  let execResult = extensionPort.exec(\n    proxy({\n      args: options.args,\n      env: options.env || {},\n      splitStderr: options.splitStderr ?? false,\n      onOutput: (output: string) => {\n        if (options.splitStderr) {\n          options.onStdOut?.(output);\n        } else {\n          options.onOutput?.(output);\n        }\n      },\n      onStdErr: (stderr: string) => {\n        if (options.splitStderr) {\n          options.onStdErr?.(stderr);\n        } else {\n          options.onOutput?.(stderr);\n        }\n      },\n      onError: (err: string) => {\n        throw err;\n      },\n    })\n  );\n\n  let dispose = async () => {\n    (await execResult).dispose();\n  };\n\n  const resultPromise = new Promise<SpawnResult>(async (resolve) => {\n    const { exitCode, error } = await (await execResult).promise;\n\n    resolve({\n      error,\n      exitCode: exitCode ?? 0,\n    });\n  });\n\n  return {\n    resultPromise,\n    dispose,\n  };\n}\n\n/**\n * Executes a command in the shell, with given arguments and environment variables\n */\nasync function exec(\n  command: string,\n  options: {\n    env?: Record<string, string>;\n  } = {}\n): Promise<ExecResult> {\n  let output = \"\";\n  const { resultPromise } = spawn({\n    args: [\"bash\", \"-c\", command],\n    env: options.env ?? {},\n    splitStderr: false,\n    onOutput: (newOutput: string) => {\n      output += newOutput;\n    },\n  });\n\n  const result = await resultPromise;\n\n  if (result.error) {\n    throw new Error(result.error);\n  }\n\n  return {\n    output,\n    exitCode: result.exitCode,\n  };\n}\n\nexport { spawn, exec };\n","import { extensionPort } from \"../util/comlink\";\n\nexport type Primitive = string | boolean | number | null | undefined | never;\n\nexport interface ObjectType {\n  [n: string | number]: Serializable;\n}\n\nexport interface NumericIndexType {\n  [n: number]: Serializable;\n}\n\nexport type Serializable = ObjectType | Primitive | NumericIndexType;\n\nexport type Data = Record<string, Serializable>;\n\n/**\n * Logs information to the Extension Devtools\n */\nasync function info(message: string, data?: Data) {\n  if (typeof message !== \"string\") {\n    throw new Error(\"Message must be a string\");\n  }\n\n  return await extensionPort.debug.info(message, data);\n}\n\n/**\n * Logs a warning to the extension devtools\n */\nasync function warn(message: string, data?: Data) {\n  if (typeof message !== \"string\") {\n    throw new Error(\"Message must be a string\");\n  }\n\n  return await extensionPort.debug.warn(message, data);\n}\n\n/**\n * Logs an error message to the extension devtools\n */\nasync function error(message: string, data?: Data) {\n  if (typeof message !== \"string\") {\n    throw new Error(\"Message must be a string\");\n  }\n\n  return await extensionPort.debug.error(message, data);\n}\n\n// Log is just an alias for info for now\nconst log = info;\n\nexport { info, warn, error, log };\n","{\n  \"name\": \"@replit/extensions\",\n  \"version\": \"1.7.2\",\n  \"description\": \"The Replit Extensions client is a module that allows you to easily interact with the Workspace.\",\n  \"types\": \"./src/index.ts\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": {\n      \"types\": \"./src/index.ts\",\n      \"import\": {\n        \"default\": \"./src/index.ts\"\n      }\n    }\n  },\n  \"publishConfig\": {\n    \"exports\": {\n      \"./package.json\": \"./package.json\",\n      \".\": {\n        \"types\": \"./dist/index.d.ts\",\n        \"import\": {\n          \"default\": \"./dist/index.js\"\n        },\n        \"default\": \"./dist/index.cjs\",\n        \"require\": \"./dist/index.js\"\n      }\n    },\n    \"types\": \"./dist/index.d.ts\"\n  },\n  \"type\": \"module\",\n  \"unpkg\": \"dist/index.global.js\",\n  \"scripts\": {\n    \"build\": \"tsup src/index.ts  --sourcemap --dts --platform browser --format esm,cjs,iife --global-name replit\",\n    \"test:build\": \"jest buildTests\",\n    \"lint\": \"npx prettier --write src/*\",\n    \"lint:check\": \"npx prettier -l src/*\",\n    \"type:check\": \"tsc --noEmit\",\n    \"clean\": \"rm -rf dist\",\n    \"generate:docs\": \"npx typedoc src/index.ts --json docs/main.json --plugin ./util/signature-plugin/index.cjs\"\n  },\n  \"files\": [\n    \"dist/*\"\n  ],\n  \"keywords\": [\n    \"replit\",\n    \"extensions\",\n    \"api-client\"\n  ],\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"@codemirror/state\": \"^6.2.0\",\n    \"@noble/curves\": \"^1.0.0\",\n    \"@root/asn1\": \"^1.0.0\",\n    \"b64u-lite\": \"^1.1.0\",\n    \"comlink\": \"^4.3.1\",\n    \"jose\": \"^4.14.4\"\n  },\n  \"devDependencies\": {\n    \"@types/root__asn1\": \"^1.0.2\",\n    \"esbuild\": \"^0.15.18\",\n    \"prettier\": \"^2.7.1\",\n    \"tsup\": \"^6.6.3\",\n    \"typedoc\": \"^0.24.8\",\n    \"typescript\": \"^4.9.3\"\n  }\n}\n"],"mappings":"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","names":["asn1","buf","asn1","eager","e","proxy","FsNodeType","ChangeEventType","ColorScheme","UserSocialType","HandshakeStatus","obj","returnValue","error","proxy","r","l","proxy","n","l","add","number","MapMode","set","insert","e","i","r","compare","get","init","prec","CharCategory","require","slot","n","e","add","set","proxy","error","proxy","proxy","bytes","message","hash","types","isObject","getNamedCurve","hash","isObject","isObject","decode","decode","isObject","n","hash","crypto","message","crypto","isLE","_32n","l","n","l","n","hexes","bytes","bytes","n","e","concatBytes","r","utf8ToBytes","n","_0n","_1n","_2n","number","u","r","n","Fp","n2","n","isLE","_0n","_1n","bytes","Fp","_0n","_1n","n","window","_0n","_1n","_2n","_8n","Fp","randomBytes","uvRatio","u","e","adjustScalarBytes","bytes","n","C","G","A","B","F","D","E","H","X3","Y3","T3","Z3","cofactor","hash","concatBytes","r","verify","error","_0n","_1n","validateOpts","n","adjustScalarBytes","bytes","u","t","C","utf8ToBytes","concatBytes","hash","u","e","u","_0n","_1n","_2n","_5n","bytes","u","pow","_2n","u","_1n","e","number","_1n","bytes","mod","r","t","_0n","toBase64","input","window","btoa","unescape","encodeURIComponent","buffer","Uint8Array","binary","b","byteLength","String","fromCharCode","toBuffer","b64","utf8","window","atob","result","Uint8Array","length","i","charCodeAt","toBase64Url","input","padding","toBase64","replace","toBuffer","b64u","toBuffer64","replace","e","proxy","output","error","message","e"]}